/*
 * Interface wrapper code.
 *
 * Generated by SIP 5.3.0
 *
 * Copyright (c) 2019 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtCore.h"

#line 28 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtCore/qoperatingsystemversion.sip"
#include <qoperatingsystemversion.h>
#line 29 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtCore/sipQtCoreQOperatingSystemVersion.cpp"

#line 27 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtCore/qstring.sip"
#include <qstring.h>
#line 33 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtCore/sipQtCoreQOperatingSystemVersion.cpp"


PyDoc_STRVAR(doc_QOperatingSystemVersion_current, "current() -> QOperatingSystemVersion");

extern "C" {static PyObject *meth_QOperatingSystemVersion_current(PyObject *, PyObject *);}
static PyObject *meth_QOperatingSystemVersion_current(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::QOperatingSystemVersion*sipRes;

            sipRes = new  ::QOperatingSystemVersion( ::QOperatingSystemVersion::current());

            return sipConvertFromNewType(sipRes,sipType_QOperatingSystemVersion,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QOperatingSystemVersion, sipName_current, doc_QOperatingSystemVersion_current);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QOperatingSystemVersion_currentType, "currentType() -> QOperatingSystemVersion.OSType");

extern "C" {static PyObject *meth_QOperatingSystemVersion_currentType(PyObject *, PyObject *);}
static PyObject *meth_QOperatingSystemVersion_currentType(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::QOperatingSystemVersion::OSType sipRes;

            sipRes =  ::QOperatingSystemVersion::currentType();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QOperatingSystemVersion_OSType);
        }
    }

    sipNoMethod(sipParseErr, sipName_QOperatingSystemVersion, sipName_currentType, doc_QOperatingSystemVersion_currentType);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QOperatingSystemVersion_majorVersion, "majorVersion(self) -> int");

extern "C" {static PyObject *meth_QOperatingSystemVersion_majorVersion(PyObject *, PyObject *);}
static PyObject *meth_QOperatingSystemVersion_majorVersion(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QOperatingSystemVersion *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOperatingSystemVersion, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->majorVersion();

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QOperatingSystemVersion, sipName_majorVersion, doc_QOperatingSystemVersion_majorVersion);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QOperatingSystemVersion_minorVersion, "minorVersion(self) -> int");

extern "C" {static PyObject *meth_QOperatingSystemVersion_minorVersion(PyObject *, PyObject *);}
static PyObject *meth_QOperatingSystemVersion_minorVersion(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QOperatingSystemVersion *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOperatingSystemVersion, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->minorVersion();

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QOperatingSystemVersion, sipName_minorVersion, doc_QOperatingSystemVersion_minorVersion);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QOperatingSystemVersion_microVersion, "microVersion(self) -> int");

extern "C" {static PyObject *meth_QOperatingSystemVersion_microVersion(PyObject *, PyObject *);}
static PyObject *meth_QOperatingSystemVersion_microVersion(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QOperatingSystemVersion *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOperatingSystemVersion, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->microVersion();

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QOperatingSystemVersion, sipName_microVersion, doc_QOperatingSystemVersion_microVersion);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QOperatingSystemVersion_segmentCount, "segmentCount(self) -> int");

extern "C" {static PyObject *meth_QOperatingSystemVersion_segmentCount(PyObject *, PyObject *);}
static PyObject *meth_QOperatingSystemVersion_segmentCount(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QOperatingSystemVersion *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOperatingSystemVersion, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->segmentCount();

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QOperatingSystemVersion, sipName_segmentCount, doc_QOperatingSystemVersion_segmentCount);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QOperatingSystemVersion_type, "type(self) -> QOperatingSystemVersion.OSType");

extern "C" {static PyObject *meth_QOperatingSystemVersion_type(PyObject *, PyObject *);}
static PyObject *meth_QOperatingSystemVersion_type(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QOperatingSystemVersion *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOperatingSystemVersion, &sipCpp))
        {
             ::QOperatingSystemVersion::OSType sipRes;

            sipRes = sipCpp->type();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QOperatingSystemVersion_OSType);
        }
    }

    sipNoMethod(sipParseErr, sipName_QOperatingSystemVersion, sipName_type, doc_QOperatingSystemVersion_type);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QOperatingSystemVersion_name, "name(self) -> str");

extern "C" {static PyObject *meth_QOperatingSystemVersion_name(PyObject *, PyObject *);}
static PyObject *meth_QOperatingSystemVersion_name(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QOperatingSystemVersion *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOperatingSystemVersion, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->name());

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QOperatingSystemVersion, sipName_name, doc_QOperatingSystemVersion_name);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *slot_QOperatingSystemVersion___lt__(PyObject *,PyObject *);}
static PyObject *slot_QOperatingSystemVersion___lt__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QOperatingSystemVersion *sipCpp = reinterpret_cast< ::QOperatingSystemVersion *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QOperatingSystemVersion));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QOperatingSystemVersion* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QOperatingSystemVersion, &a0))
        {
            bool sipRes;

            sipRes = operator<((*sipCpp), *a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtCore, lt_slot, sipType_QOperatingSystemVersion, sipSelf, sipArg);
}


extern "C" {static PyObject *slot_QOperatingSystemVersion___le__(PyObject *,PyObject *);}
static PyObject *slot_QOperatingSystemVersion___le__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QOperatingSystemVersion *sipCpp = reinterpret_cast< ::QOperatingSystemVersion *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QOperatingSystemVersion));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QOperatingSystemVersion* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QOperatingSystemVersion, &a0))
        {
            bool sipRes;

            sipRes = operator<=((*sipCpp), *a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtCore, le_slot, sipType_QOperatingSystemVersion, sipSelf, sipArg);
}


extern "C" {static PyObject *slot_QOperatingSystemVersion___gt__(PyObject *,PyObject *);}
static PyObject *slot_QOperatingSystemVersion___gt__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QOperatingSystemVersion *sipCpp = reinterpret_cast< ::QOperatingSystemVersion *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QOperatingSystemVersion));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QOperatingSystemVersion* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QOperatingSystemVersion, &a0))
        {
            bool sipRes;

            sipRes = operator>((*sipCpp), *a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtCore, gt_slot, sipType_QOperatingSystemVersion, sipSelf, sipArg);
}


extern "C" {static PyObject *slot_QOperatingSystemVersion___ge__(PyObject *,PyObject *);}
static PyObject *slot_QOperatingSystemVersion___ge__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QOperatingSystemVersion *sipCpp = reinterpret_cast< ::QOperatingSystemVersion *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QOperatingSystemVersion));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QOperatingSystemVersion* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QOperatingSystemVersion, &a0))
        {
            bool sipRes;

            sipRes = operator>=((*sipCpp), *a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtCore, ge_slot, sipType_QOperatingSystemVersion, sipSelf, sipArg);
}


/* Call the instance's destructor. */
extern "C" {static void release_QOperatingSystemVersion(void *, int);}
static void release_QOperatingSystemVersion(void *sipCppV, int)
{
    delete reinterpret_cast< ::QOperatingSystemVersion *>(sipCppV);
}


extern "C" {static void assign_QOperatingSystemVersion(void *, Py_ssize_t, void *);}
static void assign_QOperatingSystemVersion(void *sipDst, Py_ssize_t sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::QOperatingSystemVersion *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::QOperatingSystemVersion *>(sipSrc);
}


extern "C" {static void *copy_QOperatingSystemVersion(const void *, Py_ssize_t);}
static void *copy_QOperatingSystemVersion(const void *sipSrc, Py_ssize_t sipSrcIdx)
{
    return new  ::QOperatingSystemVersion(reinterpret_cast<const  ::QOperatingSystemVersion *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QOperatingSystemVersion(sipSimpleWrapper *);}
static void dealloc_QOperatingSystemVersion(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_QOperatingSystemVersion(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_QOperatingSystemVersion(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QOperatingSystemVersion(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::QOperatingSystemVersion *sipCpp = SIP_NULLPTR;

    {
         ::QOperatingSystemVersion::OSType a0;
        int a1;
        int a2 = -1;
        int a3 = -1;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_vminor,
            sipName_vmicro,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "Ei|ii", sipType_QOperatingSystemVersion_OSType, &a0, &a1, &a2, &a3))
        {
            sipCpp = new  ::QOperatingSystemVersion(a0,a1,a2,a3);

            return sipCpp;
        }
    }

    {
        const  ::QOperatingSystemVersion* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "J9", sipType_QOperatingSystemVersion, &a0))
        {
            sipCpp = new  ::QOperatingSystemVersion(*a0);

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's Python slots. */
static sipPySlotDef slots_QOperatingSystemVersion[] = {
    {(void *)slot_QOperatingSystemVersion___lt__, lt_slot},
    {(void *)slot_QOperatingSystemVersion___le__, le_slot},
    {(void *)slot_QOperatingSystemVersion___gt__, gt_slot},
    {(void *)slot_QOperatingSystemVersion___ge__, ge_slot},
    {0, (sipPySlotType)0}
};


static PyMethodDef methods_QOperatingSystemVersion[] = {
    {sipName_current, meth_QOperatingSystemVersion_current, METH_VARARGS, doc_QOperatingSystemVersion_current},
    {sipName_currentType, meth_QOperatingSystemVersion_currentType, METH_VARARGS, doc_QOperatingSystemVersion_currentType},
    {sipName_majorVersion, meth_QOperatingSystemVersion_majorVersion, METH_VARARGS, doc_QOperatingSystemVersion_majorVersion},
    {sipName_microVersion, meth_QOperatingSystemVersion_microVersion, METH_VARARGS, doc_QOperatingSystemVersion_microVersion},
    {sipName_minorVersion, meth_QOperatingSystemVersion_minorVersion, METH_VARARGS, doc_QOperatingSystemVersion_minorVersion},
    {sipName_name, meth_QOperatingSystemVersion_name, METH_VARARGS, doc_QOperatingSystemVersion_name},
    {sipName_segmentCount, meth_QOperatingSystemVersion_segmentCount, METH_VARARGS, doc_QOperatingSystemVersion_segmentCount},
    {sipName_type, meth_QOperatingSystemVersion_type, METH_VARARGS, doc_QOperatingSystemVersion_type}
};

static sipEnumMemberDef enummembers_QOperatingSystemVersion[] = {
    {sipName_Android, static_cast<int>( ::QOperatingSystemVersion::Android), 186},
    {sipName_IOS, static_cast<int>( ::QOperatingSystemVersion::IOS), 186},
    {sipName_MacOS, static_cast<int>( ::QOperatingSystemVersion::MacOS), 186},
    {sipName_TvOS, static_cast<int>( ::QOperatingSystemVersion::TvOS), 186},
    {sipName_Unknown, static_cast<int>( ::QOperatingSystemVersion::Unknown), 186},
    {sipName_WatchOS, static_cast<int>( ::QOperatingSystemVersion::WatchOS), 186},
    {sipName_Windows, static_cast<int>( ::QOperatingSystemVersion::Windows), 186},
};


extern "C" {static PyObject *varget_QOperatingSystemVersion_AndroidJellyBean(void *, PyObject *, PyObject *);}
static PyObject *varget_QOperatingSystemVersion_AndroidJellyBean(void *, PyObject *, PyObject *)
{
    const  ::QOperatingSystemVersion*sipVal;

    sipVal = new  ::QOperatingSystemVersion( ::QOperatingSystemVersion::AndroidJellyBean);

    return sipConvertFromNewType(const_cast< ::QOperatingSystemVersion *>(sipVal), sipType_QOperatingSystemVersion, SIP_NULLPTR);
}


extern "C" {static PyObject *varget_QOperatingSystemVersion_AndroidJellyBean_MR1(void *, PyObject *, PyObject *);}
static PyObject *varget_QOperatingSystemVersion_AndroidJellyBean_MR1(void *, PyObject *, PyObject *)
{
    const  ::QOperatingSystemVersion*sipVal;

    sipVal = new  ::QOperatingSystemVersion( ::QOperatingSystemVersion::AndroidJellyBean_MR1);

    return sipConvertFromNewType(const_cast< ::QOperatingSystemVersion *>(sipVal), sipType_QOperatingSystemVersion, SIP_NULLPTR);
}


extern "C" {static PyObject *varget_QOperatingSystemVersion_AndroidJellyBean_MR2(void *, PyObject *, PyObject *);}
static PyObject *varget_QOperatingSystemVersion_AndroidJellyBean_MR2(void *, PyObject *, PyObject *)
{
    const  ::QOperatingSystemVersion*sipVal;

    sipVal = new  ::QOperatingSystemVersion( ::QOperatingSystemVersion::AndroidJellyBean_MR2);

    return sipConvertFromNewType(const_cast< ::QOperatingSystemVersion *>(sipVal), sipType_QOperatingSystemVersion, SIP_NULLPTR);
}


extern "C" {static PyObject *varget_QOperatingSystemVersion_AndroidKitKat(void *, PyObject *, PyObject *);}
static PyObject *varget_QOperatingSystemVersion_AndroidKitKat(void *, PyObject *, PyObject *)
{
    const  ::QOperatingSystemVersion*sipVal;

    sipVal = new  ::QOperatingSystemVersion( ::QOperatingSystemVersion::AndroidKitKat);

    return sipConvertFromNewType(const_cast< ::QOperatingSystemVersion *>(sipVal), sipType_QOperatingSystemVersion, SIP_NULLPTR);
}


extern "C" {static PyObject *varget_QOperatingSystemVersion_AndroidLollipop(void *, PyObject *, PyObject *);}
static PyObject *varget_QOperatingSystemVersion_AndroidLollipop(void *, PyObject *, PyObject *)
{
    const  ::QOperatingSystemVersion*sipVal;

    sipVal = new  ::QOperatingSystemVersion( ::QOperatingSystemVersion::AndroidLollipop);

    return sipConvertFromNewType(const_cast< ::QOperatingSystemVersion *>(sipVal), sipType_QOperatingSystemVersion, SIP_NULLPTR);
}


extern "C" {static PyObject *varget_QOperatingSystemVersion_AndroidLollipop_MR1(void *, PyObject *, PyObject *);}
static PyObject *varget_QOperatingSystemVersion_AndroidLollipop_MR1(void *, PyObject *, PyObject *)
{
    const  ::QOperatingSystemVersion*sipVal;

    sipVal = new  ::QOperatingSystemVersion( ::QOperatingSystemVersion::AndroidLollipop_MR1);

    return sipConvertFromNewType(const_cast< ::QOperatingSystemVersion *>(sipVal), sipType_QOperatingSystemVersion, SIP_NULLPTR);
}


extern "C" {static PyObject *varget_QOperatingSystemVersion_AndroidMarshmallow(void *, PyObject *, PyObject *);}
static PyObject *varget_QOperatingSystemVersion_AndroidMarshmallow(void *, PyObject *, PyObject *)
{
    const  ::QOperatingSystemVersion*sipVal;

    sipVal = new  ::QOperatingSystemVersion( ::QOperatingSystemVersion::AndroidMarshmallow);

    return sipConvertFromNewType(const_cast< ::QOperatingSystemVersion *>(sipVal), sipType_QOperatingSystemVersion, SIP_NULLPTR);
}


extern "C" {static PyObject *varget_QOperatingSystemVersion_AndroidNougat(void *, PyObject *, PyObject *);}
static PyObject *varget_QOperatingSystemVersion_AndroidNougat(void *, PyObject *, PyObject *)
{
    const  ::QOperatingSystemVersion*sipVal;

    sipVal = new  ::QOperatingSystemVersion( ::QOperatingSystemVersion::AndroidNougat);

    return sipConvertFromNewType(const_cast< ::QOperatingSystemVersion *>(sipVal), sipType_QOperatingSystemVersion, SIP_NULLPTR);
}


extern "C" {static PyObject *varget_QOperatingSystemVersion_AndroidNougat_MR1(void *, PyObject *, PyObject *);}
static PyObject *varget_QOperatingSystemVersion_AndroidNougat_MR1(void *, PyObject *, PyObject *)
{
    const  ::QOperatingSystemVersion*sipVal;

    sipVal = new  ::QOperatingSystemVersion( ::QOperatingSystemVersion::AndroidNougat_MR1);

    return sipConvertFromNewType(const_cast< ::QOperatingSystemVersion *>(sipVal), sipType_QOperatingSystemVersion, SIP_NULLPTR);
}


extern "C" {static PyObject *varget_QOperatingSystemVersion_AndroidOreo(void *, PyObject *, PyObject *);}
static PyObject *varget_QOperatingSystemVersion_AndroidOreo(void *, PyObject *, PyObject *)
{
    const  ::QOperatingSystemVersion*sipVal;

    sipVal = new  ::QOperatingSystemVersion( ::QOperatingSystemVersion::AndroidOreo);

    return sipConvertFromNewType(const_cast< ::QOperatingSystemVersion *>(sipVal), sipType_QOperatingSystemVersion, SIP_NULLPTR);
}


extern "C" {static PyObject *varget_QOperatingSystemVersion_MacOSHighSierra(void *, PyObject *, PyObject *);}
static PyObject *varget_QOperatingSystemVersion_MacOSHighSierra(void *, PyObject *, PyObject *)
{
    const  ::QOperatingSystemVersion*sipVal;

    sipVal = new  ::QOperatingSystemVersion( ::QOperatingSystemVersion::MacOSHighSierra);

    return sipConvertFromNewType(const_cast< ::QOperatingSystemVersion *>(sipVal), sipType_QOperatingSystemVersion, SIP_NULLPTR);
}


extern "C" {static PyObject *varget_QOperatingSystemVersion_MacOSMojave(void *, PyObject *, PyObject *);}
static PyObject *varget_QOperatingSystemVersion_MacOSMojave(void *, PyObject *, PyObject *)
{
    const  ::QOperatingSystemVersion*sipVal;

    sipVal = new  ::QOperatingSystemVersion( ::QOperatingSystemVersion::MacOSMojave);

    return sipConvertFromNewType(const_cast< ::QOperatingSystemVersion *>(sipVal), sipType_QOperatingSystemVersion, SIP_NULLPTR);
}


extern "C" {static PyObject *varget_QOperatingSystemVersion_MacOSSierra(void *, PyObject *, PyObject *);}
static PyObject *varget_QOperatingSystemVersion_MacOSSierra(void *, PyObject *, PyObject *)
{
    const  ::QOperatingSystemVersion*sipVal;

    sipVal = new  ::QOperatingSystemVersion( ::QOperatingSystemVersion::MacOSSierra);

    return sipConvertFromNewType(const_cast< ::QOperatingSystemVersion *>(sipVal), sipType_QOperatingSystemVersion, SIP_NULLPTR);
}


extern "C" {static PyObject *varget_QOperatingSystemVersion_OSXElCapitan(void *, PyObject *, PyObject *);}
static PyObject *varget_QOperatingSystemVersion_OSXElCapitan(void *, PyObject *, PyObject *)
{
    const  ::QOperatingSystemVersion*sipVal;

    sipVal = new  ::QOperatingSystemVersion( ::QOperatingSystemVersion::OSXElCapitan);

    return sipConvertFromNewType(const_cast< ::QOperatingSystemVersion *>(sipVal), sipType_QOperatingSystemVersion, SIP_NULLPTR);
}


extern "C" {static PyObject *varget_QOperatingSystemVersion_OSXMavericks(void *, PyObject *, PyObject *);}
static PyObject *varget_QOperatingSystemVersion_OSXMavericks(void *, PyObject *, PyObject *)
{
    const  ::QOperatingSystemVersion*sipVal;

    sipVal = new  ::QOperatingSystemVersion( ::QOperatingSystemVersion::OSXMavericks);

    return sipConvertFromNewType(const_cast< ::QOperatingSystemVersion *>(sipVal), sipType_QOperatingSystemVersion, SIP_NULLPTR);
}


extern "C" {static PyObject *varget_QOperatingSystemVersion_OSXYosemite(void *, PyObject *, PyObject *);}
static PyObject *varget_QOperatingSystemVersion_OSXYosemite(void *, PyObject *, PyObject *)
{
    const  ::QOperatingSystemVersion*sipVal;

    sipVal = new  ::QOperatingSystemVersion( ::QOperatingSystemVersion::OSXYosemite);

    return sipConvertFromNewType(const_cast< ::QOperatingSystemVersion *>(sipVal), sipType_QOperatingSystemVersion, SIP_NULLPTR);
}


extern "C" {static PyObject *varget_QOperatingSystemVersion_Windows10(void *, PyObject *, PyObject *);}
static PyObject *varget_QOperatingSystemVersion_Windows10(void *, PyObject *, PyObject *)
{
    const  ::QOperatingSystemVersion*sipVal;

    sipVal = new  ::QOperatingSystemVersion( ::QOperatingSystemVersion::Windows10);

    return sipConvertFromNewType(const_cast< ::QOperatingSystemVersion *>(sipVal), sipType_QOperatingSystemVersion, SIP_NULLPTR);
}


extern "C" {static PyObject *varget_QOperatingSystemVersion_Windows7(void *, PyObject *, PyObject *);}
static PyObject *varget_QOperatingSystemVersion_Windows7(void *, PyObject *, PyObject *)
{
    const  ::QOperatingSystemVersion*sipVal;

    sipVal = new  ::QOperatingSystemVersion( ::QOperatingSystemVersion::Windows7);

    return sipConvertFromNewType(const_cast< ::QOperatingSystemVersion *>(sipVal), sipType_QOperatingSystemVersion, SIP_NULLPTR);
}


extern "C" {static PyObject *varget_QOperatingSystemVersion_Windows8(void *, PyObject *, PyObject *);}
static PyObject *varget_QOperatingSystemVersion_Windows8(void *, PyObject *, PyObject *)
{
    const  ::QOperatingSystemVersion*sipVal;

    sipVal = new  ::QOperatingSystemVersion( ::QOperatingSystemVersion::Windows8);

    return sipConvertFromNewType(const_cast< ::QOperatingSystemVersion *>(sipVal), sipType_QOperatingSystemVersion, SIP_NULLPTR);
}


extern "C" {static PyObject *varget_QOperatingSystemVersion_Windows8_1(void *, PyObject *, PyObject *);}
static PyObject *varget_QOperatingSystemVersion_Windows8_1(void *, PyObject *, PyObject *)
{
    const  ::QOperatingSystemVersion*sipVal;

    sipVal = new  ::QOperatingSystemVersion( ::QOperatingSystemVersion::Windows8_1);

    return sipConvertFromNewType(const_cast< ::QOperatingSystemVersion *>(sipVal), sipType_QOperatingSystemVersion, SIP_NULLPTR);
}

sipVariableDef variables_QOperatingSystemVersion[] = {
    {ClassVariable, sipName_AndroidJellyBean, (PyMethodDef *)varget_QOperatingSystemVersion_AndroidJellyBean, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_AndroidJellyBean_MR1, (PyMethodDef *)varget_QOperatingSystemVersion_AndroidJellyBean_MR1, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_AndroidJellyBean_MR2, (PyMethodDef *)varget_QOperatingSystemVersion_AndroidJellyBean_MR2, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_AndroidKitKat, (PyMethodDef *)varget_QOperatingSystemVersion_AndroidKitKat, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_AndroidLollipop, (PyMethodDef *)varget_QOperatingSystemVersion_AndroidLollipop, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_AndroidLollipop_MR1, (PyMethodDef *)varget_QOperatingSystemVersion_AndroidLollipop_MR1, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_AndroidMarshmallow, (PyMethodDef *)varget_QOperatingSystemVersion_AndroidMarshmallow, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_AndroidNougat, (PyMethodDef *)varget_QOperatingSystemVersion_AndroidNougat, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_AndroidNougat_MR1, (PyMethodDef *)varget_QOperatingSystemVersion_AndroidNougat_MR1, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_AndroidOreo, (PyMethodDef *)varget_QOperatingSystemVersion_AndroidOreo, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_MacOSHighSierra, (PyMethodDef *)varget_QOperatingSystemVersion_MacOSHighSierra, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_MacOSMojave, (PyMethodDef *)varget_QOperatingSystemVersion_MacOSMojave, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_MacOSSierra, (PyMethodDef *)varget_QOperatingSystemVersion_MacOSSierra, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_OSXElCapitan, (PyMethodDef *)varget_QOperatingSystemVersion_OSXElCapitan, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_OSXMavericks, (PyMethodDef *)varget_QOperatingSystemVersion_OSXMavericks, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_OSXYosemite, (PyMethodDef *)varget_QOperatingSystemVersion_OSXYosemite, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_Windows10, (PyMethodDef *)varget_QOperatingSystemVersion_Windows10, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_Windows7, (PyMethodDef *)varget_QOperatingSystemVersion_Windows7, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_Windows8, (PyMethodDef *)varget_QOperatingSystemVersion_Windows8, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_Windows8_1, (PyMethodDef *)varget_QOperatingSystemVersion_Windows8_1, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
};

PyDoc_STRVAR(doc_QOperatingSystemVersion, "\1QOperatingSystemVersion(QOperatingSystemVersion.OSType, int, vminor: int = -1, vmicro: int = -1)\n"
"QOperatingSystemVersion(QOperatingSystemVersion)");


static pyqt5ClassPluginDef plugin_QOperatingSystemVersion = {
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtCore_QOperatingSystemVersion = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QOperatingSystemVersion,
        SIP_NULLPTR,
        &plugin_QOperatingSystemVersion
    },
    {
        sipNameNr_QOperatingSystemVersion,
        {0, 0, 1},
        8, methods_QOperatingSystemVersion,
        7, enummembers_QOperatingSystemVersion,
        20, variables_QOperatingSystemVersion,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QOperatingSystemVersion,
    -1,
    sipNameNr_sip_simplewrapper,
    SIP_NULLPTR,
    slots_QOperatingSystemVersion,
    init_type_QOperatingSystemVersion,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_QOperatingSystemVersion,
    assign_QOperatingSystemVersion,
    SIP_NULLPTR,
    copy_QOperatingSystemVersion,
    release_QOperatingSystemVersion,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
