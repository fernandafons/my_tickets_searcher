/*
 * Interface wrapper code.
 *
 * Generated by SIP 5.3.0
 *
 * Copyright (c) 2019 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtCore.h"

#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtCore/qlocale.sip"
#include <qlocale.h>
#line 29 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtCore/sipQtCoreQLocale.cpp"

#line 27 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtCore/qstring.sip"
#include <qstring.h>
#line 33 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtCore/sipQtCoreQLocale.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtCore/qlocale.sip"
#include <qlocale.h>
#line 36 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtCore/sipQtCoreQLocale.cpp"
#line 36 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtCore/qstringlist.sip"
#include <qstringlist.h>
#line 39 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtCore/sipQtCoreQLocale.cpp"
#line 38 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 42 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtCore/sipQtCoreQLocale.cpp"
#line 856 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtCore/qpycore_qlist.sip"
#include <Qt>
#line 45 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtCore/sipQtCoreQLocale.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 48 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtCore/sipQtCoreQLocale.cpp"
#line 27 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtCore/qchar.sip"
#include <qchar.h>
#line 51 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtCore/sipQtCoreQLocale.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtCore/qlocale.sip"
#include <qlocale.h>
#line 54 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtCore/sipQtCoreQLocale.cpp"
#line 305 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtCore/qdatetime.sip"
#include <qdatetime.h>
#line 57 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtCore/sipQtCoreQLocale.cpp"
#line 161 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtCore/qdatetime.sip"
#include <qdatetime.h>
#line 60 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtCore/sipQtCoreQLocale.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtCore/qdatetime.sip"
#include <qdatetime.h>
#line 63 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtCore/sipQtCoreQLocale.cpp"


PyDoc_STRVAR(doc_QLocale_language, "language(self) -> QLocale.Language");

extern "C" {static PyObject *meth_QLocale_language(PyObject *, PyObject *);}
static PyObject *meth_QLocale_language(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::QLocale::Language sipRes;

            sipRes = sipCpp->language();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QLocale_Language);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_language, doc_QLocale_language);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_country, "country(self) -> QLocale.Country");

extern "C" {static PyObject *meth_QLocale_country(PyObject *, PyObject *);}
static PyObject *meth_QLocale_country(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::QLocale::Country sipRes;

            sipRes = sipCpp->country();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QLocale_Country);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_country, doc_QLocale_country);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_name, "name(self) -> str");

extern "C" {static PyObject *meth_QLocale_name(PyObject *, PyObject *);}
static PyObject *meth_QLocale_name(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->name());

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_name, doc_QLocale_name);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_toShort, "toShort(self, str) -> Tuple[int, bool]");

extern "C" {static PyObject *meth_QLocale_toShort(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_toShort(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
        bool a1;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1", &sipSelf, sipType_QLocale, &sipCpp, sipType_QString,&a0, &a0State))
        {
            short sipRes;

            sipRes = sipCpp->toShort(*a0,&a1);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipBuildResult(0,"(hb)",sipRes,a1);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_toShort, doc_QLocale_toShort);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_toUShort, "toUShort(self, str) -> Tuple[int, bool]");

extern "C" {static PyObject *meth_QLocale_toUShort(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_toUShort(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
        bool a1;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1", &sipSelf, sipType_QLocale, &sipCpp, sipType_QString,&a0, &a0State))
        {
             ::ushort sipRes;

            sipRes = sipCpp->toUShort(*a0,&a1);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipBuildResult(0,"(tb)",sipRes,a1);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_toUShort, doc_QLocale_toUShort);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_toInt, "toInt(self, str) -> Tuple[int, bool]");

extern "C" {static PyObject *meth_QLocale_toInt(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_toInt(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
        bool a1;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1", &sipSelf, sipType_QLocale, &sipCpp, sipType_QString,&a0, &a0State))
        {
            int sipRes;

            sipRes = sipCpp->toInt(*a0,&a1);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipBuildResult(0,"(ib)",sipRes,a1);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_toInt, doc_QLocale_toInt);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_toUInt, "toUInt(self, str) -> Tuple[int, bool]");

extern "C" {static PyObject *meth_QLocale_toUInt(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_toUInt(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
        bool a1;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1", &sipSelf, sipType_QLocale, &sipCpp, sipType_QString,&a0, &a0State))
        {
             ::uint sipRes;

            sipRes = sipCpp->toUInt(*a0,&a1);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipBuildResult(0,"(ub)",sipRes,a1);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_toUInt, doc_QLocale_toUInt);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_toLongLong, "toLongLong(self, str) -> Tuple[int, bool]");

extern "C" {static PyObject *meth_QLocale_toLongLong(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_toLongLong(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
        bool a1;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1", &sipSelf, sipType_QLocale, &sipCpp, sipType_QString,&a0, &a0State))
        {
             ::qlonglong sipRes;

            sipRes = sipCpp->toLongLong(*a0,&a1);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipBuildResult(0,"(nb)",sipRes,a1);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_toLongLong, doc_QLocale_toLongLong);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_toULongLong, "toULongLong(self, str) -> Tuple[int, bool]");

extern "C" {static PyObject *meth_QLocale_toULongLong(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_toULongLong(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
        bool a1;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1", &sipSelf, sipType_QLocale, &sipCpp, sipType_QString,&a0, &a0State))
        {
             ::qulonglong sipRes;

            sipRes = sipCpp->toULongLong(*a0,&a1);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipBuildResult(0,"(ob)",sipRes,a1);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_toULongLong, doc_QLocale_toULongLong);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_toFloat, "toFloat(self, str) -> Tuple[float, bool]");

extern "C" {static PyObject *meth_QLocale_toFloat(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_toFloat(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
        bool a1;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1", &sipSelf, sipType_QLocale, &sipCpp, sipType_QString,&a0, &a0State))
        {
            float sipRes;

            sipRes = sipCpp->toFloat(*a0,&a1);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipBuildResult(0,"(fb)",sipRes,a1);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_toFloat, doc_QLocale_toFloat);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_toDouble, "toDouble(self, str) -> Tuple[float, bool]");

extern "C" {static PyObject *meth_QLocale_toDouble(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_toDouble(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
        bool a1;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1", &sipSelf, sipType_QLocale, &sipCpp, sipType_QString,&a0, &a0State))
        {
            double sipRes;

            sipRes = sipCpp->toDouble(*a0,&a1);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipBuildResult(0,"(db)",sipRes,a1);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_toDouble, doc_QLocale_toDouble);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_toString, "toString(self, float, format: str = 'g', precision: int = 6) -> str\n"
"toString(self, Union[QDateTime, datetime.datetime], str) -> str\n"
"toString(self, Union[QDateTime, datetime.datetime], format: QLocale.FormatType = QLocale.LongFormat) -> str\n"
"toString(self, Union[QDate, datetime.date], str) -> str\n"
"toString(self, Union[QDate, datetime.date], format: QLocale.FormatType = QLocale.LongFormat) -> str\n"
"toString(self, Union[QTime, datetime.time], str) -> str\n"
"toString(self, Union[QTime, datetime.time], format: QLocale.FormatType = QLocale.LongFormat) -> str\n"
"toString(self, int) -> str");

extern "C" {static PyObject *meth_QLocale_toString(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_toString(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        double a0;
        char a1 = 'g';
        int a2 = 6;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_format,
            sipName_precision,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BXd|aAi", &sipSelf, sipType_QLocale, &sipCpp, &a0, &a1, &a2))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->toString(a0,a1,a2));

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    {
        const  ::QDateTime* a0;
        int a0State = 0;
        const  ::QString* a1;
        int a1State = 0;
        const  ::QLocale *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, "BJ1J1", &sipSelf, sipType_QLocale, &sipCpp, sipType_QDateTime, &a0, &a0State, sipType_QString,&a1, &a1State))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->toString(*a0,*a1));
            sipReleaseType(const_cast< ::QDateTime *>(a0),sipType_QDateTime,a0State);
            sipReleaseType(const_cast< ::QString *>(a1),sipType_QString,a1State);

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    {
        const  ::QDateTime* a0;
        int a0State = 0;
         ::QLocale::FormatType a1 = QLocale::LongFormat;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_format,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1|E", &sipSelf, sipType_QLocale, &sipCpp, sipType_QDateTime, &a0, &a0State, sipType_QLocale_FormatType, &a1))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->toString(*a0,a1));
            sipReleaseType(const_cast< ::QDateTime *>(a0),sipType_QDateTime,a0State);

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    {
        const  ::QDate* a0;
        int a0State = 0;
        const  ::QString* a1;
        int a1State = 0;
        const  ::QLocale *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, "BJ1J1", &sipSelf, sipType_QLocale, &sipCpp, sipType_QDate, &a0, &a0State, sipType_QString,&a1, &a1State))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->toString(*a0,*a1));
            sipReleaseType(const_cast< ::QDate *>(a0),sipType_QDate,a0State);
            sipReleaseType(const_cast< ::QString *>(a1),sipType_QString,a1State);

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    {
        const  ::QDate* a0;
        int a0State = 0;
         ::QLocale::FormatType a1 = QLocale::LongFormat;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_format,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1|E", &sipSelf, sipType_QLocale, &sipCpp, sipType_QDate, &a0, &a0State, sipType_QLocale_FormatType, &a1))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->toString(*a0,a1));
            sipReleaseType(const_cast< ::QDate *>(a0),sipType_QDate,a0State);

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    {
        const  ::QTime* a0;
        int a0State = 0;
        const  ::QString* a1;
        int a1State = 0;
        const  ::QLocale *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, "BJ1J1", &sipSelf, sipType_QLocale, &sipCpp, sipType_QTime, &a0, &a0State, sipType_QString,&a1, &a1State))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->toString(*a0,*a1));
            sipReleaseType(const_cast< ::QTime *>(a0),sipType_QTime,a0State);
            sipReleaseType(const_cast< ::QString *>(a1),sipType_QString,a1State);

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    {
        const  ::QTime* a0;
        int a0State = 0;
         ::QLocale::FormatType a1 = QLocale::LongFormat;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_format,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1|E", &sipSelf, sipType_QLocale, &sipCpp, sipType_QTime, &a0, &a0State, sipType_QLocale_FormatType, &a1))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->toString(*a0,a1));
            sipReleaseType(const_cast< ::QTime *>(a0),sipType_QTime,a0State);

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    {
        PyObject * a0;
        const  ::QLocale *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, "BP0", &sipSelf, sipType_QLocale, &sipCpp, &a0))
        {
             ::QString*sipRes = 0;
            sipErrorState sipError = sipErrorNone;

#line 1425 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtCore/qlocale.sip"
        // Convert a Python int avoiding overflow as much as possible.
        
        static PyObject *zero = 0;
        if (!zero)
            zero = PyLong_FromLong(0);
        
        int rc = PyObject_RichCompareBool(a0, zero, Py_LT);
        
        PyErr_Clear();
        
        if (rc < 0)
        {
            sipError = sipBadCallableArg(0, a0);
        }
        else if (rc)
        {
        #if defined(HAVE_LONG_LONG)
            PY_LONG_LONG value = PyLong_AsLongLong(a0);
        #else
            long value = PyLong_AsLong(a0);
        #endif
        
            if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_OverflowError))
            {
                sipError = sipBadCallableArg(0, a0);
            }
            else
            {
                sipRes = new QString(sipCpp->toString(value));
            }
        }
        else
        {
        #if PY_MAJOR_VERSION >= 3
        #if defined(HAVE_LONG_LONG)
            unsigned PY_LONG_LONG value = PyLong_AsUnsignedLongLongMask(a0);
        #else
            unsigned long value = PyLong_AsUnsignedLongMask(a0);
        #endif
        #else
        #if defined(HAVE_LONG_LONG)
            unsigned PY_LONG_LONG value = PyInt_AsUnsignedLongLongMask(a0);
        #else
            unsigned long value = PyInt_AsUnsignedLongMask(a0);
        #endif
        #endif
        
            if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_OverflowError))
            {
                sipError = sipBadCallableArg(0, a0);
            }
            else
            {
                sipRes = new QString(sipCpp->toString(value));
            }
        }
#line 660 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtCore/sipQtCoreQLocale.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_toString, doc_QLocale_toString);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_languageToString, "languageToString(QLocale.Language) -> str");

extern "C" {static PyObject *meth_QLocale_languageToString(PyObject *, PyObject *);}
static PyObject *meth_QLocale_languageToString(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLocale::Language a0;

        if (sipParseArgs(&sipParseErr, sipArgs, "E", sipType_QLocale_Language, &a0))
        {
             ::QString*sipRes;

            sipRes = new  ::QString( ::QLocale::languageToString(a0));

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_languageToString, doc_QLocale_languageToString);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_countryToString, "countryToString(QLocale.Country) -> str");

extern "C" {static PyObject *meth_QLocale_countryToString(PyObject *, PyObject *);}
static PyObject *meth_QLocale_countryToString(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLocale::Country a0;

        if (sipParseArgs(&sipParseErr, sipArgs, "E", sipType_QLocale_Country, &a0))
        {
             ::QString*sipRes;

            sipRes = new  ::QString( ::QLocale::countryToString(a0));

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_countryToString, doc_QLocale_countryToString);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_setDefault, "setDefault(QLocale)");

extern "C" {static PyObject *meth_QLocale_setDefault(PyObject *, PyObject *);}
static PyObject *meth_QLocale_setDefault(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale* a0;

        if (sipParseArgs(&sipParseErr, sipArgs, "J9", sipType_QLocale, &a0))
        {
             ::QLocale::setDefault(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_setDefault, doc_QLocale_setDefault);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_c, "c() -> QLocale");

extern "C" {static PyObject *meth_QLocale_c(PyObject *, PyObject *);}
static PyObject *meth_QLocale_c(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::QLocale*sipRes;

            sipRes = new  ::QLocale( ::QLocale::c());

            return sipConvertFromNewType(sipRes,sipType_QLocale,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_c, doc_QLocale_c);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_system, "system() -> QLocale");

extern "C" {static PyObject *meth_QLocale_system(PyObject *, PyObject *);}
static PyObject *meth_QLocale_system(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::QLocale*sipRes;

            sipRes = new  ::QLocale( ::QLocale::system());

            return sipConvertFromNewType(sipRes,sipType_QLocale,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_system, doc_QLocale_system);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_dateFormat, "dateFormat(self, format: QLocale.FormatType = QLocale.LongFormat) -> str");

extern "C" {static PyObject *meth_QLocale_dateFormat(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_dateFormat(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLocale::FormatType a0 = QLocale::LongFormat;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            sipName_format,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|E", &sipSelf, sipType_QLocale, &sipCpp, sipType_QLocale_FormatType, &a0))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->dateFormat(a0));

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_dateFormat, doc_QLocale_dateFormat);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_timeFormat, "timeFormat(self, format: QLocale.FormatType = QLocale.LongFormat) -> str");

extern "C" {static PyObject *meth_QLocale_timeFormat(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_timeFormat(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLocale::FormatType a0 = QLocale::LongFormat;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            sipName_format,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|E", &sipSelf, sipType_QLocale, &sipCpp, sipType_QLocale_FormatType, &a0))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->timeFormat(a0));

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_timeFormat, doc_QLocale_timeFormat);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_dateTimeFormat, "dateTimeFormat(self, format: QLocale.FormatType = QLocale.LongFormat) -> str");

extern "C" {static PyObject *meth_QLocale_dateTimeFormat(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_dateTimeFormat(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLocale::FormatType a0 = QLocale::LongFormat;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            sipName_format,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|E", &sipSelf, sipType_QLocale, &sipCpp, sipType_QLocale_FormatType, &a0))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->dateTimeFormat(a0));

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_dateTimeFormat, doc_QLocale_dateTimeFormat);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_toDate, "toDate(self, str, format: QLocale.FormatType = QLocale.LongFormat) -> QDate\n"
"toDate(self, str, str) -> QDate");

extern "C" {static PyObject *meth_QLocale_toDate(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_toDate(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QLocale::FormatType a1 = QLocale::LongFormat;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_format,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1|E", &sipSelf, sipType_QLocale, &sipCpp, sipType_QString,&a0, &a0State, sipType_QLocale_FormatType, &a1))
        {
             ::QDate*sipRes;

            sipRes = new  ::QDate(sipCpp->toDate(*a0,a1));
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipConvertFromNewType(sipRes,sipType_QDate,SIP_NULLPTR);
        }
    }

    {
        const  ::QString* a0;
        int a0State = 0;
        const  ::QString* a1;
        int a1State = 0;
        const  ::QLocale *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, "BJ1J1", &sipSelf, sipType_QLocale, &sipCpp, sipType_QString,&a0, &a0State, sipType_QString,&a1, &a1State))
        {
             ::QDate*sipRes;

            sipRes = new  ::QDate(sipCpp->toDate(*a0,*a1));
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);
            sipReleaseType(const_cast< ::QString *>(a1),sipType_QString,a1State);

            return sipConvertFromNewType(sipRes,sipType_QDate,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_toDate, doc_QLocale_toDate);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_toTime, "toTime(self, str, format: QLocale.FormatType = QLocale.LongFormat) -> QTime\n"
"toTime(self, str, str) -> QTime");

extern "C" {static PyObject *meth_QLocale_toTime(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_toTime(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QLocale::FormatType a1 = QLocale::LongFormat;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_format,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1|E", &sipSelf, sipType_QLocale, &sipCpp, sipType_QString,&a0, &a0State, sipType_QLocale_FormatType, &a1))
        {
             ::QTime*sipRes;

            sipRes = new  ::QTime(sipCpp->toTime(*a0,a1));
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipConvertFromNewType(sipRes,sipType_QTime,SIP_NULLPTR);
        }
    }

    {
        const  ::QString* a0;
        int a0State = 0;
        const  ::QString* a1;
        int a1State = 0;
        const  ::QLocale *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, "BJ1J1", &sipSelf, sipType_QLocale, &sipCpp, sipType_QString,&a0, &a0State, sipType_QString,&a1, &a1State))
        {
             ::QTime*sipRes;

            sipRes = new  ::QTime(sipCpp->toTime(*a0,*a1));
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);
            sipReleaseType(const_cast< ::QString *>(a1),sipType_QString,a1State);

            return sipConvertFromNewType(sipRes,sipType_QTime,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_toTime, doc_QLocale_toTime);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_toDateTime, "toDateTime(self, str, format: QLocale.FormatType = QLocale.LongFormat) -> QDateTime\n"
"toDateTime(self, str, str) -> QDateTime");

extern "C" {static PyObject *meth_QLocale_toDateTime(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_toDateTime(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QLocale::FormatType a1 = QLocale::LongFormat;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_format,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1|E", &sipSelf, sipType_QLocale, &sipCpp, sipType_QString,&a0, &a0State, sipType_QLocale_FormatType, &a1))
        {
             ::QDateTime*sipRes;

            sipRes = new  ::QDateTime(sipCpp->toDateTime(*a0,a1));
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipConvertFromNewType(sipRes,sipType_QDateTime,SIP_NULLPTR);
        }
    }

    {
        const  ::QString* a0;
        int a0State = 0;
        const  ::QString* a1;
        int a1State = 0;
        const  ::QLocale *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, "BJ1J1", &sipSelf, sipType_QLocale, &sipCpp, sipType_QString,&a0, &a0State, sipType_QString,&a1, &a1State))
        {
             ::QDateTime*sipRes;

            sipRes = new  ::QDateTime(sipCpp->toDateTime(*a0,*a1));
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);
            sipReleaseType(const_cast< ::QString *>(a1),sipType_QString,a1State);

            return sipConvertFromNewType(sipRes,sipType_QDateTime,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_toDateTime, doc_QLocale_toDateTime);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_decimalPoint, "decimalPoint(self) -> str");

extern "C" {static PyObject *meth_QLocale_decimalPoint(PyObject *, PyObject *);}
static PyObject *meth_QLocale_decimalPoint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::QChar*sipRes;

            sipRes = new  ::QChar(sipCpp->decimalPoint());

            return sipConvertFromNewType(sipRes,sipType_QChar,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_decimalPoint, doc_QLocale_decimalPoint);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_groupSeparator, "groupSeparator(self) -> str");

extern "C" {static PyObject *meth_QLocale_groupSeparator(PyObject *, PyObject *);}
static PyObject *meth_QLocale_groupSeparator(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::QChar*sipRes;

            sipRes = new  ::QChar(sipCpp->groupSeparator());

            return sipConvertFromNewType(sipRes,sipType_QChar,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_groupSeparator, doc_QLocale_groupSeparator);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_percent, "percent(self) -> str");

extern "C" {static PyObject *meth_QLocale_percent(PyObject *, PyObject *);}
static PyObject *meth_QLocale_percent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::QChar*sipRes;

            sipRes = new  ::QChar(sipCpp->percent());

            return sipConvertFromNewType(sipRes,sipType_QChar,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_percent, doc_QLocale_percent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_zeroDigit, "zeroDigit(self) -> str");

extern "C" {static PyObject *meth_QLocale_zeroDigit(PyObject *, PyObject *);}
static PyObject *meth_QLocale_zeroDigit(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::QChar*sipRes;

            sipRes = new  ::QChar(sipCpp->zeroDigit());

            return sipConvertFromNewType(sipRes,sipType_QChar,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_zeroDigit, doc_QLocale_zeroDigit);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_negativeSign, "negativeSign(self) -> str");

extern "C" {static PyObject *meth_QLocale_negativeSign(PyObject *, PyObject *);}
static PyObject *meth_QLocale_negativeSign(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::QChar*sipRes;

            sipRes = new  ::QChar(sipCpp->negativeSign());

            return sipConvertFromNewType(sipRes,sipType_QChar,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_negativeSign, doc_QLocale_negativeSign);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_exponential, "exponential(self) -> str");

extern "C" {static PyObject *meth_QLocale_exponential(PyObject *, PyObject *);}
static PyObject *meth_QLocale_exponential(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::QChar*sipRes;

            sipRes = new  ::QChar(sipCpp->exponential());

            return sipConvertFromNewType(sipRes,sipType_QChar,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_exponential, doc_QLocale_exponential);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_monthName, "monthName(self, int, format: QLocale.FormatType = QLocale.LongFormat) -> str");

extern "C" {static PyObject *meth_QLocale_monthName(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_monthName(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::QLocale::FormatType a1 = QLocale::LongFormat;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_format,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bi|E", &sipSelf, sipType_QLocale, &sipCpp, &a0, sipType_QLocale_FormatType, &a1))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->monthName(a0,a1));

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_monthName, doc_QLocale_monthName);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_dayName, "dayName(self, int, format: QLocale.FormatType = QLocale.LongFormat) -> str");

extern "C" {static PyObject *meth_QLocale_dayName(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_dayName(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::QLocale::FormatType a1 = QLocale::LongFormat;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_format,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bi|E", &sipSelf, sipType_QLocale, &sipCpp, &a0, sipType_QLocale_FormatType, &a1))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->dayName(a0,a1));

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_dayName, doc_QLocale_dayName);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_setNumberOptions, "setNumberOptions(self, Union[QLocale.NumberOptions, QLocale.NumberOption])");

extern "C" {static PyObject *meth_QLocale_setNumberOptions(PyObject *, PyObject *);}
static PyObject *meth_QLocale_setNumberOptions(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLocale::NumberOptions* a0;
        int a0State = 0;
         ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QLocale, &sipCpp, sipType_QLocale_NumberOptions, &a0, &a0State))
        {
            sipCpp->setNumberOptions(*a0);
            sipReleaseType(a0,sipType_QLocale_NumberOptions,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_setNumberOptions, doc_QLocale_setNumberOptions);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_numberOptions, "numberOptions(self) -> QLocale.NumberOptions");

extern "C" {static PyObject *meth_QLocale_numberOptions(PyObject *, PyObject *);}
static PyObject *meth_QLocale_numberOptions(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::QLocale::NumberOptions*sipRes;

            sipRes = new  ::QLocale::NumberOptions(sipCpp->numberOptions());

            return sipConvertFromNewType(sipRes,sipType_QLocale_NumberOptions,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_numberOptions, doc_QLocale_numberOptions);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_measurementSystem, "measurementSystem(self) -> QLocale.MeasurementSystem");

extern "C" {static PyObject *meth_QLocale_measurementSystem(PyObject *, PyObject *);}
static PyObject *meth_QLocale_measurementSystem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::QLocale::MeasurementSystem sipRes;

            sipRes = sipCpp->measurementSystem();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QLocale_MeasurementSystem);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_measurementSystem, doc_QLocale_measurementSystem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_positiveSign, "positiveSign(self) -> str");

extern "C" {static PyObject *meth_QLocale_positiveSign(PyObject *, PyObject *);}
static PyObject *meth_QLocale_positiveSign(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::QChar*sipRes;

            sipRes = new  ::QChar(sipCpp->positiveSign());

            return sipConvertFromNewType(sipRes,sipType_QChar,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_positiveSign, doc_QLocale_positiveSign);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_standaloneMonthName, "standaloneMonthName(self, int, format: QLocale.FormatType = QLocale.LongFormat) -> str");

extern "C" {static PyObject *meth_QLocale_standaloneMonthName(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_standaloneMonthName(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::QLocale::FormatType a1 = QLocale::LongFormat;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_format,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bi|E", &sipSelf, sipType_QLocale, &sipCpp, &a0, sipType_QLocale_FormatType, &a1))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->standaloneMonthName(a0,a1));

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_standaloneMonthName, doc_QLocale_standaloneMonthName);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_standaloneDayName, "standaloneDayName(self, int, format: QLocale.FormatType = QLocale.LongFormat) -> str");

extern "C" {static PyObject *meth_QLocale_standaloneDayName(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_standaloneDayName(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::QLocale::FormatType a1 = QLocale::LongFormat;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_format,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bi|E", &sipSelf, sipType_QLocale, &sipCpp, &a0, sipType_QLocale_FormatType, &a1))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->standaloneDayName(a0,a1));

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_standaloneDayName, doc_QLocale_standaloneDayName);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_amText, "amText(self) -> str");

extern "C" {static PyObject *meth_QLocale_amText(PyObject *, PyObject *);}
static PyObject *meth_QLocale_amText(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->amText());

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_amText, doc_QLocale_amText);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_pmText, "pmText(self) -> str");

extern "C" {static PyObject *meth_QLocale_pmText(PyObject *, PyObject *);}
static PyObject *meth_QLocale_pmText(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->pmText());

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_pmText, doc_QLocale_pmText);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_textDirection, "textDirection(self) -> Qt.LayoutDirection");

extern "C" {static PyObject *meth_QLocale_textDirection(PyObject *, PyObject *);}
static PyObject *meth_QLocale_textDirection(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::Qt::LayoutDirection sipRes;

            sipRes = sipCpp->textDirection();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_Qt_LayoutDirection);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_textDirection, doc_QLocale_textDirection);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_script, "script(self) -> QLocale.Script");

extern "C" {static PyObject *meth_QLocale_script(PyObject *, PyObject *);}
static PyObject *meth_QLocale_script(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::QLocale::Script sipRes;

            sipRes = sipCpp->script();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QLocale_Script);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_script, doc_QLocale_script);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_bcp47Name, "bcp47Name(self) -> str");

extern "C" {static PyObject *meth_QLocale_bcp47Name(PyObject *, PyObject *);}
static PyObject *meth_QLocale_bcp47Name(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->bcp47Name());

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_bcp47Name, doc_QLocale_bcp47Name);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_nativeLanguageName, "nativeLanguageName(self) -> str");

extern "C" {static PyObject *meth_QLocale_nativeLanguageName(PyObject *, PyObject *);}
static PyObject *meth_QLocale_nativeLanguageName(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->nativeLanguageName());

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_nativeLanguageName, doc_QLocale_nativeLanguageName);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_nativeCountryName, "nativeCountryName(self) -> str");

extern "C" {static PyObject *meth_QLocale_nativeCountryName(PyObject *, PyObject *);}
static PyObject *meth_QLocale_nativeCountryName(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->nativeCountryName());

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_nativeCountryName, doc_QLocale_nativeCountryName);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_firstDayOfWeek, "firstDayOfWeek(self) -> Qt.DayOfWeek");

extern "C" {static PyObject *meth_QLocale_firstDayOfWeek(PyObject *, PyObject *);}
static PyObject *meth_QLocale_firstDayOfWeek(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::Qt::DayOfWeek sipRes;

            sipRes = sipCpp->firstDayOfWeek();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_Qt_DayOfWeek);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_firstDayOfWeek, doc_QLocale_firstDayOfWeek);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_weekdays, "weekdays(self) -> List[Qt.DayOfWeek]");

extern "C" {static PyObject *meth_QLocale_weekdays(PyObject *, PyObject *);}
static PyObject *meth_QLocale_weekdays(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::QList< ::Qt::DayOfWeek>*sipRes;

            sipRes = new  ::QList< ::Qt::DayOfWeek>(sipCpp->weekdays());

            return sipConvertFromNewType(sipRes,sipType_QList_0100Qt_DayOfWeek,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_weekdays, doc_QLocale_weekdays);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_toUpper, "toUpper(self, str) -> str");

extern "C" {static PyObject *meth_QLocale_toUpper(PyObject *, PyObject *);}
static PyObject *meth_QLocale_toUpper(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QLocale, &sipCpp, sipType_QString,&a0, &a0State))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->toUpper(*a0));
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_toUpper, doc_QLocale_toUpper);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_toLower, "toLower(self, str) -> str");

extern "C" {static PyObject *meth_QLocale_toLower(PyObject *, PyObject *);}
static PyObject *meth_QLocale_toLower(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QLocale, &sipCpp, sipType_QString,&a0, &a0State))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->toLower(*a0));
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_toLower, doc_QLocale_toLower);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_currencySymbol, "currencySymbol(self, format: QLocale.CurrencySymbolFormat = QLocale.CurrencySymbol) -> str");

extern "C" {static PyObject *meth_QLocale_currencySymbol(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_currencySymbol(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLocale::CurrencySymbolFormat a0 = QLocale::CurrencySymbol;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            sipName_format,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|E", &sipSelf, sipType_QLocale, &sipCpp, sipType_QLocale_CurrencySymbolFormat, &a0))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->currencySymbol(a0));

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_currencySymbol, doc_QLocale_currencySymbol);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_toCurrencyString, "toCurrencyString(self, float, symbol: str = '') -> str\n"
"toCurrencyString(self, float, str, int) -> str\n"
"toCurrencyString(self, int, symbol: str = '') -> str");

extern "C" {static PyObject *meth_QLocale_toCurrencyString(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_toCurrencyString(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        double a0;
        const  ::QString& a1def = QString();
        const  ::QString* a1 = &a1def;
        int a1State = 0;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_symbol,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BXd|J1", &sipSelf, sipType_QLocale, &sipCpp, &a0, sipType_QString,&a1, &a1State))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->toCurrencyString(a0,*a1));
            sipReleaseType(const_cast< ::QString *>(a1),sipType_QString,a1State);

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    {
        double a0;
        const  ::QString* a1;
        int a1State = 0;
        int a2;
        const  ::QLocale *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, "BXdJ1i", &sipSelf, sipType_QLocale, &sipCpp, &a0, sipType_QString,&a1, &a1State, &a2))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->toCurrencyString(a0,*a1,a2));
            sipReleaseType(const_cast< ::QString *>(a1),sipType_QString,a1State);

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    {
        PyObject * a0;
        const  ::QString& a1def = QString();
        const  ::QString* a1 = &a1def;
        int a1State = 0;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_symbol,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BP0|J1", &sipSelf, sipType_QLocale, &sipCpp, &a0, sipType_QString,&a1, &a1State))
        {
             ::QString*sipRes = 0;
            sipErrorState sipError = sipErrorNone;

#line 1485 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtCore/qlocale.sip"
        // Convert a Python int avoiding overflow as much as possible.
        
        static PyObject *zero = 0;
        if (!zero)
            zero = PyLong_FromLong(0);
        
        int rc = PyObject_RichCompareBool(a0, zero, Py_LT);
        
        PyErr_Clear();
        
        if (rc < 0)
        {
            sipError = sipBadCallableArg(0, a0);
        }
        else if (rc)
        {
        #if defined(HAVE_LONG_LONG)
            PY_LONG_LONG value = PyLong_AsLongLong(a0);
        #else
            long value = PyLong_AsLong(a0);
        #endif
        
            if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_OverflowError))
            {
                sipError = sipBadCallableArg(0, a0);
            }
            else
            {
                sipRes = new QString(sipCpp->toCurrencyString(value, *a1));
            }
        }
        else
        {
        #if defined(HAVE_LONG_LONG)
            unsigned PY_LONG_LONG value = PyLong_AsUnsignedLongLongMask(a0);
        #else
            unsigned long value = PyLong_AsUnsignedLongMask(a0);
        #endif
        
            if (PyErr_Occurred() && !PyErr_ExceptionMatches(PyExc_OverflowError))
            {
                sipError = sipBadCallableArg(0, a0);
            }
            else
            {
                sipRes = new QString(sipCpp->toCurrencyString(value, *a1));
            }
        }
#line 1939 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtCore/sipQtCoreQLocale.cpp"
            sipReleaseType(const_cast< ::QString *>(a1),sipType_QString,a1State);

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_toCurrencyString, doc_QLocale_toCurrencyString);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_uiLanguages, "uiLanguages(self) -> List[str]");

extern "C" {static PyObject *meth_QLocale_uiLanguages(PyObject *, PyObject *);}
static PyObject *meth_QLocale_uiLanguages(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLocale, &sipCpp))
        {
             ::QStringList*sipRes;

            sipRes = new  ::QStringList(sipCpp->uiLanguages());

            return sipConvertFromNewType(sipRes,sipType_QStringList,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_uiLanguages, doc_QLocale_uiLanguages);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_scriptToString, "scriptToString(QLocale.Script) -> str");

extern "C" {static PyObject *meth_QLocale_scriptToString(PyObject *, PyObject *);}
static PyObject *meth_QLocale_scriptToString(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLocale::Script a0;

        if (sipParseArgs(&sipParseErr, sipArgs, "E", sipType_QLocale_Script, &a0))
        {
             ::QString*sipRes;

            sipRes = new  ::QString( ::QLocale::scriptToString(a0));

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_scriptToString, doc_QLocale_scriptToString);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_matchingLocales, "matchingLocales(QLocale.Language, QLocale.Script, QLocale.Country) -> List[QLocale]");

extern "C" {static PyObject *meth_QLocale_matchingLocales(PyObject *, PyObject *);}
static PyObject *meth_QLocale_matchingLocales(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLocale::Language a0;
         ::QLocale::Script a1;
         ::QLocale::Country a2;

        if (sipParseArgs(&sipParseErr, sipArgs, "EEE", sipType_QLocale_Language, &a0, sipType_QLocale_Script, &a1, sipType_QLocale_Country, &a2))
        {
            QList< ::QLocale>*sipRes;

            sipRes = new QList< ::QLocale>( ::QLocale::matchingLocales(a0,a1,a2));

            return sipConvertFromNewType(sipRes,sipType_QList_0100QLocale,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_matchingLocales, doc_QLocale_matchingLocales);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_quoteString, "quoteString(self, str, style: QLocale.QuotationStyle = QLocale.StandardQuotation) -> str");

extern "C" {static PyObject *meth_QLocale_quoteString(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_quoteString(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QLocale::QuotationStyle a1 = QLocale::StandardQuotation;
        const  ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_style,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1|E", &sipSelf, sipType_QLocale, &sipCpp, sipType_QString,&a0, &a0State, sipType_QLocale_QuotationStyle, &a1))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->quoteString(*a0,a1));
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_quoteString, doc_QLocale_quoteString);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_createSeparatedList, "createSeparatedList(self, Iterable[str]) -> str");

extern "C" {static PyObject *meth_QLocale_createSeparatedList(PyObject *, PyObject *);}
static PyObject *meth_QLocale_createSeparatedList(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QStringList* a0;
        int a0State = 0;
        const  ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QLocale, &sipCpp, sipType_QStringList,&a0, &a0State))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->createSeparatedList(*a0));
            sipReleaseType(const_cast< ::QStringList *>(a0),sipType_QStringList,a0State);

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_createSeparatedList, doc_QLocale_createSeparatedList);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_swap, "swap(self, QLocale)");

extern "C" {static PyObject *meth_QLocale_swap(PyObject *, PyObject *);}
static PyObject *meth_QLocale_swap(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QLocale* a0;
         ::QLocale *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QLocale, &sipCpp, sipType_QLocale, &a0))
        {
            sipCpp->swap(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_swap, doc_QLocale_swap);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QLocale_formattedDataSize, "formattedDataSize(self, int, precision: int = 2, format: Union[QLocale.DataSizeFormats, QLocale.DataSizeFormat] = QLocale.DataSizeIecFormat) -> str");

extern "C" {static PyObject *meth_QLocale_formattedDataSize(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLocale_formattedDataSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qint64 a0;
        int a1 = 2;
         ::QLocale::DataSizeFormats a2def = QLocale::DataSizeIecFormat;
         ::QLocale::DataSizeFormats* a2 = &a2def;
        int a2State = 0;
         ::QLocale *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_precision,
            sipName_format,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bn|iJ1", &sipSelf, sipType_QLocale, &sipCpp, &a0, &a1, sipType_QLocale_DataSizeFormats, &a2, &a2State))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->formattedDataSize(a0,a1,*a2));
            sipReleaseType(a2,sipType_QLocale_DataSizeFormats,a2State);

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QLocale, sipName_formattedDataSize, doc_QLocale_formattedDataSize);

    return SIP_NULLPTR;
}


extern "C" {static long slot_QLocale___hash__(PyObject *);}
static long slot_QLocale___hash__(PyObject *sipSelf)
{
     ::QLocale *sipCpp = reinterpret_cast< ::QLocale *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLocale));

    if (!sipCpp)
        return 0L;


    {
        {
            long sipRes = 0;

#line 1408 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtCore/qlocale.sip"
        sipRes = qHash(*sipCpp);
#line 2190 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtCore/sipQtCoreQLocale.cpp"

            return sipRes;
        }
    }

    return 0;
}


extern "C" {static PyObject *slot_QLocale___ne__(PyObject *,PyObject *);}
static PyObject *slot_QLocale___ne__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QLocale *sipCpp = reinterpret_cast< ::QLocale *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLocale));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QLocale, &a0))
        {
            bool sipRes;

            sipRes = sipCpp-> ::QLocale::operator!=(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtCore, ne_slot, sipType_QLocale, sipSelf, sipArg);
}


extern "C" {static PyObject *slot_QLocale___eq__(PyObject *,PyObject *);}
static PyObject *slot_QLocale___eq__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QLocale *sipCpp = reinterpret_cast< ::QLocale *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLocale));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLocale* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QLocale, &a0))
        {
            bool sipRes;

            sipRes = sipCpp-> ::QLocale::operator==(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtCore, eq_slot, sipType_QLocale, sipSelf, sipArg);
}


/* Call the instance's destructor. */
extern "C" {static void release_QLocale(void *, int);}
static void release_QLocale(void *sipCppV, int)
{
    delete reinterpret_cast< ::QLocale *>(sipCppV);
}


extern "C" {static void *array_QLocale(Py_ssize_t);}
static void *array_QLocale(Py_ssize_t sipNrElem)
{
    return new  ::QLocale[sipNrElem];
}


extern "C" {static void assign_QLocale(void *, Py_ssize_t, void *);}
static void assign_QLocale(void *sipDst, Py_ssize_t sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::QLocale *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::QLocale *>(sipSrc);
}


extern "C" {static void *copy_QLocale(const void *, Py_ssize_t);}
static void *copy_QLocale(const void *sipSrc, Py_ssize_t sipSrcIdx)
{
    return new  ::QLocale(reinterpret_cast<const  ::QLocale *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QLocale(sipSimpleWrapper *);}
static void dealloc_QLocale(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_QLocale(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_QLocale(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QLocale(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::QLocale *sipCpp = SIP_NULLPTR;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, ""))
        {
            sipCpp = new  ::QLocale();

            return sipCpp;
        }
    }

    {
        const  ::QString* a0;
        int a0State = 0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "J1", sipType_QString,&a0, &a0State))
        {
            sipCpp = new  ::QLocale(*a0);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipCpp;
        }
    }

    {
         ::QLocale::Language a0;
         ::QLocale::Country a1 = QLocale::AnyCountry;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_country,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "E|E", sipType_QLocale_Language, &a0, sipType_QLocale_Country, &a1))
        {
            sipCpp = new  ::QLocale(a0,a1);

            return sipCpp;
        }
    }

    {
        const  ::QLocale* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "J9", sipType_QLocale, &a0))
        {
            sipCpp = new  ::QLocale(*a0);

            return sipCpp;
        }
    }

    {
         ::QLocale::Language a0;
         ::QLocale::Script a1;
         ::QLocale::Country a2;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "EEE", sipType_QLocale_Language, &a0, sipType_QLocale_Script, &a1, sipType_QLocale_Country, &a2))
        {
            sipCpp = new  ::QLocale(a0,a1,a2);

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's Python slots. */
static sipPySlotDef slots_QLocale[] = {
    {(void *)slot_QLocale___hash__, hash_slot},
    {(void *)slot_QLocale___ne__, ne_slot},
    {(void *)slot_QLocale___eq__, eq_slot},
    {0, (sipPySlotType)0}
};


static PyMethodDef methods_QLocale[] = {
    {sipName_amText, meth_QLocale_amText, METH_VARARGS, doc_QLocale_amText},
    {sipName_bcp47Name, meth_QLocale_bcp47Name, METH_VARARGS, doc_QLocale_bcp47Name},
    {sipName_c, meth_QLocale_c, METH_VARARGS, doc_QLocale_c},
    {sipName_country, meth_QLocale_country, METH_VARARGS, doc_QLocale_country},
    {sipName_countryToString, meth_QLocale_countryToString, METH_VARARGS, doc_QLocale_countryToString},
    {sipName_createSeparatedList, meth_QLocale_createSeparatedList, METH_VARARGS, doc_QLocale_createSeparatedList},
    {sipName_currencySymbol, SIP_MLMETH_CAST(meth_QLocale_currencySymbol), METH_VARARGS|METH_KEYWORDS, doc_QLocale_currencySymbol},
    {sipName_dateFormat, SIP_MLMETH_CAST(meth_QLocale_dateFormat), METH_VARARGS|METH_KEYWORDS, doc_QLocale_dateFormat},
    {sipName_dateTimeFormat, SIP_MLMETH_CAST(meth_QLocale_dateTimeFormat), METH_VARARGS|METH_KEYWORDS, doc_QLocale_dateTimeFormat},
    {sipName_dayName, SIP_MLMETH_CAST(meth_QLocale_dayName), METH_VARARGS|METH_KEYWORDS, doc_QLocale_dayName},
    {sipName_decimalPoint, meth_QLocale_decimalPoint, METH_VARARGS, doc_QLocale_decimalPoint},
    {sipName_exponential, meth_QLocale_exponential, METH_VARARGS, doc_QLocale_exponential},
    {sipName_firstDayOfWeek, meth_QLocale_firstDayOfWeek, METH_VARARGS, doc_QLocale_firstDayOfWeek},
    {sipName_formattedDataSize, SIP_MLMETH_CAST(meth_QLocale_formattedDataSize), METH_VARARGS|METH_KEYWORDS, doc_QLocale_formattedDataSize},
    {sipName_groupSeparator, meth_QLocale_groupSeparator, METH_VARARGS, doc_QLocale_groupSeparator},
    {sipName_language, meth_QLocale_language, METH_VARARGS, doc_QLocale_language},
    {sipName_languageToString, meth_QLocale_languageToString, METH_VARARGS, doc_QLocale_languageToString},
    {sipName_matchingLocales, meth_QLocale_matchingLocales, METH_VARARGS, doc_QLocale_matchingLocales},
    {sipName_measurementSystem, meth_QLocale_measurementSystem, METH_VARARGS, doc_QLocale_measurementSystem},
    {sipName_monthName, SIP_MLMETH_CAST(meth_QLocale_monthName), METH_VARARGS|METH_KEYWORDS, doc_QLocale_monthName},
    {sipName_name, meth_QLocale_name, METH_VARARGS, doc_QLocale_name},
    {sipName_nativeCountryName, meth_QLocale_nativeCountryName, METH_VARARGS, doc_QLocale_nativeCountryName},
    {sipName_nativeLanguageName, meth_QLocale_nativeLanguageName, METH_VARARGS, doc_QLocale_nativeLanguageName},
    {sipName_negativeSign, meth_QLocale_negativeSign, METH_VARARGS, doc_QLocale_negativeSign},
    {sipName_numberOptions, meth_QLocale_numberOptions, METH_VARARGS, doc_QLocale_numberOptions},
    {sipName_percent, meth_QLocale_percent, METH_VARARGS, doc_QLocale_percent},
    {sipName_pmText, meth_QLocale_pmText, METH_VARARGS, doc_QLocale_pmText},
    {sipName_positiveSign, meth_QLocale_positiveSign, METH_VARARGS, doc_QLocale_positiveSign},
    {sipName_quoteString, SIP_MLMETH_CAST(meth_QLocale_quoteString), METH_VARARGS|METH_KEYWORDS, doc_QLocale_quoteString},
    {sipName_script, meth_QLocale_script, METH_VARARGS, doc_QLocale_script},
    {sipName_scriptToString, meth_QLocale_scriptToString, METH_VARARGS, doc_QLocale_scriptToString},
    {sipName_setDefault, meth_QLocale_setDefault, METH_VARARGS, doc_QLocale_setDefault},
    {sipName_setNumberOptions, meth_QLocale_setNumberOptions, METH_VARARGS, doc_QLocale_setNumberOptions},
    {sipName_standaloneDayName, SIP_MLMETH_CAST(meth_QLocale_standaloneDayName), METH_VARARGS|METH_KEYWORDS, doc_QLocale_standaloneDayName},
    {sipName_standaloneMonthName, SIP_MLMETH_CAST(meth_QLocale_standaloneMonthName), METH_VARARGS|METH_KEYWORDS, doc_QLocale_standaloneMonthName},
    {sipName_swap, meth_QLocale_swap, METH_VARARGS, doc_QLocale_swap},
    {sipName_system, meth_QLocale_system, METH_VARARGS, doc_QLocale_system},
    {sipName_textDirection, meth_QLocale_textDirection, METH_VARARGS, doc_QLocale_textDirection},
    {sipName_timeFormat, SIP_MLMETH_CAST(meth_QLocale_timeFormat), METH_VARARGS|METH_KEYWORDS, doc_QLocale_timeFormat},
    {sipName_toCurrencyString, SIP_MLMETH_CAST(meth_QLocale_toCurrencyString), METH_VARARGS|METH_KEYWORDS, doc_QLocale_toCurrencyString},
    {sipName_toDate, SIP_MLMETH_CAST(meth_QLocale_toDate), METH_VARARGS|METH_KEYWORDS, doc_QLocale_toDate},
    {sipName_toDateTime, SIP_MLMETH_CAST(meth_QLocale_toDateTime), METH_VARARGS|METH_KEYWORDS, doc_QLocale_toDateTime},
    {sipName_toDouble, SIP_MLMETH_CAST(meth_QLocale_toDouble), METH_VARARGS|METH_KEYWORDS, doc_QLocale_toDouble},
    {sipName_toFloat, SIP_MLMETH_CAST(meth_QLocale_toFloat), METH_VARARGS|METH_KEYWORDS, doc_QLocale_toFloat},
    {sipName_toInt, SIP_MLMETH_CAST(meth_QLocale_toInt), METH_VARARGS|METH_KEYWORDS, doc_QLocale_toInt},
    {sipName_toLongLong, SIP_MLMETH_CAST(meth_QLocale_toLongLong), METH_VARARGS|METH_KEYWORDS, doc_QLocale_toLongLong},
    {sipName_toLower, meth_QLocale_toLower, METH_VARARGS, doc_QLocale_toLower},
    {sipName_toShort, SIP_MLMETH_CAST(meth_QLocale_toShort), METH_VARARGS|METH_KEYWORDS, doc_QLocale_toShort},
    {sipName_toString, SIP_MLMETH_CAST(meth_QLocale_toString), METH_VARARGS|METH_KEYWORDS, doc_QLocale_toString},
    {sipName_toTime, SIP_MLMETH_CAST(meth_QLocale_toTime), METH_VARARGS|METH_KEYWORDS, doc_QLocale_toTime},
    {sipName_toUInt, SIP_MLMETH_CAST(meth_QLocale_toUInt), METH_VARARGS|METH_KEYWORDS, doc_QLocale_toUInt},
    {sipName_toULongLong, SIP_MLMETH_CAST(meth_QLocale_toULongLong), METH_VARARGS|METH_KEYWORDS, doc_QLocale_toULongLong},
    {sipName_toUShort, SIP_MLMETH_CAST(meth_QLocale_toUShort), METH_VARARGS|METH_KEYWORDS, doc_QLocale_toUShort},
    {sipName_toUpper, meth_QLocale_toUpper, METH_VARARGS, doc_QLocale_toUpper},
    {sipName_uiLanguages, meth_QLocale_uiLanguages, METH_VARARGS, doc_QLocale_uiLanguages},
    {sipName_weekdays, meth_QLocale_weekdays, METH_VARARGS, doc_QLocale_weekdays},
    {sipName_zeroDigit, meth_QLocale_zeroDigit, METH_VARARGS, doc_QLocale_zeroDigit}
};

static sipEnumMemberDef enummembers_QLocale[] = {
    {sipName_Abkhazian, static_cast<int>( ::QLocale::Abkhazian), 148},
    {sipName_AdlamScript, static_cast<int>( ::QLocale::AdlamScript), 153},
    {sipName_Afan, static_cast<int>( ::QLocale::Afan), 148},
    {sipName_Afar, static_cast<int>( ::QLocale::Afar), 148},
    {sipName_Afghanistan, static_cast<int>( ::QLocale::Afghanistan), 142},
    {sipName_Afrikaans, static_cast<int>( ::QLocale::Afrikaans), 148},
    {sipName_Aghem, static_cast<int>( ::QLocale::Aghem), 148},
    {sipName_Ahom, static_cast<int>( ::QLocale::Ahom), 148},
    {sipName_AhomScript, static_cast<int>( ::QLocale::AhomScript), 153},
    {sipName_Akan, static_cast<int>( ::QLocale::Akan), 148},
    {sipName_Akkadian, static_cast<int>( ::QLocale::Akkadian), 148},
    {sipName_Akoose, static_cast<int>( ::QLocale::Akoose), 148},
    {sipName_AlandIslands, static_cast<int>( ::QLocale::AlandIslands), 142},
    {sipName_Albania, static_cast<int>( ::QLocale::Albania), 142},
    {sipName_Albanian, static_cast<int>( ::QLocale::Albanian), 148},
    {sipName_Algeria, static_cast<int>( ::QLocale::Algeria), 142},
    {sipName_AlternateQuotation, static_cast<int>( ::QLocale::AlternateQuotation), 152},
    {sipName_AmericanSamoa, static_cast<int>( ::QLocale::AmericanSamoa), 142},
    {sipName_AmericanSignLanguage, static_cast<int>( ::QLocale::AmericanSignLanguage), 148},
    {sipName_Amharic, static_cast<int>( ::QLocale::Amharic), 148},
    {sipName_AnatolianHieroglyphsScript, static_cast<int>( ::QLocale::AnatolianHieroglyphsScript), 153},
    {sipName_AncientEgyptian, static_cast<int>( ::QLocale::AncientEgyptian), 148},
    {sipName_AncientGreek, static_cast<int>( ::QLocale::AncientGreek), 148},
    {sipName_AncientNorthArabian, static_cast<int>( ::QLocale::AncientNorthArabian), 148},
    {sipName_Andorra, static_cast<int>( ::QLocale::Andorra), 142},
    {sipName_Angola, static_cast<int>( ::QLocale::Angola), 142},
    {sipName_Anguilla, static_cast<int>( ::QLocale::Anguilla), 142},
    {sipName_Antarctica, static_cast<int>( ::QLocale::Antarctica), 142},
    {sipName_AntiguaAndBarbuda, static_cast<int>( ::QLocale::AntiguaAndBarbuda), 142},
    {sipName_AnyCountry, static_cast<int>( ::QLocale::AnyCountry), 142},
    {sipName_AnyLanguage, static_cast<int>( ::QLocale::AnyLanguage), 148},
    {sipName_AnyScript, static_cast<int>( ::QLocale::AnyScript), 153},
    {sipName_Arabic, static_cast<int>( ::QLocale::Arabic), 148},
    {sipName_ArabicScript, static_cast<int>( ::QLocale::ArabicScript), 153},
    {sipName_Aragonese, static_cast<int>( ::QLocale::Aragonese), 148},
    {sipName_Aramaic, static_cast<int>( ::QLocale::Aramaic), 148},
    {sipName_ArdhamagadhiPrakrit, static_cast<int>( ::QLocale::ArdhamagadhiPrakrit), 148},
    {sipName_Argentina, static_cast<int>( ::QLocale::Argentina), 142},
    {sipName_Armenia, static_cast<int>( ::QLocale::Armenia), 142},
    {sipName_Armenian, static_cast<int>( ::QLocale::Armenian), 148},
    {sipName_ArmenianScript, static_cast<int>( ::QLocale::ArmenianScript), 153},
    {sipName_Aruba, static_cast<int>( ::QLocale::Aruba), 142},
    {sipName_AscensionIsland, static_cast<int>( ::QLocale::AscensionIsland), 142},
    {sipName_Assamese, static_cast<int>( ::QLocale::Assamese), 148},
    {sipName_Asturian, static_cast<int>( ::QLocale::Asturian), 148},
    {sipName_Asu, static_cast<int>( ::QLocale::Asu), 148},
    {sipName_Atsam, static_cast<int>( ::QLocale::Atsam), 148},
    {sipName_Australia, static_cast<int>( ::QLocale::Australia), 142},
    {sipName_Austria, static_cast<int>( ::QLocale::Austria), 142},
    {sipName_Avaric, static_cast<int>( ::QLocale::Avaric), 148},
    {sipName_Avestan, static_cast<int>( ::QLocale::Avestan), 148},
    {sipName_AvestanScript, static_cast<int>( ::QLocale::AvestanScript), 153},
    {sipName_Aymara, static_cast<int>( ::QLocale::Aymara), 148},
    {sipName_Azerbaijan, static_cast<int>( ::QLocale::Azerbaijan), 142},
    {sipName_Azerbaijani, static_cast<int>( ::QLocale::Azerbaijani), 148},
    {sipName_Bafia, static_cast<int>( ::QLocale::Bafia), 148},
    {sipName_Bahamas, static_cast<int>( ::QLocale::Bahamas), 142},
    {sipName_Bahrain, static_cast<int>( ::QLocale::Bahrain), 142},
    {sipName_Balinese, static_cast<int>( ::QLocale::Balinese), 148},
    {sipName_BalineseScript, static_cast<int>( ::QLocale::BalineseScript), 153},
    {sipName_Bambara, static_cast<int>( ::QLocale::Bambara), 148},
    {sipName_BamumScript, static_cast<int>( ::QLocale::BamumScript), 153},
    {sipName_Bamun, static_cast<int>( ::QLocale::Bamun), 148},
    {sipName_Bangladesh, static_cast<int>( ::QLocale::Bangladesh), 142},
    {sipName_Barbados, static_cast<int>( ::QLocale::Barbados), 142},
    {sipName_Basaa, static_cast<int>( ::QLocale::Basaa), 148},
    {sipName_Bashkir, static_cast<int>( ::QLocale::Bashkir), 148},
    {sipName_Basque, static_cast<int>( ::QLocale::Basque), 148},
    {sipName_Bassa, static_cast<int>( ::QLocale::Bassa), 148},
    {sipName_BassaVahScript, static_cast<int>( ::QLocale::BassaVahScript), 153},
    {sipName_BatakScript, static_cast<int>( ::QLocale::BatakScript), 153},
    {sipName_BatakToba, static_cast<int>( ::QLocale::BatakToba), 148},
    {sipName_Belarus, static_cast<int>( ::QLocale::Belarus), 142},
    {sipName_Belarusian, static_cast<int>( ::QLocale::Belarusian), 148},
    {sipName_Belgium, static_cast<int>( ::QLocale::Belgium), 142},
    {sipName_Belize, static_cast<int>( ::QLocale::Belize), 142},
    {sipName_Bemba, static_cast<int>( ::QLocale::Bemba), 148},
    {sipName_Bena, static_cast<int>( ::QLocale::Bena), 148},
    {sipName_Bengali, static_cast<int>( ::QLocale::Bengali), 148},
    {sipName_BengaliScript, static_cast<int>( ::QLocale::BengaliScript), 153},
    {sipName_Benin, static_cast<int>( ::QLocale::Benin), 142},
    {sipName_Bermuda, static_cast<int>( ::QLocale::Bermuda), 142},
    {sipName_BhaiksukiScript, static_cast<int>( ::QLocale::BhaiksukiScript), 153},
    {sipName_Bhojpuri, static_cast<int>( ::QLocale::Bhojpuri), 148},
    {sipName_Bhutan, static_cast<int>( ::QLocale::Bhutan), 142},
    {sipName_Bhutani, static_cast<int>( ::QLocale::Bhutani), 148},
    {sipName_Bihari, static_cast<int>( ::QLocale::Bihari), 148},
    {sipName_Bislama, static_cast<int>( ::QLocale::Bislama), 148},
    {sipName_Blin, static_cast<int>( ::QLocale::Blin), 148},
    {sipName_Bodo, static_cast<int>( ::QLocale::Bodo), 148},
    {sipName_Bolivia, static_cast<int>( ::QLocale::Bolivia), 142},
    {sipName_Bonaire, static_cast<int>( ::QLocale::Bonaire), 142},
    {sipName_BopomofoScript, static_cast<int>( ::QLocale::BopomofoScript), 153},
    {sipName_BosniaAndHerzegowina, static_cast<int>( ::QLocale::BosniaAndHerzegowina), 142},
    {sipName_Bosnian, static_cast<int>( ::QLocale::Bosnian), 148},
    {sipName_Botswana, static_cast<int>( ::QLocale::Botswana), 142},
    {sipName_BouvetIsland, static_cast<int>( ::QLocale::BouvetIsland), 142},
    {sipName_BrahmiScript, static_cast<int>( ::QLocale::BrahmiScript), 153},
    {sipName_BrailleScript, static_cast<int>( ::QLocale::BrailleScript), 153},
    {sipName_Brazil, static_cast<int>( ::QLocale::Brazil), 142},
    {sipName_Breton, static_cast<int>( ::QLocale::Breton), 148},
    {sipName_BritishIndianOceanTerritory, static_cast<int>( ::QLocale::BritishIndianOceanTerritory), 142},
    {sipName_BritishVirginIslands, static_cast<int>( ::QLocale::BritishVirginIslands), 142},
    {sipName_Brunei, static_cast<int>( ::QLocale::Brunei), 142},
    {sipName_Buginese, static_cast<int>( ::QLocale::Buginese), 148},
    {sipName_BugineseScript, static_cast<int>( ::QLocale::BugineseScript), 153},
    {sipName_Buhid, static_cast<int>( ::QLocale::Buhid), 148},
    {sipName_BuhidScript, static_cast<int>( ::QLocale::BuhidScript), 153},
    {sipName_Bulgaria, static_cast<int>( ::QLocale::Bulgaria), 142},
    {sipName_Bulgarian, static_cast<int>( ::QLocale::Bulgarian), 148},
    {sipName_BurkinaFaso, static_cast<int>( ::QLocale::BurkinaFaso), 142},
    {sipName_Burmese, static_cast<int>( ::QLocale::Burmese), 148},
    {sipName_Burundi, static_cast<int>( ::QLocale::Burundi), 142},
    {sipName_Byelorussian, static_cast<int>( ::QLocale::Byelorussian), 148},
    {sipName_C, static_cast<int>( ::QLocale::C), 148},
    {sipName_Cambodia, static_cast<int>( ::QLocale::Cambodia), 142},
    {sipName_Cambodian, static_cast<int>( ::QLocale::Cambodian), 148},
    {sipName_Cameroon, static_cast<int>( ::QLocale::Cameroon), 142},
    {sipName_Canada, static_cast<int>( ::QLocale::Canada), 142},
    {sipName_CanadianAboriginalScript, static_cast<int>( ::QLocale::CanadianAboriginalScript), 153},
    {sipName_CanaryIslands, static_cast<int>( ::QLocale::CanaryIslands), 142},
    {sipName_Cantonese, static_cast<int>( ::QLocale::Cantonese), 148},
    {sipName_CapeVerde, static_cast<int>( ::QLocale::CapeVerde), 142},
    {sipName_Carian, static_cast<int>( ::QLocale::Carian), 148},
    {sipName_CarianScript, static_cast<int>( ::QLocale::CarianScript), 153},
    {sipName_Catalan, static_cast<int>( ::QLocale::Catalan), 148},
    {sipName_CaucasianAlbanianScript, static_cast<int>( ::QLocale::CaucasianAlbanianScript), 153},
    {sipName_CaymanIslands, static_cast<int>( ::QLocale::CaymanIslands), 142},
    {sipName_CentralAfricanRepublic, static_cast<int>( ::QLocale::CentralAfricanRepublic), 142},
    {sipName_CentralKurdish, static_cast<int>( ::QLocale::CentralKurdish), 148},
    {sipName_CentralMoroccoTamazight, static_cast<int>( ::QLocale::CentralMoroccoTamazight), 148},
    {sipName_CeutaAndMelilla, static_cast<int>( ::QLocale::CeutaAndMelilla), 142},
    {sipName_Chad, static_cast<int>( ::QLocale::Chad), 142},
    {sipName_Chakma, static_cast<int>( ::QLocale::Chakma), 148},
    {sipName_ChakmaScript, static_cast<int>( ::QLocale::ChakmaScript), 153},
    {sipName_ChamScript, static_cast<int>( ::QLocale::ChamScript), 153},
    {sipName_Chamorro, static_cast<int>( ::QLocale::Chamorro), 148},
    {sipName_Chechen, static_cast<int>( ::QLocale::Chechen), 148},
    {sipName_Cherokee, static_cast<int>( ::QLocale::Cherokee), 148},
    {sipName_CherokeeScript, static_cast<int>( ::QLocale::CherokeeScript), 153},
    {sipName_Chewa, static_cast<int>( ::QLocale::Chewa), 148},
    {sipName_Chiga, static_cast<int>( ::QLocale::Chiga), 148},
    {sipName_Chile, static_cast<int>( ::QLocale::Chile), 142},
    {sipName_China, static_cast<int>( ::QLocale::China), 142},
    {sipName_Chinese, static_cast<int>( ::QLocale::Chinese), 148},
    {sipName_ChristmasIsland, static_cast<int>( ::QLocale::ChristmasIsland), 142},
    {sipName_Church, static_cast<int>( ::QLocale::Church), 148},
    {sipName_Chuvash, static_cast<int>( ::QLocale::Chuvash), 148},
    {sipName_ClassicalMandaic, static_cast<int>( ::QLocale::ClassicalMandaic), 148},
    {sipName_ClippertonIsland, static_cast<int>( ::QLocale::ClippertonIsland), 142},
    {sipName_CocosIslands, static_cast<int>( ::QLocale::CocosIslands), 142},
    {sipName_Colognian, static_cast<int>( ::QLocale::Colognian), 148},
    {sipName_Colombia, static_cast<int>( ::QLocale::Colombia), 142},
    {sipName_Comoros, static_cast<int>( ::QLocale::Comoros), 142},
    {sipName_CongoBrazzaville, static_cast<int>( ::QLocale::CongoBrazzaville), 142},
    {sipName_CongoKinshasa, static_cast<int>( ::QLocale::CongoKinshasa), 142},
    {sipName_CongoSwahili, static_cast<int>( ::QLocale::CongoSwahili), 148},
    {sipName_CookIslands, static_cast<int>( ::QLocale::CookIslands), 142},
    {sipName_Coptic, static_cast<int>( ::QLocale::Coptic), 148},
    {sipName_CopticScript, static_cast<int>( ::QLocale::CopticScript), 153},
    {sipName_Cornish, static_cast<int>( ::QLocale::Cornish), 148},
    {sipName_Corsican, static_cast<int>( ::QLocale::Corsican), 148},
    {sipName_CostaRica, static_cast<int>( ::QLocale::CostaRica), 142},
    {sipName_Cree, static_cast<int>( ::QLocale::Cree), 148},
    {sipName_Croatia, static_cast<int>( ::QLocale::Croatia), 142},
    {sipName_Croatian, static_cast<int>( ::QLocale::Croatian), 148},
    {sipName_Cuba, static_cast<int>( ::QLocale::Cuba), 142},
    {sipName_CuneiformScript, static_cast<int>( ::QLocale::CuneiformScript), 153},
    {sipName_CuraSao, static_cast<int>( ::QLocale::CuraSao), 142},
    {sipName_CurrencyDisplayName, static_cast<int>( ::QLocale::CurrencyDisplayName), 143},
    {sipName_CurrencyIsoCode, static_cast<int>( ::QLocale::CurrencyIsoCode), 143},
    {sipName_CurrencySymbol, static_cast<int>( ::QLocale::CurrencySymbol), 143},
    {sipName_CypriotScript, static_cast<int>( ::QLocale::CypriotScript), 153},
    {sipName_Cyprus, static_cast<int>( ::QLocale::Cyprus), 142},
    {sipName_CyrillicScript, static_cast<int>( ::QLocale::CyrillicScript), 153},
    {sipName_Czech, static_cast<int>( ::QLocale::Czech), 148},
    {sipName_CzechRepublic, static_cast<int>( ::QLocale::CzechRepublic), 142},
    {sipName_Danish, static_cast<int>( ::QLocale::Danish), 148},
    {sipName_DataSizeIecFormat, static_cast<int>( ::QLocale::DataSizeIecFormat), 144},
    {sipName_DataSizeSIFormat, static_cast<int>( ::QLocale::DataSizeSIFormat), 144},
    {sipName_DataSizeTraditionalFormat, static_cast<int>( ::QLocale::DataSizeTraditionalFormat), 144},
    {sipName_DefaultNumberOptions, static_cast<int>( ::QLocale::DefaultNumberOptions), 150},
    {sipName_DemocraticRepublicOfCongo, static_cast<int>( ::QLocale::DemocraticRepublicOfCongo), 142},
    {sipName_DemocraticRepublicOfKorea, static_cast<int>( ::QLocale::DemocraticRepublicOfKorea), 142},
    {sipName_Denmark, static_cast<int>( ::QLocale::Denmark), 142},
    {sipName_DeseretScript, static_cast<int>( ::QLocale::DeseretScript), 153},
    {sipName_DevanagariScript, static_cast<int>( ::QLocale::DevanagariScript), 153},
    {sipName_DiegoGarcia, static_cast<int>( ::QLocale::DiegoGarcia), 142},
    {sipName_Divehi, static_cast<int>( ::QLocale::Divehi), 148},
    {sipName_Djibouti, static_cast<int>( ::QLocale::Djibouti), 142},
    {sipName_Dogri, static_cast<int>( ::QLocale::Dogri), 148},
    {sipName_Dominica, static_cast<int>( ::QLocale::Dominica), 142},
    {sipName_DominicanRepublic, static_cast<int>( ::QLocale::DominicanRepublic), 142},
    {sipName_Duala, static_cast<int>( ::QLocale::Duala), 148},
    {sipName_DuployanScript, static_cast<int>( ::QLocale::DuployanScript), 153},
    {sipName_Dutch, static_cast<int>( ::QLocale::Dutch), 148},
    {sipName_Dzongkha, static_cast<int>( ::QLocale::Dzongkha), 148},
    {sipName_EastTimor, static_cast<int>( ::QLocale::EastTimor), 142},
    {sipName_EasternCham, static_cast<int>( ::QLocale::EasternCham), 148},
    {sipName_EasternKayah, static_cast<int>( ::QLocale::EasternKayah), 148},
    {sipName_Ecuador, static_cast<int>( ::QLocale::Ecuador), 142},
    {sipName_Egypt, static_cast<int>( ::QLocale::Egypt), 142},
    {sipName_EgyptianHieroglyphsScript, static_cast<int>( ::QLocale::EgyptianHieroglyphsScript), 153},
    {sipName_ElSalvador, static_cast<int>( ::QLocale::ElSalvador), 142},
    {sipName_ElbasanScript, static_cast<int>( ::QLocale::ElbasanScript), 153},
    {sipName_Embu, static_cast<int>( ::QLocale::Embu), 148},
    {sipName_English, static_cast<int>( ::QLocale::English), 148},
    {sipName_EquatorialGuinea, static_cast<int>( ::QLocale::EquatorialGuinea), 142},
    {sipName_Eritrea, static_cast<int>( ::QLocale::Eritrea), 142},
    {sipName_Esperanto, static_cast<int>( ::QLocale::Esperanto), 148},
    {sipName_Estonia, static_cast<int>( ::QLocale::Estonia), 142},
    {sipName_Estonian, static_cast<int>( ::QLocale::Estonian), 148},
    {sipName_Ethiopia, static_cast<int>( ::QLocale::Ethiopia), 142},
    {sipName_EthiopicScript, static_cast<int>( ::QLocale::EthiopicScript), 153},
    {sipName_Etruscan, static_cast<int>( ::QLocale::Etruscan), 148},
    {sipName_Europe, static_cast<int>( ::QLocale::Europe), 142},
    {sipName_EuropeanUnion, static_cast<int>( ::QLocale::EuropeanUnion), 142},
    {sipName_Ewe, static_cast<int>( ::QLocale::Ewe), 148},
    {sipName_Ewondo, static_cast<int>( ::QLocale::Ewondo), 148},
    {sipName_FalklandIslands, static_cast<int>( ::QLocale::FalklandIslands), 142},
    {sipName_FaroeIslands, static_cast<int>( ::QLocale::FaroeIslands), 142},
    {sipName_Faroese, static_cast<int>( ::QLocale::Faroese), 148},
    {sipName_Fiji, static_cast<int>( ::QLocale::Fiji), 142},
    {sipName_Fijian, static_cast<int>( ::QLocale::Fijian), 148},
    {sipName_Filipino, static_cast<int>( ::QLocale::Filipino), 148},
    {sipName_Finland, static_cast<int>( ::QLocale::Finland), 142},
    {sipName_Finnish, static_cast<int>( ::QLocale::Finnish), 148},
    {sipName_FloatingPointShortest, static_cast<int>( ::QLocale::FloatingPointShortest), 146},
    {sipName_France, static_cast<int>( ::QLocale::France), 142},
    {sipName_FraserScript, static_cast<int>( ::QLocale::FraserScript), 153},
    {sipName_French, static_cast<int>( ::QLocale::French), 148},
    {sipName_FrenchGuiana, static_cast<int>( ::QLocale::FrenchGuiana), 142},
    {sipName_FrenchPolynesia, static_cast<int>( ::QLocale::FrenchPolynesia), 142},
    {sipName_FrenchSouthernTerritories, static_cast<int>( ::QLocale::FrenchSouthernTerritories), 142},
    {sipName_Frisian, static_cast<int>( ::QLocale::Frisian), 148},
    {sipName_Friulian, static_cast<int>( ::QLocale::Friulian), 148},
    {sipName_Fulah, static_cast<int>( ::QLocale::Fulah), 148},
    {sipName_Ga, static_cast<int>( ::QLocale::Ga), 148},
    {sipName_Gabon, static_cast<int>( ::QLocale::Gabon), 142},
    {sipName_Gaelic, static_cast<int>( ::QLocale::Gaelic), 148},
    {sipName_Galician, static_cast<int>( ::QLocale::Galician), 148},
    {sipName_Gambia, static_cast<int>( ::QLocale::Gambia), 142},
    {sipName_Ganda, static_cast<int>( ::QLocale::Ganda), 148},
    {sipName_Geez, static_cast<int>( ::QLocale::Geez), 148},
    {sipName_Georgia, static_cast<int>( ::QLocale::Georgia), 142},
    {sipName_Georgian, static_cast<int>( ::QLocale::Georgian), 148},
    {sipName_GeorgianScript, static_cast<int>( ::QLocale::GeorgianScript), 153},
    {sipName_German, static_cast<int>( ::QLocale::German), 148},
    {sipName_Germany, static_cast<int>( ::QLocale::Germany), 142},
    {sipName_Ghana, static_cast<int>( ::QLocale::Ghana), 142},
    {sipName_Gibraltar, static_cast<int>( ::QLocale::Gibraltar), 142},
    {sipName_GlagoliticScript, static_cast<int>( ::QLocale::GlagoliticScript), 153},
    {sipName_Gothic, static_cast<int>( ::QLocale::Gothic), 148},
    {sipName_GothicScript, static_cast<int>( ::QLocale::GothicScript), 153},
    {sipName_GranthaScript, static_cast<int>( ::QLocale::GranthaScript), 153},
    {sipName_Greece, static_cast<int>( ::QLocale::Greece), 142},
    {sipName_Greek, static_cast<int>( ::QLocale::Greek), 148},
    {sipName_GreekScript, static_cast<int>( ::QLocale::GreekScript), 153},
    {sipName_Greenland, static_cast<int>( ::QLocale::Greenland), 142},
    {sipName_Greenlandic, static_cast<int>( ::QLocale::Greenlandic), 148},
    {sipName_Grenada, static_cast<int>( ::QLocale::Grenada), 142},
    {sipName_Guadeloupe, static_cast<int>( ::QLocale::Guadeloupe), 142},
    {sipName_Guam, static_cast<int>( ::QLocale::Guam), 142},
    {sipName_Guarani, static_cast<int>( ::QLocale::Guarani), 148},
    {sipName_Guatemala, static_cast<int>( ::QLocale::Guatemala), 142},
    {sipName_Guernsey, static_cast<int>( ::QLocale::Guernsey), 142},
    {sipName_Guinea, static_cast<int>( ::QLocale::Guinea), 142},
    {sipName_GuineaBissau, static_cast<int>( ::QLocale::GuineaBissau), 142},
    {sipName_Gujarati, static_cast<int>( ::QLocale::Gujarati), 148},
    {sipName_GujaratiScript, static_cast<int>( ::QLocale::GujaratiScript), 153},
    {sipName_GurmukhiScript, static_cast<int>( ::QLocale::GurmukhiScript), 153},
    {sipName_Gusii, static_cast<int>( ::QLocale::Gusii), 148},
    {sipName_Guyana, static_cast<int>( ::QLocale::Guyana), 142},
    {sipName_Haiti, static_cast<int>( ::QLocale::Haiti), 142},
    {sipName_Haitian, static_cast<int>( ::QLocale::Haitian), 148},
    {sipName_HanScript, static_cast<int>( ::QLocale::HanScript), 153},
    {sipName_HanWithBopomofoScript, static_cast<int>( ::QLocale::HanWithBopomofoScript), 153},
    {sipName_HangulScript, static_cast<int>( ::QLocale::HangulScript), 153},
    {sipName_Hanunoo, static_cast<int>( ::QLocale::Hanunoo), 148},
    {sipName_HanunooScript, static_cast<int>( ::QLocale::HanunooScript), 153},
    {sipName_HatranScript, static_cast<int>( ::QLocale::HatranScript), 153},
    {sipName_Hausa, static_cast<int>( ::QLocale::Hausa), 148},
    {sipName_Hawaiian, static_cast<int>( ::QLocale::Hawaiian), 148},
    {sipName_HeardAndMcDonaldIslands, static_cast<int>( ::QLocale::HeardAndMcDonaldIslands), 142},
    {sipName_Hebrew, static_cast<int>( ::QLocale::Hebrew), 148},
    {sipName_HebrewScript, static_cast<int>( ::QLocale::HebrewScript), 153},
    {sipName_Herero, static_cast<int>( ::QLocale::Herero), 148},
    {sipName_HieroglyphicLuwian, static_cast<int>( ::QLocale::HieroglyphicLuwian), 148},
    {sipName_Hindi, static_cast<int>( ::QLocale::Hindi), 148},
    {sipName_HiraganaScript, static_cast<int>( ::QLocale::HiraganaScript), 153},
    {sipName_HiriMotu, static_cast<int>( ::QLocale::HiriMotu), 148},
    {sipName_HmongNjua, static_cast<int>( ::QLocale::HmongNjua), 148},
    {sipName_Ho, static_cast<int>( ::QLocale::Ho), 148},
    {sipName_Honduras, static_cast<int>( ::QLocale::Honduras), 142},
    {sipName_HongKong, static_cast<int>( ::QLocale::HongKong), 142},
    {sipName_Hungarian, static_cast<int>( ::QLocale::Hungarian), 148},
    {sipName_Hungary, static_cast<int>( ::QLocale::Hungary), 142},
    {sipName_Iceland, static_cast<int>( ::QLocale::Iceland), 142},
    {sipName_Icelandic, static_cast<int>( ::QLocale::Icelandic), 148},
    {sipName_Igbo, static_cast<int>( ::QLocale::Igbo), 148},
    {sipName_ImperialAramaicScript, static_cast<int>( ::QLocale::ImperialAramaicScript), 153},
    {sipName_ImperialSystem, static_cast<int>( ::QLocale::ImperialSystem), 149},
    {sipName_ImperialUKSystem, static_cast<int>( ::QLocale::ImperialUKSystem), 149},
    {sipName_ImperialUSSystem, static_cast<int>( ::QLocale::ImperialUSSystem), 149},
    {sipName_InariSami, static_cast<int>( ::QLocale::InariSami), 148},
    {sipName_IncludeTrailingZeroesAfterDot, static_cast<int>( ::QLocale::IncludeTrailingZeroesAfterDot), 150},
    {sipName_India, static_cast<int>( ::QLocale::India), 142},
    {sipName_Indonesia, static_cast<int>( ::QLocale::Indonesia), 142},
    {sipName_Indonesian, static_cast<int>( ::QLocale::Indonesian), 148},
    {sipName_Ingush, static_cast<int>( ::QLocale::Ingush), 148},
    {sipName_InscriptionalPahlaviScript, static_cast<int>( ::QLocale::InscriptionalPahlaviScript), 153},
    {sipName_InscriptionalParthianScript, static_cast<int>( ::QLocale::InscriptionalParthianScript), 153},
    {sipName_Interlingua, static_cast<int>( ::QLocale::Interlingua), 148},
    {sipName_Interlingue, static_cast<int>( ::QLocale::Interlingue), 148},
    {sipName_Inuktitut, static_cast<int>( ::QLocale::Inuktitut), 148},
    {sipName_Inupiak, static_cast<int>( ::QLocale::Inupiak), 148},
    {sipName_Iran, static_cast<int>( ::QLocale::Iran), 142},
    {sipName_Iraq, static_cast<int>( ::QLocale::Iraq), 142},
    {sipName_Ireland, static_cast<int>( ::QLocale::Ireland), 142},
    {sipName_Irish, static_cast<int>( ::QLocale::Irish), 148},
    {sipName_IsleOfMan, static_cast<int>( ::QLocale::IsleOfMan), 142},
    {sipName_Israel, static_cast<int>( ::QLocale::Israel), 142},
    {sipName_Italian, static_cast<int>( ::QLocale::Italian), 148},
    {sipName_Italy, static_cast<int>( ::QLocale::Italy), 142},
    {sipName_IvoryCoast, static_cast<int>( ::QLocale::IvoryCoast), 142},
    {sipName_Jamaica, static_cast<int>( ::QLocale::Jamaica), 142},
    {sipName_JamoScript, static_cast<int>( ::QLocale::JamoScript), 153},
    {sipName_Japan, static_cast<int>( ::QLocale::Japan), 142},
    {sipName_Japanese, static_cast<int>( ::QLocale::Japanese), 148},
    {sipName_JapaneseScript, static_cast<int>( ::QLocale::JapaneseScript), 153},
    {sipName_Javanese, static_cast<int>( ::QLocale::Javanese), 148},
    {sipName_JavaneseScript, static_cast<int>( ::QLocale::JavaneseScript), 153},
    {sipName_Jersey, static_cast<int>( ::QLocale::Jersey), 142},
    {sipName_Jju, static_cast<int>( ::QLocale::Jju), 148},
    {sipName_JolaFonyi, static_cast<int>( ::QLocale::JolaFonyi), 148},
    {sipName_Jordan, static_cast<int>( ::QLocale::Jordan), 142},
    {sipName_Kabuverdianu, static_cast<int>( ::QLocale::Kabuverdianu), 148},
    {sipName_Kabyle, static_cast<int>( ::QLocale::Kabyle), 148},
    {sipName_KaithiScript, static_cast<int>( ::QLocale::KaithiScript), 153},
    {sipName_Kako, static_cast<int>( ::QLocale::Kako), 148},
    {sipName_Kalenjin, static_cast<int>( ::QLocale::Kalenjin), 148},
    {sipName_Kamba, static_cast<int>( ::QLocale::Kamba), 148},
    {sipName_Kannada, static_cast<int>( ::QLocale::Kannada), 148},
    {sipName_KannadaScript, static_cast<int>( ::QLocale::KannadaScript), 153},
    {sipName_Kanuri, static_cast<int>( ::QLocale::Kanuri), 148},
    {sipName_Kashmiri, static_cast<int>( ::QLocale::Kashmiri), 148},
    {sipName_KatakanaScript, static_cast<int>( ::QLocale::KatakanaScript), 153},
    {sipName_KayahLiScript, static_cast<int>( ::QLocale::KayahLiScript), 153},
    {sipName_Kazakh, static_cast<int>( ::QLocale::Kazakh), 148},
    {sipName_Kazakhstan, static_cast<int>( ::QLocale::Kazakhstan), 142},
    {sipName_Kenya, static_cast<int>( ::QLocale::Kenya), 142},
    {sipName_Kenyang, static_cast<int>( ::QLocale::Kenyang), 148},
    {sipName_KharoshthiScript, static_cast<int>( ::QLocale::KharoshthiScript), 153},
    {sipName_Khmer, static_cast<int>( ::QLocale::Khmer), 148},
    {sipName_KhmerScript, static_cast<int>( ::QLocale::KhmerScript), 153},
    {sipName_KhojkiScript, static_cast<int>( ::QLocale::KhojkiScript), 153},
    {sipName_KhudawadiScript, static_cast<int>( ::QLocale::KhudawadiScript), 153},
    {sipName_Kiche, static_cast<int>( ::QLocale::Kiche), 148},
    {sipName_Kikuyu, static_cast<int>( ::QLocale::Kikuyu), 148},
    {sipName_Kinyarwanda, static_cast<int>( ::QLocale::Kinyarwanda), 148},
    {sipName_Kirghiz, static_cast<int>( ::QLocale::Kirghiz), 148},
    {sipName_Kiribati, static_cast<int>( ::QLocale::Kiribati), 142},
    {sipName_Komi, static_cast<int>( ::QLocale::Komi), 148},
    {sipName_Kongo, static_cast<int>( ::QLocale::Kongo), 148},
    {sipName_Konkani, static_cast<int>( ::QLocale::Konkani), 148},
    {sipName_Korean, static_cast<int>( ::QLocale::Korean), 148},
    {sipName_KoreanScript, static_cast<int>( ::QLocale::KoreanScript), 153},
    {sipName_Koro, static_cast<int>( ::QLocale::Koro), 148},
    {sipName_Kosovo, static_cast<int>( ::QLocale::Kosovo), 142},
    {sipName_KoyraChiini, static_cast<int>( ::QLocale::KoyraChiini), 148},
    {sipName_KoyraboroSenni, static_cast<int>( ::QLocale::KoyraboroSenni), 148},
    {sipName_Kpelle, static_cast<int>( ::QLocale::Kpelle), 148},
    {sipName_Kurdish, static_cast<int>( ::QLocale::Kurdish), 148},
    {sipName_Kurundi, static_cast<int>( ::QLocale::Kurundi), 148},
    {sipName_Kuwait, static_cast<int>( ::QLocale::Kuwait), 142},
    {sipName_Kwanyama, static_cast<int>( ::QLocale::Kwanyama), 148},
    {sipName_Kwasio, static_cast<int>( ::QLocale::Kwasio), 148},
    {sipName_Kyrgyzstan, static_cast<int>( ::QLocale::Kyrgyzstan), 142},
    {sipName_Lakota, static_cast<int>( ::QLocale::Lakota), 148},
    {sipName_Langi, static_cast<int>( ::QLocale::Langi), 148},
    {sipName_LannaScript, static_cast<int>( ::QLocale::LannaScript), 153},
    {sipName_Lao, static_cast<int>( ::QLocale::Lao), 148},
    {sipName_LaoScript, static_cast<int>( ::QLocale::LaoScript), 153},
    {sipName_Laos, static_cast<int>( ::QLocale::Laos), 142},
    {sipName_LargeFloweryMiao, static_cast<int>( ::QLocale::LargeFloweryMiao), 148},
    {sipName_LastCountry, static_cast<int>( ::QLocale::LastCountry), 142},
    {sipName_LastLanguage, static_cast<int>( ::QLocale::LastLanguage), 148},
    {sipName_Latin, static_cast<int>( ::QLocale::Latin), 148},
    {sipName_LatinAmerica, static_cast<int>( ::QLocale::LatinAmerica), 142},
    {sipName_LatinAmericaAndTheCaribbean, static_cast<int>( ::QLocale::LatinAmericaAndTheCaribbean), 142},
    {sipName_LatinScript, static_cast<int>( ::QLocale::LatinScript), 153},
    {sipName_Latvia, static_cast<int>( ::QLocale::Latvia), 142},
    {sipName_Latvian, static_cast<int>( ::QLocale::Latvian), 148},
    {sipName_Lebanon, static_cast<int>( ::QLocale::Lebanon), 142},
    {sipName_Lepcha, static_cast<int>( ::QLocale::Lepcha), 148},
    {sipName_LepchaScript, static_cast<int>( ::QLocale::LepchaScript), 153},
    {sipName_Lesotho, static_cast<int>( ::QLocale::Lesotho), 142},
    {sipName_Lezghian, static_cast<int>( ::QLocale::Lezghian), 148},
    {sipName_Liberia, static_cast<int>( ::QLocale::Liberia), 142},
    {sipName_Libya, static_cast<int>( ::QLocale::Libya), 142},
    {sipName_Liechtenstein, static_cast<int>( ::QLocale::Liechtenstein), 142},
    {sipName_Limbu, static_cast<int>( ::QLocale::Limbu), 148},
    {sipName_LimbuScript, static_cast<int>( ::QLocale::LimbuScript), 153},
    {sipName_Limburgish, static_cast<int>( ::QLocale::Limburgish), 148},
    {sipName_LinearA, static_cast<int>( ::QLocale::LinearA), 148},
    {sipName_LinearAScript, static_cast<int>( ::QLocale::LinearAScript), 153},
    {sipName_LinearBScript, static_cast<int>( ::QLocale::LinearBScript), 153},
    {sipName_Lingala, static_cast<int>( ::QLocale::Lingala), 148},
    {sipName_Lisu, static_cast<int>( ::QLocale::Lisu), 148},
    {sipName_LiteraryChinese, static_cast<int>( ::QLocale::LiteraryChinese), 148},
    {sipName_Lithuania, static_cast<int>( ::QLocale::Lithuania), 142},
    {sipName_Lithuanian, static_cast<int>( ::QLocale::Lithuanian), 148},
    {sipName_LongFormat, static_cast<int>( ::QLocale::LongFormat), 147},
    {sipName_LowGerman, static_cast<int>( ::QLocale::LowGerman), 148},
    {sipName_LowerSorbian, static_cast<int>( ::QLocale::LowerSorbian), 148},
    {sipName_Lu, static_cast<int>( ::QLocale::Lu), 148},
    {sipName_LubaKatanga, static_cast<int>( ::QLocale::LubaKatanga), 148},
    {sipName_LuleSami, static_cast<int>( ::QLocale::LuleSami), 148},
    {sipName_Luo, static_cast<int>( ::QLocale::Luo), 148},
    {sipName_Luxembourg, static_cast<int>( ::QLocale::Luxembourg), 142},
    {sipName_Luxembourgish, static_cast<int>( ::QLocale::Luxembourgish), 148},
    {sipName_Luyia, static_cast<int>( ::QLocale::Luyia), 148},
    {sipName_Lycian, static_cast<int>( ::QLocale::Lycian), 148},
    {sipName_LycianScript, static_cast<int>( ::QLocale::LycianScript), 153},
    {sipName_Lydian, static_cast<int>( ::QLocale::Lydian), 148},
    {sipName_LydianScript, static_cast<int>( ::QLocale::LydianScript), 153},
    {sipName_Macau, static_cast<int>( ::QLocale::Macau), 142},
    {sipName_Macedonia, static_cast<int>( ::QLocale::Macedonia), 142},
    {sipName_Macedonian, static_cast<int>( ::QLocale::Macedonian), 148},
    {sipName_Machame, static_cast<int>( ::QLocale::Machame), 148},
    {sipName_Madagascar, static_cast<int>( ::QLocale::Madagascar), 142},
    {sipName_MahajaniScript, static_cast<int>( ::QLocale::MahajaniScript), 153},
    {sipName_Maithili, static_cast<int>( ::QLocale::Maithili), 148},
    {sipName_MakhuwaMeetto, static_cast<int>( ::QLocale::MakhuwaMeetto), 148},
    {sipName_Makonde, static_cast<int>( ::QLocale::Makonde), 148},
    {sipName_Malagasy, static_cast<int>( ::QLocale::Malagasy), 148},
    {sipName_Malawi, static_cast<int>( ::QLocale::Malawi), 142},
    {sipName_Malay, static_cast<int>( ::QLocale::Malay), 148},
    {sipName_Malayalam, static_cast<int>( ::QLocale::Malayalam), 148},
    {sipName_MalayalamScript, static_cast<int>( ::QLocale::MalayalamScript), 153},
    {sipName_Malaysia, static_cast<int>( ::QLocale::Malaysia), 142},
    {sipName_Maldives, static_cast<int>( ::QLocale::Maldives), 142},
    {sipName_Mali, static_cast<int>( ::QLocale::Mali), 142},
    {sipName_Malta, static_cast<int>( ::QLocale::Malta), 142},
    {sipName_Maltese, static_cast<int>( ::QLocale::Maltese), 148},
    {sipName_MandaeanScript, static_cast<int>( ::QLocale::MandaeanScript), 153},
    {sipName_Mandingo, static_cast<int>( ::QLocale::Mandingo), 148},
    {sipName_ManichaeanMiddlePersian, static_cast<int>( ::QLocale::ManichaeanMiddlePersian), 148},
    {sipName_ManichaeanScript, static_cast<int>( ::QLocale::ManichaeanScript), 153},
    {sipName_Manipuri, static_cast<int>( ::QLocale::Manipuri), 148},
    {sipName_Manx, static_cast<int>( ::QLocale::Manx), 148},
    {sipName_Maori, static_cast<int>( ::QLocale::Maori), 148},
    {sipName_Mapuche, static_cast<int>( ::QLocale::Mapuche), 148},
    {sipName_Marathi, static_cast<int>( ::QLocale::Marathi), 148},
    {sipName_MarchenScript, static_cast<int>( ::QLocale::MarchenScript), 153},
    {sipName_MarshallIslands, static_cast<int>( ::QLocale::MarshallIslands), 142},
    {sipName_Marshallese, static_cast<int>( ::QLocale::Marshallese), 148},
    {sipName_Martinique, static_cast<int>( ::QLocale::Martinique), 142},
    {sipName_Masai, static_cast<int>( ::QLocale::Masai), 148},
    {sipName_Mauritania, static_cast<int>( ::QLocale::Mauritania), 142},
    {sipName_Mauritius, static_cast<int>( ::QLocale::Mauritius), 142},
    {sipName_Mayotte, static_cast<int>( ::QLocale::Mayotte), 142},
    {sipName_Mazanderani, static_cast<int>( ::QLocale::Mazanderani), 148},
    {sipName_MeiteiMayekScript, static_cast<int>( ::QLocale::MeiteiMayekScript), 153},
    {sipName_Mende, static_cast<int>( ::QLocale::Mende), 148},
    {sipName_MendeKikakuiScript, static_cast<int>( ::QLocale::MendeKikakuiScript), 153},
    {sipName_Meroitic, static_cast<int>( ::QLocale::Meroitic), 148},
    {sipName_MeroiticCursiveScript, static_cast<int>( ::QLocale::MeroiticCursiveScript), 153},
    {sipName_MeroiticScript, static_cast<int>( ::QLocale::MeroiticScript), 153},
    {sipName_Meru, static_cast<int>( ::QLocale::Meru), 148},
    {sipName_Meta, static_cast<int>( ::QLocale::Meta), 148},
    {sipName_MetricSystem, static_cast<int>( ::QLocale::MetricSystem), 149},
    {sipName_Mexico, static_cast<int>( ::QLocale::Mexico), 142},
    {sipName_Micronesia, static_cast<int>( ::QLocale::Micronesia), 142},
    {sipName_ModiScript, static_cast<int>( ::QLocale::ModiScript), 153},
    {sipName_Mohawk, static_cast<int>( ::QLocale::Mohawk), 148},
    {sipName_Moldavian, static_cast<int>( ::QLocale::Moldavian), 148},
    {sipName_Moldova, static_cast<int>( ::QLocale::Moldova), 142},
    {sipName_Monaco, static_cast<int>( ::QLocale::Monaco), 142},
    {sipName_Mongolia, static_cast<int>( ::QLocale::Mongolia), 142},
    {sipName_Mongolian, static_cast<int>( ::QLocale::Mongolian), 148},
    {sipName_MongolianScript, static_cast<int>( ::QLocale::MongolianScript), 153},
    {sipName_Mono, static_cast<int>( ::QLocale::Mono), 148},
    {sipName_Montenegro, static_cast<int>( ::QLocale::Montenegro), 142},
    {sipName_Montserrat, static_cast<int>( ::QLocale::Montserrat), 142},
    {sipName_Morisyen, static_cast<int>( ::QLocale::Morisyen), 148},
    {sipName_Morocco, static_cast<int>( ::QLocale::Morocco), 142},
    {sipName_Mozambique, static_cast<int>( ::QLocale::Mozambique), 142},
    {sipName_MroScript, static_cast<int>( ::QLocale::MroScript), 153},
    {sipName_Mru, static_cast<int>( ::QLocale::Mru), 148},
    {sipName_MultaniScript, static_cast<int>( ::QLocale::MultaniScript), 153},
    {sipName_Mundang, static_cast<int>( ::QLocale::Mundang), 148},
    {sipName_Myanmar, static_cast<int>( ::QLocale::Myanmar), 142},
    {sipName_MyanmarScript, static_cast<int>( ::QLocale::MyanmarScript), 153},
    {sipName_NabataeanScript, static_cast<int>( ::QLocale::NabataeanScript), 153},
    {sipName_Nama, static_cast<int>( ::QLocale::Nama), 148},
    {sipName_Namibia, static_cast<int>( ::QLocale::Namibia), 142},
    {sipName_NarrowFormat, static_cast<int>( ::QLocale::NarrowFormat), 147},
    {sipName_NauruCountry, static_cast<int>( ::QLocale::NauruCountry), 142},
    {sipName_NauruLanguage, static_cast<int>( ::QLocale::NauruLanguage), 148},
    {sipName_Navaho, static_cast<int>( ::QLocale::Navaho), 148},
    {sipName_Ndonga, static_cast<int>( ::QLocale::Ndonga), 148},
    {sipName_Nepal, static_cast<int>( ::QLocale::Nepal), 142},
    {sipName_Nepali, static_cast<int>( ::QLocale::Nepali), 148},
    {sipName_Netherlands, static_cast<int>( ::QLocale::Netherlands), 142},
    {sipName_NewCaledonia, static_cast<int>( ::QLocale::NewCaledonia), 142},
    {sipName_NewTaiLueScript, static_cast<int>( ::QLocale::NewTaiLueScript), 153},
    {sipName_NewZealand, static_cast<int>( ::QLocale::NewZealand), 142},
    {sipName_NewaScript, static_cast<int>( ::QLocale::NewaScript), 153},
    {sipName_Newari, static_cast<int>( ::QLocale::Newari), 148},
    {sipName_Ngiemboon, static_cast<int>( ::QLocale::Ngiemboon), 148},
    {sipName_Ngomba, static_cast<int>( ::QLocale::Ngomba), 148},
    {sipName_Nicaragua, static_cast<int>( ::QLocale::Nicaragua), 142},
    {sipName_Niger, static_cast<int>( ::QLocale::Niger), 142},
    {sipName_Nigeria, static_cast<int>( ::QLocale::Nigeria), 142},
    {sipName_Niue, static_cast<int>( ::QLocale::Niue), 142},
    {sipName_Nko, static_cast<int>( ::QLocale::Nko), 148},
    {sipName_NkoScript, static_cast<int>( ::QLocale::NkoScript), 153},
    {sipName_NorfolkIsland, static_cast<int>( ::QLocale::NorfolkIsland), 142},
    {sipName_NorthKorea, static_cast<int>( ::QLocale::NorthKorea), 142},
    {sipName_NorthNdebele, static_cast<int>( ::QLocale::NorthNdebele), 148},
    {sipName_NorthernLuri, static_cast<int>( ::QLocale::NorthernLuri), 148},
    {sipName_NorthernMarianaIslands, static_cast<int>( ::QLocale::NorthernMarianaIslands), 142},
    {sipName_NorthernSami, static_cast<int>( ::QLocale::NorthernSami), 148},
    {sipName_NorthernSotho, static_cast<int>( ::QLocale::NorthernSotho), 148},
    {sipName_NorthernThai, static_cast<int>( ::QLocale::NorthernThai), 148},
    {sipName_Norway, static_cast<int>( ::QLocale::Norway), 142},
    {sipName_Norwegian, static_cast<int>( ::QLocale::Norwegian), 148},
    {sipName_NorwegianBokmal, static_cast<int>( ::QLocale::NorwegianBokmal), 148},
    {sipName_NorwegianNynorsk, static_cast<int>( ::QLocale::NorwegianNynorsk), 148},
    {sipName_Nuer, static_cast<int>( ::QLocale::Nuer), 148},
    {sipName_Nyanja, static_cast<int>( ::QLocale::Nyanja), 148},
    {sipName_Nyankole, static_cast<int>( ::QLocale::Nyankole), 148},
    {sipName_Occitan, static_cast<int>( ::QLocale::Occitan), 148},
    {sipName_OghamScript, static_cast<int>( ::QLocale::OghamScript), 153},
    {sipName_Ojibwa, static_cast<int>( ::QLocale::Ojibwa), 148},
    {sipName_OlChikiScript, static_cast<int>( ::QLocale::OlChikiScript), 153},
    {sipName_OldHungarianScript, static_cast<int>( ::QLocale::OldHungarianScript), 153},
    {sipName_OldIrish, static_cast<int>( ::QLocale::OldIrish), 148},
    {sipName_OldItalicScript, static_cast<int>( ::QLocale::OldItalicScript), 153},
    {sipName_OldNorse, static_cast<int>( ::QLocale::OldNorse), 148},
    {sipName_OldNorthArabianScript, static_cast<int>( ::QLocale::OldNorthArabianScript), 153},
    {sipName_OldPermicScript, static_cast<int>( ::QLocale::OldPermicScript), 153},
    {sipName_OldPersian, static_cast<int>( ::QLocale::OldPersian), 148},
    {sipName_OldPersianScript, static_cast<int>( ::QLocale::OldPersianScript), 153},
    {sipName_OldSouthArabianScript, static_cast<int>( ::QLocale::OldSouthArabianScript), 153},
    {sipName_OldTurkish, static_cast<int>( ::QLocale::OldTurkish), 148},
    {sipName_Oman, static_cast<int>( ::QLocale::Oman), 142},
    {sipName_OmitGroupSeparator, static_cast<int>( ::QLocale::OmitGroupSeparator), 150},
    {sipName_OmitLeadingZeroInExponent, static_cast<int>( ::QLocale::OmitLeadingZeroInExponent), 150},
    {sipName_Oriya, static_cast<int>( ::QLocale::Oriya), 148},
    {sipName_OriyaScript, static_cast<int>( ::QLocale::OriyaScript), 153},
    {sipName_OrkhonScript, static_cast<int>( ::QLocale::OrkhonScript), 153},
    {sipName_Oromo, static_cast<int>( ::QLocale::Oromo), 148},
    {sipName_Osage, static_cast<int>( ::QLocale::Osage), 148},
    {sipName_OsageScript, static_cast<int>( ::QLocale::OsageScript), 153},
    {sipName_OsmanyaScript, static_cast<int>( ::QLocale::OsmanyaScript), 153},
    {sipName_Ossetic, static_cast<int>( ::QLocale::Ossetic), 148},
    {sipName_OutlyingOceania, static_cast<int>( ::QLocale::OutlyingOceania), 142},
    {sipName_PahawhHmongScript, static_cast<int>( ::QLocale::PahawhHmongScript), 153},
    {sipName_Pahlavi, static_cast<int>( ::QLocale::Pahlavi), 148},
    {sipName_Pakistan, static_cast<int>( ::QLocale::Pakistan), 142},
    {sipName_Palau, static_cast<int>( ::QLocale::Palau), 142},
    {sipName_Palauan, static_cast<int>( ::QLocale::Palauan), 148},
    {sipName_PalestinianTerritories, static_cast<int>( ::QLocale::PalestinianTerritories), 142},
    {sipName_Pali, static_cast<int>( ::QLocale::Pali), 148},
    {sipName_PalmyreneScript, static_cast<int>( ::QLocale::PalmyreneScript), 153},
    {sipName_Panama, static_cast<int>( ::QLocale::Panama), 142},
    {sipName_Papiamento, static_cast<int>( ::QLocale::Papiamento), 148},
    {sipName_PapuaNewGuinea, static_cast<int>( ::QLocale::PapuaNewGuinea), 142},
    {sipName_Paraguay, static_cast<int>( ::QLocale::Paraguay), 142},
    {sipName_Parthian, static_cast<int>( ::QLocale::Parthian), 148},
    {sipName_Pashto, static_cast<int>( ::QLocale::Pashto), 148},
    {sipName_PauCinHauScript, static_cast<int>( ::QLocale::PauCinHauScript), 153},
    {sipName_PeoplesRepublicOfCongo, static_cast<int>( ::QLocale::PeoplesRepublicOfCongo), 142},
    {sipName_Persian, static_cast<int>( ::QLocale::Persian), 148},
    {sipName_Peru, static_cast<int>( ::QLocale::Peru), 142},
    {sipName_PhagsPaScript, static_cast<int>( ::QLocale::PhagsPaScript), 153},
    {sipName_Philippines, static_cast<int>( ::QLocale::Philippines), 142},
    {sipName_Phoenician, static_cast<int>( ::QLocale::Phoenician), 148},
    {sipName_PhoenicianScript, static_cast<int>( ::QLocale::PhoenicianScript), 153},
    {sipName_Pitcairn, static_cast<int>( ::QLocale::Pitcairn), 142},
    {sipName_Poland, static_cast<int>( ::QLocale::Poland), 142},
    {sipName_Polish, static_cast<int>( ::QLocale::Polish), 148},
    {sipName_PollardPhoneticScript, static_cast<int>( ::QLocale::PollardPhoneticScript), 153},
    {sipName_Portugal, static_cast<int>( ::QLocale::Portugal), 142},
    {sipName_Portuguese, static_cast<int>( ::QLocale::Portuguese), 148},
    {sipName_PrakritLanguage, static_cast<int>( ::QLocale::PrakritLanguage), 148},
    {sipName_Prussian, static_cast<int>( ::QLocale::Prussian), 148},
    {sipName_PsalterPahlaviScript, static_cast<int>( ::QLocale::PsalterPahlaviScript), 153},
    {sipName_PuertoRico, static_cast<int>( ::QLocale::PuertoRico), 142},
    {sipName_Punjabi, static_cast<int>( ::QLocale::Punjabi), 148},
    {sipName_Qatar, static_cast<int>( ::QLocale::Qatar), 142},
    {sipName_Quechua, static_cast<int>( ::QLocale::Quechua), 148},
    {sipName_Rejang, static_cast<int>( ::QLocale::Rejang), 148},
    {sipName_RejangScript, static_cast<int>( ::QLocale::RejangScript), 153},
    {sipName_RejectGroupSeparator, static_cast<int>( ::QLocale::RejectGroupSeparator), 150},
    {sipName_RejectLeadingZeroInExponent, static_cast<int>( ::QLocale::RejectLeadingZeroInExponent), 150},
    {sipName_RejectTrailingZeroesAfterDot, static_cast<int>( ::QLocale::RejectTrailingZeroesAfterDot), 150},
    {sipName_RepublicOfKorea, static_cast<int>( ::QLocale::RepublicOfKorea), 142},
    {sipName_Reunion, static_cast<int>( ::QLocale::Reunion), 142},
    {sipName_RhaetoRomance, static_cast<int>( ::QLocale::RhaetoRomance), 148},
    {sipName_Romania, static_cast<int>( ::QLocale::Romania), 142},
    {sipName_Romanian, static_cast<int>( ::QLocale::Romanian), 148},
    {sipName_Romansh, static_cast<int>( ::QLocale::Romansh), 148},
    {sipName_Rombo, static_cast<int>( ::QLocale::Rombo), 148},
    {sipName_Rundi, static_cast<int>( ::QLocale::Rundi), 148},
    {sipName_RunicScript, static_cast<int>( ::QLocale::RunicScript), 153},
    {sipName_Russia, static_cast<int>( ::QLocale::Russia), 142},
    {sipName_Russian, static_cast<int>( ::QLocale::Russian), 148},
    {sipName_RussianFederation, static_cast<int>( ::QLocale::RussianFederation), 142},
    {sipName_Rwa, static_cast<int>( ::QLocale::Rwa), 148},
    {sipName_Rwanda, static_cast<int>( ::QLocale::Rwanda), 142},
    {sipName_Sabaean, static_cast<int>( ::QLocale::Sabaean), 148},
    {sipName_Saho, static_cast<int>( ::QLocale::Saho), 148},
    {sipName_SaintBarthelemy, static_cast<int>( ::QLocale::SaintBarthelemy), 142},
    {sipName_SaintHelena, static_cast<int>( ::QLocale::SaintHelena), 142},
    {sipName_SaintKittsAndNevis, static_cast<int>( ::QLocale::SaintKittsAndNevis), 142},
    {sipName_SaintLucia, static_cast<int>( ::QLocale::SaintLucia), 142},
    {sipName_SaintMartin, static_cast<int>( ::QLocale::SaintMartin), 142},
    {sipName_SaintPierreAndMiquelon, static_cast<int>( ::QLocale::SaintPierreAndMiquelon), 142},
    {sipName_SaintVincentAndTheGrenadines, static_cast<int>( ::QLocale::SaintVincentAndTheGrenadines), 142},
    {sipName_Sakha, static_cast<int>( ::QLocale::Sakha), 148},
    {sipName_Samaritan, static_cast<int>( ::QLocale::Samaritan), 148},
    {sipName_SamaritanScript, static_cast<int>( ::QLocale::SamaritanScript), 153},
    {sipName_Samburu, static_cast<int>( ::QLocale::Samburu), 148},
    {sipName_Samoa, static_cast<int>( ::QLocale::Samoa), 142},
    {sipName_Samoan, static_cast<int>( ::QLocale::Samoan), 148},
    {sipName_SanMarino, static_cast<int>( ::QLocale::SanMarino), 142},
    {sipName_Sango, static_cast<int>( ::QLocale::Sango), 148},
    {sipName_Sangu, static_cast<int>( ::QLocale::Sangu), 148},
    {sipName_Sanskrit, static_cast<int>( ::QLocale::Sanskrit), 148},
    {sipName_Santali, static_cast<int>( ::QLocale::Santali), 148},
    {sipName_SaoTomeAndPrincipe, static_cast<int>( ::QLocale::SaoTomeAndPrincipe), 142},
    {sipName_Saraiki, static_cast<int>( ::QLocale::Saraiki), 148},
    {sipName_Sardinian, static_cast<int>( ::QLocale::Sardinian), 148},
    {sipName_SaudiArabia, static_cast<int>( ::QLocale::SaudiArabia), 142},
    {sipName_Saurashtra, static_cast<int>( ::QLocale::Saurashtra), 148},
    {sipName_SaurashtraScript, static_cast<int>( ::QLocale::SaurashtraScript), 153},
    {sipName_Sena, static_cast<int>( ::QLocale::Sena), 148},
    {sipName_Senegal, static_cast<int>( ::QLocale::Senegal), 142},
    {sipName_Serbia, static_cast<int>( ::QLocale::Serbia), 142},
    {sipName_Serbian, static_cast<int>( ::QLocale::Serbian), 148},
    {sipName_SerboCroatian, static_cast<int>( ::QLocale::SerboCroatian), 148},
    {sipName_Seychelles, static_cast<int>( ::QLocale::Seychelles), 142},
    {sipName_Shambala, static_cast<int>( ::QLocale::Shambala), 148},
    {sipName_SharadaScript, static_cast<int>( ::QLocale::SharadaScript), 153},
    {sipName_ShavianScript, static_cast<int>( ::QLocale::ShavianScript), 153},
    {sipName_Shona, static_cast<int>( ::QLocale::Shona), 148},
    {sipName_ShortFormat, static_cast<int>( ::QLocale::ShortFormat), 147},
    {sipName_SichuanYi, static_cast<int>( ::QLocale::SichuanYi), 148},
    {sipName_Sidamo, static_cast<int>( ::QLocale::Sidamo), 148},
    {sipName_SiddhamScript, static_cast<int>( ::QLocale::SiddhamScript), 153},
    {sipName_SierraLeone, static_cast<int>( ::QLocale::SierraLeone), 142},
    {sipName_SignWritingScript, static_cast<int>( ::QLocale::SignWritingScript), 153},
    {sipName_SimplifiedChineseScript, static_cast<int>( ::QLocale::SimplifiedChineseScript), 153},
    {sipName_SimplifiedHanScript, static_cast<int>( ::QLocale::SimplifiedHanScript), 153},
    {sipName_Sindhi, static_cast<int>( ::QLocale::Sindhi), 148},
    {sipName_Singapore, static_cast<int>( ::QLocale::Singapore), 142},
    {sipName_Sinhala, static_cast<int>( ::QLocale::Sinhala), 148},
    {sipName_SinhalaScript, static_cast<int>( ::QLocale::SinhalaScript), 153},
    {sipName_SintMaarten, static_cast<int>( ::QLocale::SintMaarten), 142},
    {sipName_SkoltSami, static_cast<int>( ::QLocale::SkoltSami), 148},
    {sipName_Slovak, static_cast<int>( ::QLocale::Slovak), 148},
    {sipName_Slovakia, static_cast<int>( ::QLocale::Slovakia), 142},
    {sipName_Slovenia, static_cast<int>( ::QLocale::Slovenia), 142},
    {sipName_Slovenian, static_cast<int>( ::QLocale::Slovenian), 148},
    {sipName_Soga, static_cast<int>( ::QLocale::Soga), 148},
    {sipName_SolomonIslands, static_cast<int>( ::QLocale::SolomonIslands), 142},
    {sipName_Somali, static_cast<int>( ::QLocale::Somali), 148},
    {sipName_Somalia, static_cast<int>( ::QLocale::Somalia), 142},
    {sipName_Sora, static_cast<int>( ::QLocale::Sora), 148},
    {sipName_SoraSompengScript, static_cast<int>( ::QLocale::SoraSompengScript), 153},
    {sipName_SouthAfrica, static_cast<int>( ::QLocale::SouthAfrica), 142},
    {sipName_SouthGeorgiaAndTheSouthSandwichIslands, static_cast<int>( ::QLocale::SouthGeorgiaAndTheSouthSandwichIslands), 142},
    {sipName_SouthKorea, static_cast<int>( ::QLocale::SouthKorea), 142},
    {sipName_SouthNdebele, static_cast<int>( ::QLocale::SouthNdebele), 148},
    {sipName_SouthSudan, static_cast<int>( ::QLocale::SouthSudan), 142},
    {sipName_SouthernSami, static_cast<int>( ::QLocale::SouthernSami), 148},
    {sipName_SouthernSotho, static_cast<int>( ::QLocale::SouthernSotho), 148},
    {sipName_Spain, static_cast<int>( ::QLocale::Spain), 142},
    {sipName_Spanish, static_cast<int>( ::QLocale::Spanish), 148},
    {sipName_SriLanka, static_cast<int>( ::QLocale::SriLanka), 142},
    {sipName_StandardMoroccanTamazight, static_cast<int>( ::QLocale::StandardMoroccanTamazight), 148},
    {sipName_StandardQuotation, static_cast<int>( ::QLocale::StandardQuotation), 152},
    {sipName_Sudan, static_cast<int>( ::QLocale::Sudan), 142},
    {sipName_Sundanese, static_cast<int>( ::QLocale::Sundanese), 148},
    {sipName_SundaneseScript, static_cast<int>( ::QLocale::SundaneseScript), 153},
    {sipName_Suriname, static_cast<int>( ::QLocale::Suriname), 142},
    {sipName_SvalbardAndJanMayenIslands, static_cast<int>( ::QLocale::SvalbardAndJanMayenIslands), 142},
    {sipName_Swahili, static_cast<int>( ::QLocale::Swahili), 148},
    {sipName_Swati, static_cast<int>( ::QLocale::Swati), 148},
    {sipName_Swaziland, static_cast<int>( ::QLocale::Swaziland), 142},
    {sipName_Sweden, static_cast<int>( ::QLocale::Sweden), 142},
    {sipName_Swedish, static_cast<int>( ::QLocale::Swedish), 148},
    {sipName_SwissGerman, static_cast<int>( ::QLocale::SwissGerman), 148},
    {sipName_Switzerland, static_cast<int>( ::QLocale::Switzerland), 142},
    {sipName_Sylheti, static_cast<int>( ::QLocale::Sylheti), 148},
    {sipName_SylotiNagriScript, static_cast<int>( ::QLocale::SylotiNagriScript), 153},
    {sipName_Syria, static_cast<int>( ::QLocale::Syria), 142},
    {sipName_Syriac, static_cast<int>( ::QLocale::Syriac), 148},
    {sipName_SyriacScript, static_cast<int>( ::QLocale::SyriacScript), 153},
    {sipName_SyrianArabRepublic, static_cast<int>( ::QLocale::SyrianArabRepublic), 142},
    {sipName_Tachelhit, static_cast<int>( ::QLocale::Tachelhit), 148},
    {sipName_Tagalog, static_cast<int>( ::QLocale::Tagalog), 148},
    {sipName_TagalogScript, static_cast<int>( ::QLocale::TagalogScript), 153},
    {sipName_Tagbanwa, static_cast<int>( ::QLocale::Tagbanwa), 148},
    {sipName_TagbanwaScript, static_cast<int>( ::QLocale::TagbanwaScript), 153},
    {sipName_Tahitian, static_cast<int>( ::QLocale::Tahitian), 148},
    {sipName_TaiDam, static_cast<int>( ::QLocale::TaiDam), 148},
    {sipName_TaiLeScript, static_cast<int>( ::QLocale::TaiLeScript), 153},
    {sipName_TaiNua, static_cast<int>( ::QLocale::TaiNua), 148},
    {sipName_TaiVietScript, static_cast<int>( ::QLocale::TaiVietScript), 153},
    {sipName_Taita, static_cast<int>( ::QLocale::Taita), 148},
    {sipName_Taiwan, static_cast<int>( ::QLocale::Taiwan), 142},
    {sipName_Tajik, static_cast<int>( ::QLocale::Tajik), 148},
    {sipName_Tajikistan, static_cast<int>( ::QLocale::Tajikistan), 142},
    {sipName_TakriScript, static_cast<int>( ::QLocale::TakriScript), 153},
    {sipName_Tamil, static_cast<int>( ::QLocale::Tamil), 148},
    {sipName_TamilScript, static_cast<int>( ::QLocale::TamilScript), 153},
    {sipName_Tangut, static_cast<int>( ::QLocale::Tangut), 148},
    {sipName_TangutScript, static_cast<int>( ::QLocale::TangutScript), 153},
    {sipName_Tanzania, static_cast<int>( ::QLocale::Tanzania), 142},
    {sipName_Taroko, static_cast<int>( ::QLocale::Taroko), 148},
    {sipName_Tasawaq, static_cast<int>( ::QLocale::Tasawaq), 148},
    {sipName_Tatar, static_cast<int>( ::QLocale::Tatar), 148},
    {sipName_TedimChin, static_cast<int>( ::QLocale::TedimChin), 148},
    {sipName_Telugu, static_cast<int>( ::QLocale::Telugu), 148},
    {sipName_TeluguScript, static_cast<int>( ::QLocale::TeluguScript), 153},
    {sipName_Teso, static_cast<int>( ::QLocale::Teso), 148},
    {sipName_ThaanaScript, static_cast<int>( ::QLocale::ThaanaScript), 153},
    {sipName_Thai, static_cast<int>( ::QLocale::Thai), 148},
    {sipName_ThaiScript, static_cast<int>( ::QLocale::ThaiScript), 153},
    {sipName_Thailand, static_cast<int>( ::QLocale::Thailand), 142},
    {sipName_Tibetan, static_cast<int>( ::QLocale::Tibetan), 148},
    {sipName_TibetanScript, static_cast<int>( ::QLocale::TibetanScript), 153},
    {sipName_TifinaghScript, static_cast<int>( ::QLocale::TifinaghScript), 153},
    {sipName_Tigre, static_cast<int>( ::QLocale::Tigre), 148},
    {sipName_Tigrinya, static_cast<int>( ::QLocale::Tigrinya), 148},
    {sipName_TirhutaScript, static_cast<int>( ::QLocale::TirhutaScript), 153},
    {sipName_Togo, static_cast<int>( ::QLocale::Togo), 142},
    {sipName_TokPisin, static_cast<int>( ::QLocale::TokPisin), 148},
    {sipName_Tokelau, static_cast<int>( ::QLocale::Tokelau), 142},
    {sipName_TokelauCountry, static_cast<int>( ::QLocale::TokelauCountry), 142},
    {sipName_TokelauLanguage, static_cast<int>( ::QLocale::TokelauLanguage), 148},
    {sipName_Tonga, static_cast<int>( ::QLocale::Tonga), 142},
    {sipName_Tongan, static_cast<int>( ::QLocale::Tongan), 148},
    {sipName_TraditionalChineseScript, static_cast<int>( ::QLocale::TraditionalChineseScript), 153},
    {sipName_TraditionalHanScript, static_cast<int>( ::QLocale::TraditionalHanScript), 153},
    {sipName_TrinidadAndTobago, static_cast<int>( ::QLocale::TrinidadAndTobago), 142},
    {sipName_TristanDaCunha, static_cast<int>( ::QLocale::TristanDaCunha), 142},
    {sipName_Tsonga, static_cast<int>( ::QLocale::Tsonga), 148},
    {sipName_Tswana, static_cast<int>( ::QLocale::Tswana), 148},
    {sipName_Tunisia, static_cast<int>( ::QLocale::Tunisia), 142},
    {sipName_Turkey, static_cast<int>( ::QLocale::Turkey), 142},
    {sipName_Turkish, static_cast<int>( ::QLocale::Turkish), 148},
    {sipName_Turkmen, static_cast<int>( ::QLocale::Turkmen), 148},
    {sipName_Turkmenistan, static_cast<int>( ::QLocale::Turkmenistan), 142},
    {sipName_TurksAndCaicosIslands, static_cast<int>( ::QLocale::TurksAndCaicosIslands), 142},
    {sipName_Tuvalu, static_cast<int>( ::QLocale::Tuvalu), 142},
    {sipName_TuvaluCountry, static_cast<int>( ::QLocale::TuvaluCountry), 142},
    {sipName_TuvaluLanguage, static_cast<int>( ::QLocale::TuvaluLanguage), 148},
    {sipName_Twi, static_cast<int>( ::QLocale::Twi), 148},
    {sipName_Tyap, static_cast<int>( ::QLocale::Tyap), 148},
    {sipName_Uganda, static_cast<int>( ::QLocale::Uganda), 142},
    {sipName_Ugaritic, static_cast<int>( ::QLocale::Ugaritic), 148},
    {sipName_UgariticScript, static_cast<int>( ::QLocale::UgariticScript), 153},
    {sipName_Uighur, static_cast<int>( ::QLocale::Uighur), 148},
    {sipName_Uigur, static_cast<int>( ::QLocale::Uigur), 148},
    {sipName_Ukraine, static_cast<int>( ::QLocale::Ukraine), 142},
    {sipName_Ukrainian, static_cast<int>( ::QLocale::Ukrainian), 148},
    {sipName_UncodedLanguages, static_cast<int>( ::QLocale::UncodedLanguages), 148},
    {sipName_UnitedArabEmirates, static_cast<int>( ::QLocale::UnitedArabEmirates), 142},
    {sipName_UnitedKingdom, static_cast<int>( ::QLocale::UnitedKingdom), 142},
    {sipName_UnitedStates, static_cast<int>( ::QLocale::UnitedStates), 142},
    {sipName_UnitedStatesMinorOutlyingIslands, static_cast<int>( ::QLocale::UnitedStatesMinorOutlyingIslands), 142},
    {sipName_UnitedStatesVirginIslands, static_cast<int>( ::QLocale::UnitedStatesVirginIslands), 142},
    {sipName_UpperSorbian, static_cast<int>( ::QLocale::UpperSorbian), 148},
    {sipName_Urdu, static_cast<int>( ::QLocale::Urdu), 148},
    {sipName_Uruguay, static_cast<int>( ::QLocale::Uruguay), 142},
    {sipName_Uzbek, static_cast<int>( ::QLocale::Uzbek), 148},
    {sipName_Uzbekistan, static_cast<int>( ::QLocale::Uzbekistan), 142},
    {sipName_Vai, static_cast<int>( ::QLocale::Vai), 148},
    {sipName_VaiScript, static_cast<int>( ::QLocale::VaiScript), 153},
    {sipName_Vanuatu, static_cast<int>( ::QLocale::Vanuatu), 142},
    {sipName_VarangKshitiScript, static_cast<int>( ::QLocale::VarangKshitiScript), 153},
    {sipName_VaticanCityState, static_cast<int>( ::QLocale::VaticanCityState), 142},
    {sipName_Venda, static_cast<int>( ::QLocale::Venda), 148},
    {sipName_Venezuela, static_cast<int>( ::QLocale::Venezuela), 142},
    {sipName_Vietnam, static_cast<int>( ::QLocale::Vietnam), 142},
    {sipName_Vietnamese, static_cast<int>( ::QLocale::Vietnamese), 148},
    {sipName_Volapuk, static_cast<int>( ::QLocale::Volapuk), 148},
    {sipName_Vunjo, static_cast<int>( ::QLocale::Vunjo), 148},
    {sipName_Walamo, static_cast<int>( ::QLocale::Walamo), 148},
    {sipName_WallisAndFutunaIslands, static_cast<int>( ::QLocale::WallisAndFutunaIslands), 142},
    {sipName_Walloon, static_cast<int>( ::QLocale::Walloon), 148},
    {sipName_Walser, static_cast<int>( ::QLocale::Walser), 148},
    {sipName_Warlpiri, static_cast<int>( ::QLocale::Warlpiri), 148},
    {sipName_Welsh, static_cast<int>( ::QLocale::Welsh), 148},
    {sipName_WesternFrisian, static_cast<int>( ::QLocale::WesternFrisian), 148},
    {sipName_WesternSahara, static_cast<int>( ::QLocale::WesternSahara), 142},
    {sipName_Wolof, static_cast<int>( ::QLocale::Wolof), 148},
    {sipName_World, static_cast<int>( ::QLocale::World), 142},
    {sipName_Xhosa, static_cast<int>( ::QLocale::Xhosa), 148},
    {sipName_Yangben, static_cast<int>( ::QLocale::Yangben), 148},
    {sipName_Yemen, static_cast<int>( ::QLocale::Yemen), 142},
    {sipName_YiScript, static_cast<int>( ::QLocale::YiScript), 153},
    {sipName_Yiddish, static_cast<int>( ::QLocale::Yiddish), 148},
    {sipName_Yoruba, static_cast<int>( ::QLocale::Yoruba), 148},
    {sipName_Zambia, static_cast<int>( ::QLocale::Zambia), 142},
    {sipName_Zarma, static_cast<int>( ::QLocale::Zarma), 148},
    {sipName_Zhuang, static_cast<int>( ::QLocale::Zhuang), 148},
    {sipName_Zimbabwe, static_cast<int>( ::QLocale::Zimbabwe), 142},
    {sipName_Zulu, static_cast<int>( ::QLocale::Zulu), 148},
};

PyDoc_STRVAR(doc_QLocale, "\1QLocale()\n"
"QLocale(str)\n"
"QLocale(QLocale.Language, country: QLocale.Country = QLocale.AnyCountry)\n"
"QLocale(QLocale)\n"
"QLocale(QLocale.Language, QLocale.Script, QLocale.Country)");


static pyqt5ClassPluginDef plugin_QLocale = {
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtCore_QLocale = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QLocale,
        SIP_NULLPTR,
        &plugin_QLocale
    },
    {
        sipNameNr_QLocale,
        {0, 0, 1},
        57, methods_QLocale,
        814, enummembers_QLocale,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QLocale,
    -1,
    sipNameNr_sip_simplewrapper,
    SIP_NULLPTR,
    slots_QLocale,
    init_type_QLocale,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_QLocale,
    assign_QLocale,
    array_QLocale,
    copy_QLocale,
    release_QLocale,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
