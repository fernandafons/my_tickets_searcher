/*
 * Interface wrapper code.
 *
 * Generated by SIP 5.3.0
 *
 * Copyright (c) 2019 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsview.sip"
#include <qgraphicsview.h>
#line 29 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"

#line 28 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 33 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 36 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 39 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 95 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 42 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 30 "sip/QtGui/qtransform.sip"
#include <qtransform.h>
#line 45 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 48 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsview.sip"
#include <qgraphicsview.h>
#line 51 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 54 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 164 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 57 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 500 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 60 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 451 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 63 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 416 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 66 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 389 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 69 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 253 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 72 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 205 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 75 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 354 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 78 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 375 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 81 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 561 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 84 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 583 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 87 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 610 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 90 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 599 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 93 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 473 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 96 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 99 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 102 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 105 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtGui/qbrush.sip"
#include <qbrush.h>
#line 108 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 111 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 114 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtGui/qpolygon.sip"
#include <qpolygon.h>
#line 117 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 329 "sip/QtGui/qpolygon.sip"
#include <qpolygon.h>
#line 120 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 123 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 126 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 129 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsview.sip"
#include <qgraphicsview.h>
#line 132 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 135 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 138 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 141 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qabstractscrollarea.sip"
#include <qabstractscrollarea.h>
#line 144 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 147 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qscrollbar.sip"
#include <qscrollbar.h>
#line 150 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 28 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 153 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtCore/qmargins.sip"
#include <qmargins.h>
#line 156 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 208 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qstyleoption.sip"
#include <qstyleoption.h>
#line 159 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qframe.sip"
#include <qframe.h>
#line 162 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 165 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtGui/qicon.sip"
#include <qicon.h>
#line 168 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 30 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 171 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtGui/qwindow.sip"
#include <qwindow.h>
#line 174 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 177 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtGui/qpixmap.sip"
#include <qpixmap.h>
#line 180 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 183 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 186 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 189 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsproxywidget.sip"
#include <qgraphicsproxywidget.h>
#line 192 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 189 "sip/QtCore/qglobal.sip"
#include <QtGlobal>
#line 195 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtCore/qlocale.sip"
#include <qlocale.h>
#line 198 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtGui/qfontinfo.sip"
#include <qfontinfo.h>
#line 201 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtGui/qfontmetrics.sip"
#include <qfontmetrics.h>
#line 204 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtGui/qfont.sip"
#include <qfont.h>
#line 207 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtGui/qpaintdevice.sip"
#include <qpaintdevice.h>
#line 210 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 462 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 213 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 666 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 216 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 296 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 219 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 429 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 222 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 403 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 225 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 52 "sip/QtGui/qpaintengine.sip"
#include <qpaintengine.h>
#line 228 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 231 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qaction.sip"
#include <qaction.h>
#line 234 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qlayout.sip"
#include <qlayout.h>
#line 237 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtGui/qregion.sip"
#include <qregion.h>
#line 240 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 243 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 246 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtGui/qkeysequence.sip"
#include <qkeysequence.h>
#line 249 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 252 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtGui/qbitmap.sip"
#include <qbitmap.h>
#line 255 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtGui/qpalette.sip"
#include <qpalette.h>
#line 258 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qstyle.sip"
#include <qstyle.h>
#line 261 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 146 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 266 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 269 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 247 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 272 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 235 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 275 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 278 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 281 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 284 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 287 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 290 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 293 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 296 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsView.cpp"


class sipQGraphicsView : public  ::QGraphicsView
{
public:
    sipQGraphicsView( ::QWidget*);
    sipQGraphicsView( ::QGraphicsScene*, ::QWidget*);
    virtual ~sipQGraphicsView();

    int qt_metacall(QMetaObject::Call, int, void **) SIP_OVERRIDE;
    void *qt_metacast(const char *) SIP_OVERRIDE;
    const QMetaObject *metaObject() const SIP_OVERRIDE;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void drawForeground( ::QPainter*,const  ::QRectF&) SIP_OVERRIDE;
    void drawBackground( ::QPainter*,const  ::QRectF&) SIP_OVERRIDE;
    void disconnectNotify(const  ::QMetaMethod&) SIP_OVERRIDE;
    void connectNotify(const  ::QMetaMethod&) SIP_OVERRIDE;
    void customEvent( ::QEvent*) SIP_OVERRIDE;
    void childEvent( ::QChildEvent*) SIP_OVERRIDE;
    void timerEvent( ::QTimerEvent*) SIP_OVERRIDE;
    bool eventFilter( ::QObject*, ::QEvent*) SIP_OVERRIDE;
    bool event( ::QEvent*) SIP_OVERRIDE;
    int metric( ::QPaintDevice::PaintDeviceMetric) const SIP_OVERRIDE;
     ::QPaintEngine* paintEngine() const SIP_OVERRIDE;
    int devType() const SIP_OVERRIDE;
    void setVisible(bool) SIP_OVERRIDE;
     ::QSize sizeHint() const SIP_OVERRIDE;
     ::QSize minimumSizeHint() const SIP_OVERRIDE;
    int heightForWidth(int) const SIP_OVERRIDE;
    void mousePressEvent( ::QMouseEvent*) SIP_OVERRIDE;
    void mouseReleaseEvent( ::QMouseEvent*) SIP_OVERRIDE;
    void mouseDoubleClickEvent( ::QMouseEvent*) SIP_OVERRIDE;
    void mouseMoveEvent( ::QMouseEvent*) SIP_OVERRIDE;
    void wheelEvent( ::QWheelEvent*) SIP_OVERRIDE;
    void keyPressEvent( ::QKeyEvent*) SIP_OVERRIDE;
    void keyReleaseEvent( ::QKeyEvent*) SIP_OVERRIDE;
    void focusInEvent( ::QFocusEvent*) SIP_OVERRIDE;
    void focusOutEvent( ::QFocusEvent*) SIP_OVERRIDE;
    void enterEvent( ::QEvent*) SIP_OVERRIDE;
    void leaveEvent( ::QEvent*) SIP_OVERRIDE;
    void paintEvent( ::QPaintEvent*) SIP_OVERRIDE;
    void moveEvent( ::QMoveEvent*) SIP_OVERRIDE;
    void resizeEvent( ::QResizeEvent*) SIP_OVERRIDE;
    void closeEvent( ::QCloseEvent*) SIP_OVERRIDE;
    void contextMenuEvent( ::QContextMenuEvent*) SIP_OVERRIDE;
    void tabletEvent( ::QTabletEvent*) SIP_OVERRIDE;
    void actionEvent( ::QActionEvent*) SIP_OVERRIDE;
    void dragEnterEvent( ::QDragEnterEvent*) SIP_OVERRIDE;
    void dragMoveEvent( ::QDragMoveEvent*) SIP_OVERRIDE;
    void dragLeaveEvent( ::QDragLeaveEvent*) SIP_OVERRIDE;
    void dropEvent( ::QDropEvent*) SIP_OVERRIDE;
    void showEvent( ::QShowEvent*) SIP_OVERRIDE;
    void hideEvent( ::QHideEvent*) SIP_OVERRIDE;
    void changeEvent( ::QEvent*) SIP_OVERRIDE;
    void inputMethodEvent( ::QInputMethodEvent*) SIP_OVERRIDE;
     ::QVariant inputMethodQuery( ::Qt::InputMethodQuery) const SIP_OVERRIDE;
    bool focusNextPrevChild(bool) SIP_OVERRIDE;
    bool hasHeightForWidth() const SIP_OVERRIDE;
    bool nativeEvent(const  ::QByteArray&,void*,long*) SIP_OVERRIDE;
     ::QPainter* sharedPainter() const SIP_OVERRIDE;
    void initPainter( ::QPainter*) const SIP_OVERRIDE;
     ::QSize viewportSizeHint() const SIP_OVERRIDE;
    bool viewportEvent( ::QEvent*) SIP_OVERRIDE;
    void scrollContentsBy(int,int) SIP_OVERRIDE;
    void setupViewport( ::QWidget*) SIP_OVERRIDE;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsView(const sipQGraphicsView &);
    sipQGraphicsView &operator = (const sipQGraphicsView &);

    char sipPyMethods[52];
};

sipQGraphicsView::sipQGraphicsView( ::QWidget*a0):  ::QGraphicsView(a0), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsView::sipQGraphicsView( ::QGraphicsScene*a0, ::QWidget*a1):  ::QGraphicsView(a0,a1), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsView::~sipQGraphicsView()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

const QMetaObject *sipQGraphicsView::metaObject() const
{
    if (sipGetInterpreter())
        return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_QtWidgets_qt_metaobject(sipPySelf,sipType_QGraphicsView);

    return  ::QGraphicsView::metaObject();
}

int sipQGraphicsView::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id =  ::QGraphicsView::qt_metacall(_c,_id,_a);

    if (_id >= 0)
    {
        SIP_BLOCK_THREADS
        _id = sip_QtWidgets_qt_metacall(sipPySelf,sipType_QGraphicsView,_c,_id,_a);
        SIP_UNBLOCK_THREADS
    }

    return _id;
}

void *sipQGraphicsView::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_QtWidgets_qt_metacast(sipPySelf, sipType_QGraphicsView, _clname, &sipCpp) ? sipCpp :  ::QGraphicsView::qt_metacast(_clname));
}

void sipQGraphicsView::drawForeground( ::QPainter*a0,const  ::QRectF& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[0], &sipPySelf, SIP_NULLPTR, sipName_drawForeground);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[0], sipPySelf, SIP_NULLPTR, sipName_drawForeground);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::drawForeground(a0,a1);
        return;
    }

    extern void sipVH_QtWidgets_163(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPainter*,const  ::QRectF&);

    sipVH_QtWidgets_163(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsView::drawBackground( ::QPainter*a0,const  ::QRectF& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[1], &sipPySelf, SIP_NULLPTR, sipName_drawBackground);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[1], sipPySelf, SIP_NULLPTR, sipName_drawBackground);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::drawBackground(a0,a1);
        return;
    }

    extern void sipVH_QtWidgets_163(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPainter*,const  ::QRectF&);

    sipVH_QtWidgets_163(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsView::disconnectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[2], &sipPySelf, SIP_NULLPTR, sipName_disconnectNotify);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[2], sipPySelf, SIP_NULLPTR, sipName_disconnectNotify);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::disconnectNotify(a0);
        return;
    }

    extern void sipVH_QtWidgets_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtWidgets_0(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::connectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[3], &sipPySelf, SIP_NULLPTR, sipName_connectNotify);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[3], sipPySelf, SIP_NULLPTR, sipName_connectNotify);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::connectNotify(a0);
        return;
    }

    extern void sipVH_QtWidgets_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtWidgets_0(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::customEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[4], &sipPySelf, SIP_NULLPTR, sipName_customEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[4], sipPySelf, SIP_NULLPTR, sipName_customEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::customEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::childEvent( ::QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[5], &sipPySelf, SIP_NULLPTR, sipName_childEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[5], sipPySelf, SIP_NULLPTR, sipName_childEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::childEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_2(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QChildEvent*);

    sipVH_QtWidgets_2(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::timerEvent( ::QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[6], &sipPySelf, SIP_NULLPTR, sipName_timerEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[6], sipPySelf, SIP_NULLPTR, sipName_timerEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::timerEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTimerEvent*);

    sipVH_QtWidgets_3(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsView::eventFilter( ::QObject*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[7], &sipPySelf, SIP_NULLPTR, sipName_eventFilter);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[7], sipPySelf, SIP_NULLPTR, sipName_eventFilter);
#endif

    if (!sipMeth)
        return  ::QGraphicsView::eventFilter(a0,a1);

    extern bool sipVH_QtWidgets_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QObject*, ::QEvent*);

    return sipVH_QtWidgets_4(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsView::event( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[8], &sipPySelf, SIP_NULLPTR, sipName_event);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[8], sipPySelf, SIP_NULLPTR, sipName_event);
#endif

    if (!sipMeth)
        return  ::QGraphicsView::event(a0);

    extern bool sipVH_QtWidgets_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtWidgets_5(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

int sipQGraphicsView::metric( ::QPaintDevice::PaintDeviceMetric a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[9]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_metric);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[9]), sipPySelf, SIP_NULLPTR, sipName_metric);
#endif

    if (!sipMeth)
        return  ::QGraphicsView::metric(a0);

    extern int sipVH_QtWidgets_6(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPaintDevice::PaintDeviceMetric);

    return sipVH_QtWidgets_6(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QPaintEngine* sipQGraphicsView::paintEngine() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[10]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_paintEngine);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[10]), sipPySelf, SIP_NULLPTR, sipName_paintEngine);
#endif

    if (!sipMeth)
        return  ::QGraphicsView::paintEngine();

    extern  ::QPaintEngine* sipVH_QtWidgets_7(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_7(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

int sipQGraphicsView::devType() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[11]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_devType);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[11]), sipPySelf, SIP_NULLPTR, sipName_devType);
#endif

    if (!sipMeth)
        return  ::QGraphicsView::devType();

    extern int sipVH_QtWidgets_8(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_8(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQGraphicsView::setVisible(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[12], &sipPySelf, SIP_NULLPTR, sipName_setVisible);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[12], sipPySelf, SIP_NULLPTR, sipName_setVisible);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::setVisible(a0);
        return;
    }

    extern void sipVH_QtWidgets_9(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    sipVH_QtWidgets_9(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QSize sipQGraphicsView::sizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[13]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_sizeHint);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[13]), sipPySelf, SIP_NULLPTR, sipName_sizeHint);
#endif

    if (!sipMeth)
        return  ::QGraphicsView::sizeHint();

    extern  ::QSize sipVH_QtWidgets_10(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_10(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

 ::QSize sipQGraphicsView::minimumSizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[14]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_minimumSizeHint);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[14]), sipPySelf, SIP_NULLPTR, sipName_minimumSizeHint);
#endif

    if (!sipMeth)
        return  ::QGraphicsView::minimumSizeHint();

    extern  ::QSize sipVH_QtWidgets_10(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_10(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

int sipQGraphicsView::heightForWidth(int a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[15]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_heightForWidth);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[15]), sipPySelf, SIP_NULLPTR, sipName_heightForWidth);
#endif

    if (!sipMeth)
        return  ::QGraphicsView::heightForWidth(a0);

    extern int sipVH_QtWidgets_11(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    return sipVH_QtWidgets_11(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::mousePressEvent( ::QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[16], &sipPySelf, SIP_NULLPTR, sipName_mousePressEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[16], sipPySelf, SIP_NULLPTR, sipName_mousePressEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*);

    sipVH_QtWidgets_12(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::mouseReleaseEvent( ::QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[17], &sipPySelf, SIP_NULLPTR, sipName_mouseReleaseEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[17], sipPySelf, SIP_NULLPTR, sipName_mouseReleaseEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*);

    sipVH_QtWidgets_12(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::mouseDoubleClickEvent( ::QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[18], &sipPySelf, SIP_NULLPTR, sipName_mouseDoubleClickEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[18], sipPySelf, SIP_NULLPTR, sipName_mouseDoubleClickEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*);

    sipVH_QtWidgets_12(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::mouseMoveEvent( ::QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[19], &sipPySelf, SIP_NULLPTR, sipName_mouseMoveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[19], sipPySelf, SIP_NULLPTR, sipName_mouseMoveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*);

    sipVH_QtWidgets_12(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::wheelEvent( ::QWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[20], &sipPySelf, SIP_NULLPTR, sipName_wheelEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[20], sipPySelf, SIP_NULLPTR, sipName_wheelEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_13(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QWheelEvent*);

    sipVH_QtWidgets_13(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::keyPressEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[21], &sipPySelf, SIP_NULLPTR, sipName_keyPressEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[21], sipPySelf, SIP_NULLPTR, sipName_keyPressEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::keyPressEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtWidgets_14(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::keyReleaseEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[22], &sipPySelf, SIP_NULLPTR, sipName_keyReleaseEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[22], sipPySelf, SIP_NULLPTR, sipName_keyReleaseEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::keyReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtWidgets_14(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::focusInEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[23], &sipPySelf, SIP_NULLPTR, sipName_focusInEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[23], sipPySelf, SIP_NULLPTR, sipName_focusInEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::focusInEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtWidgets_15(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::focusOutEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[24], &sipPySelf, SIP_NULLPTR, sipName_focusOutEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[24], sipPySelf, SIP_NULLPTR, sipName_focusOutEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::focusOutEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtWidgets_15(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::enterEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[25], &sipPySelf, SIP_NULLPTR, sipName_enterEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[25], sipPySelf, SIP_NULLPTR, sipName_enterEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::enterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::leaveEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[26], &sipPySelf, SIP_NULLPTR, sipName_leaveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[26], sipPySelf, SIP_NULLPTR, sipName_leaveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::leaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::paintEvent( ::QPaintEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[27], &sipPySelf, SIP_NULLPTR, sipName_paintEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[27], sipPySelf, SIP_NULLPTR, sipName_paintEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::paintEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_16(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPaintEvent*);

    sipVH_QtWidgets_16(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::moveEvent( ::QMoveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[28], &sipPySelf, SIP_NULLPTR, sipName_moveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[28], sipPySelf, SIP_NULLPTR, sipName_moveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::moveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_17(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMoveEvent*);

    sipVH_QtWidgets_17(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::resizeEvent( ::QResizeEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[29], &sipPySelf, SIP_NULLPTR, sipName_resizeEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[29], sipPySelf, SIP_NULLPTR, sipName_resizeEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::resizeEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_18(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QResizeEvent*);

    sipVH_QtWidgets_18(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::closeEvent( ::QCloseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[30], &sipPySelf, SIP_NULLPTR, sipName_closeEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[30], sipPySelf, SIP_NULLPTR, sipName_closeEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::closeEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_19(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QCloseEvent*);

    sipVH_QtWidgets_19(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::contextMenuEvent( ::QContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[31], &sipPySelf, SIP_NULLPTR, sipName_contextMenuEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[31], sipPySelf, SIP_NULLPTR, sipName_contextMenuEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_20(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QContextMenuEvent*);

    sipVH_QtWidgets_20(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::tabletEvent( ::QTabletEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[32], &sipPySelf, SIP_NULLPTR, sipName_tabletEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[32], sipPySelf, SIP_NULLPTR, sipName_tabletEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::tabletEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_21(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTabletEvent*);

    sipVH_QtWidgets_21(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::actionEvent( ::QActionEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[33], &sipPySelf, SIP_NULLPTR, sipName_actionEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[33], sipPySelf, SIP_NULLPTR, sipName_actionEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::actionEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_22(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QActionEvent*);

    sipVH_QtWidgets_22(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::dragEnterEvent( ::QDragEnterEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[34], &sipPySelf, SIP_NULLPTR, sipName_dragEnterEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[34], sipPySelf, SIP_NULLPTR, sipName_dragEnterEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_23(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QDragEnterEvent*);

    sipVH_QtWidgets_23(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::dragMoveEvent( ::QDragMoveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[35], &sipPySelf, SIP_NULLPTR, sipName_dragMoveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[35], sipPySelf, SIP_NULLPTR, sipName_dragMoveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_24(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QDragMoveEvent*);

    sipVH_QtWidgets_24(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::dragLeaveEvent( ::QDragLeaveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[36], &sipPySelf, SIP_NULLPTR, sipName_dragLeaveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[36], sipPySelf, SIP_NULLPTR, sipName_dragLeaveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_25(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QDragLeaveEvent*);

    sipVH_QtWidgets_25(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::dropEvent( ::QDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[37], &sipPySelf, SIP_NULLPTR, sipName_dropEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[37], sipPySelf, SIP_NULLPTR, sipName_dropEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::dropEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_26(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QDropEvent*);

    sipVH_QtWidgets_26(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::showEvent( ::QShowEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[38], &sipPySelf, SIP_NULLPTR, sipName_showEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[38], sipPySelf, SIP_NULLPTR, sipName_showEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::showEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_27(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QShowEvent*);

    sipVH_QtWidgets_27(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::hideEvent( ::QHideEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[39], &sipPySelf, SIP_NULLPTR, sipName_hideEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[39], sipPySelf, SIP_NULLPTR, sipName_hideEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::hideEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_28(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QHideEvent*);

    sipVH_QtWidgets_28(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::changeEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[40], &sipPySelf, SIP_NULLPTR, sipName_changeEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[40], sipPySelf, SIP_NULLPTR, sipName_changeEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::changeEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::inputMethodEvent( ::QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[41], &sipPySelf, SIP_NULLPTR, sipName_inputMethodEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[41], sipPySelf, SIP_NULLPTR, sipName_inputMethodEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_29(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QInputMethodEvent*);

    sipVH_QtWidgets_29(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QVariant sipQGraphicsView::inputMethodQuery( ::Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[42]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_inputMethodQuery);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[42]), sipPySelf, SIP_NULLPTR, sipName_inputMethodQuery);
#endif

    if (!sipMeth)
        return  ::QGraphicsView::inputMethodQuery(a0);

    extern  ::QVariant sipVH_QtWidgets_30(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::Qt::InputMethodQuery);

    return sipVH_QtWidgets_30(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsView::focusNextPrevChild(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[43], &sipPySelf, SIP_NULLPTR, sipName_focusNextPrevChild);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[43], sipPySelf, SIP_NULLPTR, sipName_focusNextPrevChild);
#endif

    if (!sipMeth)
        return  ::QGraphicsView::focusNextPrevChild(a0);

    extern bool sipVH_QtWidgets_31(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    return sipVH_QtWidgets_31(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsView::hasHeightForWidth() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[44]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_hasHeightForWidth);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[44]), sipPySelf, SIP_NULLPTR, sipName_hasHeightForWidth);
#endif

    if (!sipMeth)
        return  ::QGraphicsView::hasHeightForWidth();

    extern bool sipVH_QtWidgets_32(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_32(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

bool sipQGraphicsView::nativeEvent(const  ::QByteArray& a0,void*a1,long*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[45], &sipPySelf, SIP_NULLPTR, sipName_nativeEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[45], sipPySelf, SIP_NULLPTR, sipName_nativeEvent);
#endif

    if (!sipMeth)
        return  ::QGraphicsView::nativeEvent(a0,a1,a2);

    extern bool sipVH_QtWidgets_33(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QByteArray&,void*,long*);

    return sipVH_QtWidgets_33(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

 ::QPainter* sipQGraphicsView::sharedPainter() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[46]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_sharedPainter);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[46]), sipPySelf, SIP_NULLPTR, sipName_sharedPainter);
#endif

    if (!sipMeth)
        return  ::QGraphicsView::sharedPainter();

    extern  ::QPainter* sipVH_QtWidgets_34(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_34(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQGraphicsView::initPainter( ::QPainter*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[47]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_initPainter);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[47]), sipPySelf, SIP_NULLPTR, sipName_initPainter);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::initPainter(a0);
        return;
    }

    extern void sipVH_QtWidgets_35(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPainter*);

    sipVH_QtWidgets_35(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QSize sipQGraphicsView::viewportSizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[48]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_viewportSizeHint);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[48]), sipPySelf, SIP_NULLPTR, sipName_viewportSizeHint);
#endif

    if (!sipMeth)
        return  ::QGraphicsView::viewportSizeHint();

    extern  ::QSize sipVH_QtWidgets_10(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_10(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

bool sipQGraphicsView::viewportEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[49], &sipPySelf, SIP_NULLPTR, sipName_viewportEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[49], sipPySelf, SIP_NULLPTR, sipName_viewportEvent);
#endif

    if (!sipMeth)
        return  ::QGraphicsView::viewportEvent(a0);

    extern bool sipVH_QtWidgets_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtWidgets_5(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsView::scrollContentsBy(int a0,int a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[50], &sipPySelf, SIP_NULLPTR, sipName_scrollContentsBy);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[50], sipPySelf, SIP_NULLPTR, sipName_scrollContentsBy);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::scrollContentsBy(a0,a1);
        return;
    }

    extern void sipVH_QtWidgets_46(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int,int);

    sipVH_QtWidgets_46(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsView::setupViewport( ::QWidget*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[51], &sipPySelf, SIP_NULLPTR, sipName_setupViewport);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[51], sipPySelf, SIP_NULLPTR, sipName_setupViewport);
#endif

    if (!sipMeth)
    {
         ::QGraphicsView::setupViewport(a0);
        return;
    }

    extern void sipVH_QtWidgets_47(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QWidget*);

    sipVH_QtWidgets_47(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QGraphicsView_sizeHint, "sizeHint(self) -> QSize");

extern "C" {static PyObject *meth_QGraphicsView_sizeHint(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_sizeHint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
             ::QSize*sipRes;

            sipRes = new  ::QSize((sipSelfWasArg ? sipCpp-> ::QGraphicsView::sizeHint() : sipCpp->sizeHint()));

            return sipConvertFromNewType(sipRes,sipType_QSize,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_sizeHint, doc_QGraphicsView_sizeHint);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_renderHints, "renderHints(self) -> QPainter.RenderHints");

extern "C" {static PyObject *meth_QGraphicsView_renderHints(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_renderHints(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
             ::QPainter::RenderHints*sipRes;

            sipRes = new  ::QPainter::RenderHints(sipCpp->renderHints());

            return sipConvertFromNewType(sipRes,sipType_QPainter_RenderHints,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_renderHints, doc_QGraphicsView_renderHints);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_setRenderHint, "setRenderHint(self, QPainter.RenderHint, on: bool = True)");

extern "C" {static PyObject *meth_QGraphicsView_setRenderHint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_setRenderHint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QPainter::RenderHint a0;
        bool a1 = 1;
         ::QGraphicsView *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_on,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BE|b", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QPainter_RenderHint, &a0, &a1))
        {
            sipCpp->setRenderHint(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_setRenderHint, doc_QGraphicsView_setRenderHint);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_setRenderHints, "setRenderHints(self, Union[QPainter.RenderHints, QPainter.RenderHint])");

extern "C" {static PyObject *meth_QGraphicsView_setRenderHints(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_setRenderHints(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QPainter::RenderHints* a0;
        int a0State = 0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QPainter_RenderHints, &a0, &a0State))
        {
            sipCpp->setRenderHints(*a0);
            sipReleaseType(a0,sipType_QPainter_RenderHints,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_setRenderHints, doc_QGraphicsView_setRenderHints);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_alignment, "alignment(self) -> Qt.Alignment");

extern "C" {static PyObject *meth_QGraphicsView_alignment(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_alignment(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
             ::Qt::Alignment*sipRes;

            sipRes = new  ::Qt::Alignment(sipCpp->alignment());

            return sipConvertFromNewType(sipRes,sipType_Qt_Alignment,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_alignment, doc_QGraphicsView_alignment);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_setAlignment, "setAlignment(self, Union[Qt.Alignment, Qt.AlignmentFlag])");

extern "C" {static PyObject *meth_QGraphicsView_setAlignment(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_setAlignment(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::Qt::Alignment* a0;
        int a0State = 0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_Qt_Alignment, &a0, &a0State))
        {
            sipCpp->setAlignment(*a0);
            sipReleaseType(a0,sipType_Qt_Alignment,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_setAlignment, doc_QGraphicsView_setAlignment);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_transformationAnchor, "transformationAnchor(self) -> QGraphicsView.ViewportAnchor");

extern "C" {static PyObject *meth_QGraphicsView_transformationAnchor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_transformationAnchor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
             ::QGraphicsView::ViewportAnchor sipRes;

            sipRes = sipCpp->transformationAnchor();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QGraphicsView_ViewportAnchor);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_transformationAnchor, doc_QGraphicsView_transformationAnchor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_setTransformationAnchor, "setTransformationAnchor(self, QGraphicsView.ViewportAnchor)");

extern "C" {static PyObject *meth_QGraphicsView_setTransformationAnchor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_setTransformationAnchor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsView::ViewportAnchor a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QGraphicsView_ViewportAnchor, &a0))
        {
            sipCpp->setTransformationAnchor(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_setTransformationAnchor, doc_QGraphicsView_setTransformationAnchor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_resizeAnchor, "resizeAnchor(self) -> QGraphicsView.ViewportAnchor");

extern "C" {static PyObject *meth_QGraphicsView_resizeAnchor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_resizeAnchor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
             ::QGraphicsView::ViewportAnchor sipRes;

            sipRes = sipCpp->resizeAnchor();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QGraphicsView_ViewportAnchor);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_resizeAnchor, doc_QGraphicsView_resizeAnchor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_setResizeAnchor, "setResizeAnchor(self, QGraphicsView.ViewportAnchor)");

extern "C" {static PyObject *meth_QGraphicsView_setResizeAnchor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_setResizeAnchor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsView::ViewportAnchor a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QGraphicsView_ViewportAnchor, &a0))
        {
            sipCpp->setResizeAnchor(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_setResizeAnchor, doc_QGraphicsView_setResizeAnchor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_dragMode, "dragMode(self) -> QGraphicsView.DragMode");

extern "C" {static PyObject *meth_QGraphicsView_dragMode(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_dragMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
             ::QGraphicsView::DragMode sipRes;

            sipRes = sipCpp->dragMode();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QGraphicsView_DragMode);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_dragMode, doc_QGraphicsView_dragMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_setDragMode, "setDragMode(self, QGraphicsView.DragMode)");

extern "C" {static PyObject *meth_QGraphicsView_setDragMode(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_setDragMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsView::DragMode a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QGraphicsView_DragMode, &a0))
        {
            sipCpp->setDragMode(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_setDragMode, doc_QGraphicsView_setDragMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_cacheMode, "cacheMode(self) -> QGraphicsView.CacheMode");

extern "C" {static PyObject *meth_QGraphicsView_cacheMode(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_cacheMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
             ::QGraphicsView::CacheMode*sipRes;

            sipRes = new  ::QGraphicsView::CacheMode(sipCpp->cacheMode());

            return sipConvertFromNewType(sipRes,sipType_QGraphicsView_CacheMode,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_cacheMode, doc_QGraphicsView_cacheMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_setCacheMode, "setCacheMode(self, Union[QGraphicsView.CacheMode, QGraphicsView.CacheModeFlag])");

extern "C" {static PyObject *meth_QGraphicsView_setCacheMode(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_setCacheMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsView::CacheMode* a0;
        int a0State = 0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QGraphicsView_CacheMode, &a0, &a0State))
        {
            sipCpp->setCacheMode(*a0);
            sipReleaseType(a0,sipType_QGraphicsView_CacheMode,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_setCacheMode, doc_QGraphicsView_setCacheMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_resetCachedContent, "resetCachedContent(self)");

extern "C" {static PyObject *meth_QGraphicsView_resetCachedContent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_resetCachedContent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
            sipCpp->resetCachedContent();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_resetCachedContent, doc_QGraphicsView_resetCachedContent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_isInteractive, "isInteractive(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsView_isInteractive(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_isInteractive(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isInteractive();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_isInteractive, doc_QGraphicsView_isInteractive);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_setInteractive, "setInteractive(self, bool)");

extern "C" {static PyObject *meth_QGraphicsView_setInteractive(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_setInteractive(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsView, &sipCpp, &a0))
        {
            sipCpp->setInteractive(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_setInteractive, doc_QGraphicsView_setInteractive);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_scene, "scene(self) -> QGraphicsScene");

extern "C" {static PyObject *meth_QGraphicsView_scene(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_scene(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
             ::QGraphicsScene*sipRes;

            sipRes = sipCpp->scene();

            return sipConvertFromType(sipRes,sipType_QGraphicsScene,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_scene, doc_QGraphicsView_scene);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_setScene, "setScene(self, QGraphicsScene)");

extern "C" {static PyObject *meth_QGraphicsView_setScene(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_setScene(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsScene* a0;
        PyObject *a0Keep;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QGraphicsView, &sipCpp, &a0Keep, sipType_QGraphicsScene, &a0))
        {
            sipCpp->setScene(a0);

            sipKeepReference(sipSelf, -27, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_setScene, doc_QGraphicsView_setScene);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_sceneRect, "sceneRect(self) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsView_sceneRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_sceneRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->sceneRect());

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_sceneRect, doc_QGraphicsView_sceneRect);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_setSceneRect, "setSceneRect(self, QRectF)\n"
"setSceneRect(self, float, float, float, float)");

extern "C" {static PyObject *meth_QGraphicsView_setSceneRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_setSceneRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QRectF* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QRectF, &a0))
        {
            sipCpp->setSceneRect(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsView, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->setSceneRect(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_setSceneRect, doc_QGraphicsView_setSceneRect);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_rotate, "rotate(self, float)");

extern "C" {static PyObject *meth_QGraphicsView_rotate(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_rotate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsView, &sipCpp, &a0))
        {
            sipCpp->rotate(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_rotate, doc_QGraphicsView_rotate);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_scale, "scale(self, float, float)");

extern "C" {static PyObject *meth_QGraphicsView_scale(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_scale(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::qreal a1;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsView, &sipCpp, &a0, &a1))
        {
            sipCpp->scale(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_scale, doc_QGraphicsView_scale);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_shear, "shear(self, float, float)");

extern "C" {static PyObject *meth_QGraphicsView_shear(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_shear(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::qreal a1;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsView, &sipCpp, &a0, &a1))
        {
            sipCpp->shear(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_shear, doc_QGraphicsView_shear);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_translate, "translate(self, float, float)");

extern "C" {static PyObject *meth_QGraphicsView_translate(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_translate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::qreal a1;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsView, &sipCpp, &a0, &a1))
        {
            sipCpp->translate(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_translate, doc_QGraphicsView_translate);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_centerOn, "centerOn(self, Union[QPointF, QPoint])\n"
"centerOn(self, QGraphicsItem)\n"
"centerOn(self, float, float)");

extern "C" {static PyObject *meth_QGraphicsView_centerOn(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_centerOn(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QPointF* a0;
        int a0State = 0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
            sipCpp->centerOn(*a0);
            sipReleaseType(const_cast< ::QPointF *>(a0),sipType_QPointF,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const  ::QGraphicsItem* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            sipCpp->centerOn(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsView, &sipCpp, &a0, &a1))
        {
            sipCpp->centerOn(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_centerOn, doc_QGraphicsView_centerOn);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_ensureVisible, "ensureVisible(self, QRectF, xMargin: int = 50, yMargin: int = 50)\n"
"ensureVisible(self, QGraphicsItem, xMargin: int = 50, yMargin: int = 50)\n"
"ensureVisible(self, float, float, float, float, xMargin: int = 50, yMargin: int = 50)");

extern "C" {static PyObject *meth_QGraphicsView_ensureVisible(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_ensureVisible(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QRectF* a0;
        int a1 = 50;
        int a2 = 50;
         ::QGraphicsView *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_xMargin,
            sipName_yMargin,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9|ii", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QRectF, &a0, &a1, &a2))
        {
            sipCpp->ensureVisible(*a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const  ::QGraphicsItem* a0;
        int a1 = 50;
        int a2 = 50;
         ::QGraphicsView *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_xMargin,
            sipName_yMargin,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ8|ii", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QGraphicsItem, &a0, &a1, &a2))
        {
            sipCpp->ensureVisible(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
        int a4 = 50;
        int a5 = 50;
         ::QGraphicsView *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_xMargin,
            sipName_yMargin,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bdddd|ii", &sipSelf, sipType_QGraphicsView, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipCpp->ensureVisible(a0,a1,a2,a3,a4,a5);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_ensureVisible, doc_QGraphicsView_ensureVisible);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_fitInView, "fitInView(self, QRectF, mode: Qt.AspectRatioMode = Qt.IgnoreAspectRatio)\n"
"fitInView(self, QGraphicsItem, mode: Qt.AspectRatioMode = Qt.IgnoreAspectRatio)\n"
"fitInView(self, float, float, float, float, mode: Qt.AspectRatioMode = Qt.IgnoreAspectRatio)");

extern "C" {static PyObject *meth_QGraphicsView_fitInView(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_fitInView(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QRectF* a0;
         ::Qt::AspectRatioMode a1 = Qt::IgnoreAspectRatio;
         ::QGraphicsView *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9|E", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QRectF, &a0, sipType_Qt_AspectRatioMode, &a1))
        {
            sipCpp->fitInView(*a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const  ::QGraphicsItem* a0;
         ::Qt::AspectRatioMode a1 = Qt::IgnoreAspectRatio;
         ::QGraphicsView *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ8|E", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QGraphicsItem, &a0, sipType_Qt_AspectRatioMode, &a1))
        {
            sipCpp->fitInView(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
         ::Qt::AspectRatioMode a4 = Qt::IgnoreAspectRatio;
         ::QGraphicsView *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bdddd|E", &sipSelf, sipType_QGraphicsView, &sipCpp, &a0, &a1, &a2, &a3, sipType_Qt_AspectRatioMode, &a4))
        {
            sipCpp->fitInView(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_fitInView, doc_QGraphicsView_fitInView);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_render, "render(self, QPainter, target: QRectF = QRectF(), source: QRect = QRect(), mode: Qt.AspectRatioMode = Qt.KeepAspectRatio)");

extern "C" {static PyObject *meth_QGraphicsView_render(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_render(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QPainter* a0;
        const  ::QRectF& a1def = QRectF();
        const  ::QRectF* a1 = &a1def;
        const  ::QRect& a2def = QRect();
        const  ::QRect* a2 = &a2def;
         ::Qt::AspectRatioMode a3 = Qt::KeepAspectRatio;
         ::QGraphicsView *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_target,
            sipName_source,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ8|J9J9E", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QPainter, &a0, sipType_QRectF, &a1, sipType_QRect, &a2, sipType_Qt_AspectRatioMode, &a3))
        {
            sipCpp->render(a0,*a1,*a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_render, doc_QGraphicsView_render);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_items, "items(self) -> List[QGraphicsItem]\n"
"items(self, QPoint) -> List[QGraphicsItem]\n"
"items(self, int, int) -> List[QGraphicsItem]\n"
"items(self, int, int, int, int, mode: Qt.ItemSelectionMode = Qt.IntersectsItemShape) -> List[QGraphicsItem]\n"
"items(self, QRect, mode: Qt.ItemSelectionMode = Qt.IntersectsItemShape) -> List[QGraphicsItem]\n"
"items(self, QPolygon, mode: Qt.ItemSelectionMode = Qt.IntersectsItemShape) -> List[QGraphicsItem]\n"
"items(self, QPainterPath, mode: Qt.ItemSelectionMode = Qt.IntersectsItemShape) -> List[QGraphicsItem]");

extern "C" {static PyObject *meth_QGraphicsView_items(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_items(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsView *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
            QList< ::QGraphicsItem*>*sipRes;

            sipRes = new QList< ::QGraphicsItem*>(sipCpp->items());

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,SIP_NULLPTR);
        }
    }

    {
        const  ::QPoint* a0;
        const  ::QGraphicsView *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, "BJ9", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QPoint, &a0))
        {
            QList< ::QGraphicsItem*>*sipRes;

            sipRes = new QList< ::QGraphicsItem*>(sipCpp->items(*a0));

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,SIP_NULLPTR);
        }
    }

    {
        int a0;
        int a1;
        const  ::QGraphicsView *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, "Bii", &sipSelf, sipType_QGraphicsView, &sipCpp, &a0, &a1))
        {
            QList< ::QGraphicsItem*>*sipRes;

            sipRes = new QList< ::QGraphicsItem*>(sipCpp->items(a0,a1));

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,SIP_NULLPTR);
        }
    }

    {
        int a0;
        int a1;
        int a2;
        int a3;
         ::Qt::ItemSelectionMode a4 = Qt::IntersectsItemShape;
        const  ::QGraphicsView *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Biiii|E", &sipSelf, sipType_QGraphicsView, &sipCpp, &a0, &a1, &a2, &a3, sipType_Qt_ItemSelectionMode, &a4))
        {
            QList< ::QGraphicsItem*>*sipRes;

            sipRes = new QList< ::QGraphicsItem*>(sipCpp->items(a0,a1,a2,a3,a4));

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,SIP_NULLPTR);
        }
    }

    {
        const  ::QRect* a0;
         ::Qt::ItemSelectionMode a1 = Qt::IntersectsItemShape;
        const  ::QGraphicsView *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9|E", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QRect, &a0, sipType_Qt_ItemSelectionMode, &a1))
        {
            QList< ::QGraphicsItem*>*sipRes;

            sipRes = new QList< ::QGraphicsItem*>(sipCpp->items(*a0,a1));

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,SIP_NULLPTR);
        }
    }

    {
        const  ::QPolygon* a0;
         ::Qt::ItemSelectionMode a1 = Qt::IntersectsItemShape;
        const  ::QGraphicsView *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9|E", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QPolygon, &a0, sipType_Qt_ItemSelectionMode, &a1))
        {
            QList< ::QGraphicsItem*>*sipRes;

            sipRes = new QList< ::QGraphicsItem*>(sipCpp->items(*a0,a1));

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,SIP_NULLPTR);
        }
    }

    {
        const  ::QPainterPath* a0;
         ::Qt::ItemSelectionMode a1 = Qt::IntersectsItemShape;
        const  ::QGraphicsView *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9|E", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QPainterPath, &a0, sipType_Qt_ItemSelectionMode, &a1))
        {
            QList< ::QGraphicsItem*>*sipRes;

            sipRes = new QList< ::QGraphicsItem*>(sipCpp->items(*a0,a1));

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_items, doc_QGraphicsView_items);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_itemAt, "itemAt(self, QPoint) -> QGraphicsItem\n"
"itemAt(self, int, int) -> QGraphicsItem");

extern "C" {static PyObject *meth_QGraphicsView_itemAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_itemAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QPoint* a0;
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QPoint, &a0))
        {
             ::QGraphicsItem*sipRes;

            sipRes = sipCpp->itemAt(*a0);

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,SIP_NULLPTR);
        }
    }

    {
        int a0;
        int a1;
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QGraphicsView, &sipCpp, &a0, &a1))
        {
             ::QGraphicsItem*sipRes;

            sipRes = sipCpp->itemAt(a0,a1);

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_itemAt, doc_QGraphicsView_itemAt);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_mapToScene, "mapToScene(self, QPoint) -> QPointF\n"
"mapToScene(self, QRect) -> QPolygonF\n"
"mapToScene(self, QPolygon) -> QPolygonF\n"
"mapToScene(self, QPainterPath) -> QPainterPath\n"
"mapToScene(self, int, int) -> QPointF\n"
"mapToScene(self, int, int, int, int) -> QPolygonF");

extern "C" {static PyObject *meth_QGraphicsView_mapToScene(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_mapToScene(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QPoint* a0;
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QPoint, &a0))
        {
             ::QPointF*sipRes;

            sipRes = new  ::QPointF(sipCpp->mapToScene(*a0));

            return sipConvertFromNewType(sipRes,sipType_QPointF,SIP_NULLPTR);
        }
    }

    {
        const  ::QRect* a0;
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QRect, &a0))
        {
             ::QPolygonF*sipRes;

            sipRes = new  ::QPolygonF(sipCpp->mapToScene(*a0));

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,SIP_NULLPTR);
        }
    }

    {
        const  ::QPolygon* a0;
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QPolygon, &a0))
        {
             ::QPolygonF*sipRes;

            sipRes = new  ::QPolygonF(sipCpp->mapToScene(*a0));

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,SIP_NULLPTR);
        }
    }

    {
        const  ::QPainterPath* a0;
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QPainterPath, &a0))
        {
             ::QPainterPath*sipRes;

            sipRes = new  ::QPainterPath(sipCpp->mapToScene(*a0));

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,SIP_NULLPTR);
        }
    }

    {
        int a0;
        int a1;
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QGraphicsView, &sipCpp, &a0, &a1))
        {
             ::QPointF*sipRes;

            sipRes = new  ::QPointF(sipCpp->mapToScene(a0,a1));

            return sipConvertFromNewType(sipRes,sipType_QPointF,SIP_NULLPTR);
        }
    }

    {
        int a0;
        int a1;
        int a2;
        int a3;
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiii", &sipSelf, sipType_QGraphicsView, &sipCpp, &a0, &a1, &a2, &a3))
        {
             ::QPolygonF*sipRes;

            sipRes = new  ::QPolygonF(sipCpp->mapToScene(a0,a1,a2,a3));

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_mapToScene, doc_QGraphicsView_mapToScene);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_mapFromScene, "mapFromScene(self, Union[QPointF, QPoint]) -> QPoint\n"
"mapFromScene(self, QRectF) -> QPolygon\n"
"mapFromScene(self, QPolygonF) -> QPolygon\n"
"mapFromScene(self, QPainterPath) -> QPainterPath\n"
"mapFromScene(self, float, float) -> QPoint\n"
"mapFromScene(self, float, float, float, float) -> QPolygon");

extern "C" {static PyObject *meth_QGraphicsView_mapFromScene(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_mapFromScene(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QPointF* a0;
        int a0State = 0;
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
             ::QPoint*sipRes;

            sipRes = new  ::QPoint(sipCpp->mapFromScene(*a0));
            sipReleaseType(const_cast< ::QPointF *>(a0),sipType_QPointF,a0State);

            return sipConvertFromNewType(sipRes,sipType_QPoint,SIP_NULLPTR);
        }
    }

    {
        const  ::QRectF* a0;
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QRectF, &a0))
        {
             ::QPolygon*sipRes;

            sipRes = new  ::QPolygon(sipCpp->mapFromScene(*a0));

            return sipConvertFromNewType(sipRes,sipType_QPolygon,SIP_NULLPTR);
        }
    }

    {
        const  ::QPolygonF* a0;
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QPolygonF, &a0))
        {
             ::QPolygon*sipRes;

            sipRes = new  ::QPolygon(sipCpp->mapFromScene(*a0));

            return sipConvertFromNewType(sipRes,sipType_QPolygon,SIP_NULLPTR);
        }
    }

    {
        const  ::QPainterPath* a0;
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QPainterPath, &a0))
        {
             ::QPainterPath*sipRes;

            sipRes = new  ::QPainterPath(sipCpp->mapFromScene(*a0));

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,SIP_NULLPTR);
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsView, &sipCpp, &a0, &a1))
        {
             ::QPoint*sipRes;

            sipRes = new  ::QPoint(sipCpp->mapFromScene(a0,a1));

            return sipConvertFromNewType(sipRes,sipType_QPoint,SIP_NULLPTR);
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsView, &sipCpp, &a0, &a1, &a2, &a3))
        {
             ::QPolygon*sipRes;

            sipRes = new  ::QPolygon(sipCpp->mapFromScene(a0,a1,a2,a3));

            return sipConvertFromNewType(sipRes,sipType_QPolygon,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_mapFromScene, doc_QGraphicsView_mapFromScene);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_inputMethodQuery, "inputMethodQuery(self, Qt.InputMethodQuery) -> Any");

extern "C" {static PyObject *meth_QGraphicsView_inputMethodQuery(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_inputMethodQuery(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::Qt::InputMethodQuery a0;
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_Qt_InputMethodQuery, &a0))
        {
             ::QVariant*sipRes;

            sipRes = new  ::QVariant((sipSelfWasArg ? sipCpp-> ::QGraphicsView::inputMethodQuery(a0) : sipCpp->inputMethodQuery(a0)));

            return sipConvertFromNewType(sipRes,sipType_QVariant,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_inputMethodQuery, doc_QGraphicsView_inputMethodQuery);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_backgroundBrush, "backgroundBrush(self) -> QBrush");

extern "C" {static PyObject *meth_QGraphicsView_backgroundBrush(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_backgroundBrush(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
             ::QBrush*sipRes;

            sipRes = new  ::QBrush(sipCpp->backgroundBrush());

            return sipConvertFromNewType(sipRes,sipType_QBrush,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_backgroundBrush, doc_QGraphicsView_backgroundBrush);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_setBackgroundBrush, "setBackgroundBrush(self, Union[QBrush, QColor, Qt.GlobalColor, QGradient])");

extern "C" {static PyObject *meth_QGraphicsView_setBackgroundBrush(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_setBackgroundBrush(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QBrush* a0;
        int a0State = 0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QBrush, &a0, &a0State))
        {
            sipCpp->setBackgroundBrush(*a0);
            sipReleaseType(const_cast< ::QBrush *>(a0),sipType_QBrush,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_setBackgroundBrush, doc_QGraphicsView_setBackgroundBrush);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_foregroundBrush, "foregroundBrush(self) -> QBrush");

extern "C" {static PyObject *meth_QGraphicsView_foregroundBrush(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_foregroundBrush(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
             ::QBrush*sipRes;

            sipRes = new  ::QBrush(sipCpp->foregroundBrush());

            return sipConvertFromNewType(sipRes,sipType_QBrush,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_foregroundBrush, doc_QGraphicsView_foregroundBrush);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_setForegroundBrush, "setForegroundBrush(self, Union[QBrush, QColor, Qt.GlobalColor, QGradient])");

extern "C" {static PyObject *meth_QGraphicsView_setForegroundBrush(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_setForegroundBrush(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QBrush* a0;
        int a0State = 0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QBrush, &a0, &a0State))
        {
            sipCpp->setForegroundBrush(*a0);
            sipReleaseType(const_cast< ::QBrush *>(a0),sipType_QBrush,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_setForegroundBrush, doc_QGraphicsView_setForegroundBrush);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_invalidateScene, "invalidateScene(self, rect: QRectF = QRectF(), layers: Union[QGraphicsScene.SceneLayers, QGraphicsScene.SceneLayer] = QGraphicsScene.AllLayers)");

extern "C" {static PyObject *meth_QGraphicsView_invalidateScene(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_invalidateScene(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QRectF& a0def = QRectF();
        const  ::QRectF* a0 = &a0def;
         ::QGraphicsScene::SceneLayers a1def = QGraphicsScene::AllLayers;
         ::QGraphicsScene::SceneLayers* a1 = &a1def;
        int a1State = 0;
         ::QGraphicsView *sipCpp;

        static const char *sipKwdList[] = {
            sipName_rect,
            sipName_layers,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|J9J1", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QRectF, &a0, sipType_QGraphicsScene_SceneLayers, &a1, &a1State))
        {
            sipCpp->invalidateScene(*a0,*a1);
            sipReleaseType(a1,sipType_QGraphicsScene_SceneLayers,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_invalidateScene, doc_QGraphicsView_invalidateScene);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_updateScene, "updateScene(self, Iterable[QRectF])");

extern "C" {static PyObject *meth_QGraphicsView_updateScene(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_updateScene(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const QList< ::QRectF>* a0;
        int a0State = 0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QList_0100QRectF,&a0, &a0State))
        {
            sipCpp->updateScene(*a0);
            sipReleaseType(const_cast<QList< ::QRectF> *>(a0),sipType_QList_0100QRectF,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_updateScene, doc_QGraphicsView_updateScene);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_updateSceneRect, "updateSceneRect(self, QRectF)");

extern "C" {static PyObject *meth_QGraphicsView_updateSceneRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_updateSceneRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QRectF* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QRectF, &a0))
        {
            sipCpp->updateSceneRect(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_updateSceneRect, doc_QGraphicsView_updateSceneRect);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_setupViewport, "setupViewport(self, QWidget)");

extern "C" {static PyObject *meth_QGraphicsView_setupViewport(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_setupViewport(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QWidget* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QWidget, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::setupViewport(a0) : sipCpp->setupViewport(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_setupViewport, doc_QGraphicsView_setupViewport);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_event, "event(self, QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsView_event(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_event(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsView::event(a0) : sipCpp->event(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_event, doc_QGraphicsView_event);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_viewportEvent, "viewportEvent(self, QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsView_viewportEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_viewportEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsView::viewportEvent(a0) : sipCpp->viewportEvent(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_viewportEvent, doc_QGraphicsView_viewportEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_contextMenuEvent, "contextMenuEvent(self, QContextMenuEvent)");

extern "C" {static PyObject *meth_QGraphicsView_contextMenuEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_contextMenuEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QContextMenuEvent* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QContextMenuEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::contextMenuEvent(a0) : sipCpp->contextMenuEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_contextMenuEvent, doc_QGraphicsView_contextMenuEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_dragEnterEvent, "dragEnterEvent(self, QDragEnterEvent)");

extern "C" {static PyObject *meth_QGraphicsView_dragEnterEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_dragEnterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QDragEnterEvent* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QDragEnterEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::dragEnterEvent(a0) : sipCpp->dragEnterEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_dragEnterEvent, doc_QGraphicsView_dragEnterEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_dragLeaveEvent, "dragLeaveEvent(self, QDragLeaveEvent)");

extern "C" {static PyObject *meth_QGraphicsView_dragLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_dragLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QDragLeaveEvent* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QDragLeaveEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::dragLeaveEvent(a0) : sipCpp->dragLeaveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_dragLeaveEvent, doc_QGraphicsView_dragLeaveEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_dragMoveEvent, "dragMoveEvent(self, QDragMoveEvent)");

extern "C" {static PyObject *meth_QGraphicsView_dragMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_dragMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QDragMoveEvent* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QDragMoveEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::dragMoveEvent(a0) : sipCpp->dragMoveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_dragMoveEvent, doc_QGraphicsView_dragMoveEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_dropEvent, "dropEvent(self, QDropEvent)");

extern "C" {static PyObject *meth_QGraphicsView_dropEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_dropEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QDropEvent* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QDropEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::dropEvent(a0) : sipCpp->dropEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_dropEvent, doc_QGraphicsView_dropEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_focusInEvent, "focusInEvent(self, QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsView_focusInEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_focusInEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QFocusEvent* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QFocusEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::focusInEvent(a0) : sipCpp->focusInEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_focusInEvent, doc_QGraphicsView_focusInEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_focusOutEvent, "focusOutEvent(self, QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsView_focusOutEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_focusOutEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QFocusEvent* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QFocusEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::focusOutEvent(a0) : sipCpp->focusOutEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_focusOutEvent, doc_QGraphicsView_focusOutEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_focusNextPrevChild, "focusNextPrevChild(self, bool) -> bool");

extern "C" {static PyObject *meth_QGraphicsView_focusNextPrevChild(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_focusNextPrevChild(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        bool a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pb", &sipSelf, sipType_QGraphicsView, &sipCpp, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsView::focusNextPrevChild(a0) : sipCpp->focusNextPrevChild(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_focusNextPrevChild, doc_QGraphicsView_focusNextPrevChild);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_keyPressEvent, "keyPressEvent(self, QKeyEvent)");

extern "C" {static PyObject *meth_QGraphicsView_keyPressEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_keyPressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QKeyEvent* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QKeyEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::keyPressEvent(a0) : sipCpp->keyPressEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_keyPressEvent, doc_QGraphicsView_keyPressEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_keyReleaseEvent, "keyReleaseEvent(self, QKeyEvent)");

extern "C" {static PyObject *meth_QGraphicsView_keyReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_keyReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QKeyEvent* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QKeyEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::keyReleaseEvent(a0) : sipCpp->keyReleaseEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_keyReleaseEvent, doc_QGraphicsView_keyReleaseEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_mouseDoubleClickEvent, "mouseDoubleClickEvent(self, QMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsView_mouseDoubleClickEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_mouseDoubleClickEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::mouseDoubleClickEvent(a0) : sipCpp->mouseDoubleClickEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_mouseDoubleClickEvent, doc_QGraphicsView_mouseDoubleClickEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_mousePressEvent, "mousePressEvent(self, QMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsView_mousePressEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::mousePressEvent(a0) : sipCpp->mousePressEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_mousePressEvent, doc_QGraphicsView_mousePressEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_mouseMoveEvent, "mouseMoveEvent(self, QMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsView_mouseMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::mouseMoveEvent(a0) : sipCpp->mouseMoveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_mouseMoveEvent, doc_QGraphicsView_mouseMoveEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_mouseReleaseEvent, "mouseReleaseEvent(self, QMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsView_mouseReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::mouseReleaseEvent(a0) : sipCpp->mouseReleaseEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_mouseReleaseEvent, doc_QGraphicsView_mouseReleaseEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_wheelEvent, "wheelEvent(self, QWheelEvent)");

extern "C" {static PyObject *meth_QGraphicsView_wheelEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_wheelEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QWheelEvent* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QWheelEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::wheelEvent(a0) : sipCpp->wheelEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_wheelEvent, doc_QGraphicsView_wheelEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_paintEvent, "paintEvent(self, QPaintEvent)");

extern "C" {static PyObject *meth_QGraphicsView_paintEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_paintEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QPaintEvent* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QPaintEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::paintEvent(a0) : sipCpp->paintEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_paintEvent, doc_QGraphicsView_paintEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_resizeEvent, "resizeEvent(self, QResizeEvent)");

extern "C" {static PyObject *meth_QGraphicsView_resizeEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_resizeEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QResizeEvent* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QResizeEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::resizeEvent(a0) : sipCpp->resizeEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_resizeEvent, doc_QGraphicsView_resizeEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_scrollContentsBy, "scrollContentsBy(self, int, int)");

extern "C" {static PyObject *meth_QGraphicsView_scrollContentsBy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_scrollContentsBy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int a0;
        int a1;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pii", &sipSelf, sipType_QGraphicsView, &sipCpp, &a0, &a1))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::scrollContentsBy(a0,a1) : sipCpp->scrollContentsBy(a0,a1));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_scrollContentsBy, doc_QGraphicsView_scrollContentsBy);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_showEvent, "showEvent(self, QShowEvent)");

extern "C" {static PyObject *meth_QGraphicsView_showEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_showEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QShowEvent* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QShowEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::showEvent(a0) : sipCpp->showEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_showEvent, doc_QGraphicsView_showEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_inputMethodEvent, "inputMethodEvent(self, QInputMethodEvent)");

extern "C" {static PyObject *meth_QGraphicsView_inputMethodEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_inputMethodEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QInputMethodEvent* a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QInputMethodEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::inputMethodEvent(a0) : sipCpp->inputMethodEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_inputMethodEvent, doc_QGraphicsView_inputMethodEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_drawBackground, "drawBackground(self, QPainter, QRectF)");

extern "C" {static PyObject *meth_QGraphicsView_drawBackground(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_drawBackground(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QPainter* a0;
        const  ::QRectF* a1;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8J9", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QPainter, &a0, sipType_QRectF, &a1))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::drawBackground(a0,*a1) : sipCpp->drawBackground(a0,*a1));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_drawBackground, doc_QGraphicsView_drawBackground);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_drawForeground, "drawForeground(self, QPainter, QRectF)");

extern "C" {static PyObject *meth_QGraphicsView_drawForeground(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_drawForeground(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QPainter* a0;
        const  ::QRectF* a1;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8J9", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QPainter, &a0, sipType_QRectF, &a1))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsView::drawForeground(a0,*a1) : sipCpp->drawForeground(a0,*a1));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_drawForeground, doc_QGraphicsView_drawForeground);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_viewportUpdateMode, "viewportUpdateMode(self) -> QGraphicsView.ViewportUpdateMode");

extern "C" {static PyObject *meth_QGraphicsView_viewportUpdateMode(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_viewportUpdateMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
             ::QGraphicsView::ViewportUpdateMode sipRes;

            sipRes = sipCpp->viewportUpdateMode();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QGraphicsView_ViewportUpdateMode);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_viewportUpdateMode, doc_QGraphicsView_viewportUpdateMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_setViewportUpdateMode, "setViewportUpdateMode(self, QGraphicsView.ViewportUpdateMode)");

extern "C" {static PyObject *meth_QGraphicsView_setViewportUpdateMode(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_setViewportUpdateMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsView::ViewportUpdateMode a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QGraphicsView_ViewportUpdateMode, &a0))
        {
            sipCpp->setViewportUpdateMode(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_setViewportUpdateMode, doc_QGraphicsView_setViewportUpdateMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_optimizationFlags, "optimizationFlags(self) -> QGraphicsView.OptimizationFlags");

extern "C" {static PyObject *meth_QGraphicsView_optimizationFlags(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_optimizationFlags(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
             ::QGraphicsView::OptimizationFlags*sipRes;

            sipRes = new  ::QGraphicsView::OptimizationFlags(sipCpp->optimizationFlags());

            return sipConvertFromNewType(sipRes,sipType_QGraphicsView_OptimizationFlags,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_optimizationFlags, doc_QGraphicsView_optimizationFlags);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_setOptimizationFlag, "setOptimizationFlag(self, QGraphicsView.OptimizationFlag, enabled: bool = True)");

extern "C" {static PyObject *meth_QGraphicsView_setOptimizationFlag(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_setOptimizationFlag(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsView::OptimizationFlag a0;
        bool a1 = 1;
         ::QGraphicsView *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_enabled,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BE|b", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QGraphicsView_OptimizationFlag, &a0, &a1))
        {
            sipCpp->setOptimizationFlag(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_setOptimizationFlag, doc_QGraphicsView_setOptimizationFlag);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_setOptimizationFlags, "setOptimizationFlags(self, Union[QGraphicsView.OptimizationFlags, QGraphicsView.OptimizationFlag])");

extern "C" {static PyObject *meth_QGraphicsView_setOptimizationFlags(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_setOptimizationFlags(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsView::OptimizationFlags* a0;
        int a0State = 0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QGraphicsView_OptimizationFlags, &a0, &a0State))
        {
            sipCpp->setOptimizationFlags(*a0);
            sipReleaseType(a0,sipType_QGraphicsView_OptimizationFlags,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_setOptimizationFlags, doc_QGraphicsView_setOptimizationFlags);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_rubberBandSelectionMode, "rubberBandSelectionMode(self) -> Qt.ItemSelectionMode");

extern "C" {static PyObject *meth_QGraphicsView_rubberBandSelectionMode(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_rubberBandSelectionMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
             ::Qt::ItemSelectionMode sipRes;

            sipRes = sipCpp->rubberBandSelectionMode();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_Qt_ItemSelectionMode);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_rubberBandSelectionMode, doc_QGraphicsView_rubberBandSelectionMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_setRubberBandSelectionMode, "setRubberBandSelectionMode(self, Qt.ItemSelectionMode)");

extern "C" {static PyObject *meth_QGraphicsView_setRubberBandSelectionMode(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_setRubberBandSelectionMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::Qt::ItemSelectionMode a0;
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_Qt_ItemSelectionMode, &a0))
        {
            sipCpp->setRubberBandSelectionMode(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_setRubberBandSelectionMode, doc_QGraphicsView_setRubberBandSelectionMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_transform, "transform(self) -> QTransform");

extern "C" {static PyObject *meth_QGraphicsView_transform(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_transform(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
             ::QTransform*sipRes;

            sipRes = new  ::QTransform(sipCpp->transform());

            return sipConvertFromNewType(sipRes,sipType_QTransform,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_transform, doc_QGraphicsView_transform);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_viewportTransform, "viewportTransform(self) -> QTransform");

extern "C" {static PyObject *meth_QGraphicsView_viewportTransform(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_viewportTransform(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
             ::QTransform*sipRes;

            sipRes = new  ::QTransform(sipCpp->viewportTransform());

            return sipConvertFromNewType(sipRes,sipType_QTransform,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_viewportTransform, doc_QGraphicsView_viewportTransform);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_setTransform, "setTransform(self, QTransform, combine: bool = False)");

extern "C" {static PyObject *meth_QGraphicsView_setTransform(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_setTransform(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QTransform* a0;
        bool a1 = 0;
         ::QGraphicsView *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_combine,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9|b", &sipSelf, sipType_QGraphicsView, &sipCpp, sipType_QTransform, &a0, &a1))
        {
            sipCpp->setTransform(*a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_setTransform, doc_QGraphicsView_setTransform);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_resetTransform, "resetTransform(self)");

extern "C" {static PyObject *meth_QGraphicsView_resetTransform(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_resetTransform(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
            sipCpp->resetTransform();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_resetTransform, doc_QGraphicsView_resetTransform);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_isTransformed, "isTransformed(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsView_isTransformed(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_isTransformed(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isTransformed();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_isTransformed, doc_QGraphicsView_isTransformed);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsView_rubberBandRect, "rubberBandRect(self) -> QRect");

extern "C" {static PyObject *meth_QGraphicsView_rubberBandRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsView_rubberBandRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsView, &sipCpp))
        {
             ::QRect*sipRes;

            sipRes = new  ::QRect(sipCpp->rubberBandRect());

            return sipConvertFromNewType(sipRes,sipType_QRect,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsView, sipName_rubberBandRect, doc_QGraphicsView_rubberBandRect);

    return SIP_NULLPTR;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QGraphicsView(void *, const sipTypeDef *);}
static void *cast_QGraphicsView(void *sipCppV, const sipTypeDef *targetType)
{
     ::QGraphicsView *sipCpp = reinterpret_cast< ::QGraphicsView *>(sipCppV);

    if (targetType == sipType_QAbstractScrollArea)
        return static_cast< ::QAbstractScrollArea *>(sipCpp);

    if (targetType == sipType_QFrame)
        return static_cast< ::QFrame *>(sipCpp);

    if (targetType == sipType_QWidget)
        return static_cast< ::QWidget *>(sipCpp);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    if (targetType == sipType_QPaintDevice)
        return static_cast< ::QPaintDevice *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsView(void *, int);}
static void release_QGraphicsView(void *sipCppV, int)
{
     ::QGraphicsView *sipCpp = reinterpret_cast< ::QGraphicsView *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void *array_QGraphicsView(Py_ssize_t);}
static void *array_QGraphicsView(Py_ssize_t sipNrElem)
{
    return new  ::QGraphicsView[sipNrElem];
}


extern "C" {static void dealloc_QGraphicsView(sipSimpleWrapper *);}
static void dealloc_QGraphicsView(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQGraphicsView *>(sipGetAddress(sipSelf))->sipPySelf = SIP_NULLPTR;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QGraphicsView(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QGraphicsView(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QGraphicsView(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsView *sipCpp = SIP_NULLPTR;

    {
         ::QWidget* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QWidget, &a0, sipOwner))
        {
            sipCpp = new sipQGraphicsView(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
         ::QGraphicsScene* a0;
        PyObject *a0Keep;
         ::QWidget* a1 = 0;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "@J8|JH", &a0Keep, sipType_QGraphicsScene, &a0, sipType_QWidget, &a1, sipOwner))
        {
            sipCpp = new sipQGraphicsView(a0,a1);

            sipKeepReference((PyObject *)sipSelf, -26, a0Keep);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QGraphicsView[] = {{15, 255, 1}};


static PyMethodDef methods_QGraphicsView[] = {
    {sipName_alignment, meth_QGraphicsView_alignment, METH_VARARGS, doc_QGraphicsView_alignment},
    {sipName_backgroundBrush, meth_QGraphicsView_backgroundBrush, METH_VARARGS, doc_QGraphicsView_backgroundBrush},
    {sipName_cacheMode, meth_QGraphicsView_cacheMode, METH_VARARGS, doc_QGraphicsView_cacheMode},
    {sipName_centerOn, meth_QGraphicsView_centerOn, METH_VARARGS, doc_QGraphicsView_centerOn},
    {sipName_contextMenuEvent, meth_QGraphicsView_contextMenuEvent, METH_VARARGS, doc_QGraphicsView_contextMenuEvent},
    {sipName_dragEnterEvent, meth_QGraphicsView_dragEnterEvent, METH_VARARGS, doc_QGraphicsView_dragEnterEvent},
    {sipName_dragLeaveEvent, meth_QGraphicsView_dragLeaveEvent, METH_VARARGS, doc_QGraphicsView_dragLeaveEvent},
    {sipName_dragMode, meth_QGraphicsView_dragMode, METH_VARARGS, doc_QGraphicsView_dragMode},
    {sipName_dragMoveEvent, meth_QGraphicsView_dragMoveEvent, METH_VARARGS, doc_QGraphicsView_dragMoveEvent},
    {sipName_drawBackground, meth_QGraphicsView_drawBackground, METH_VARARGS, doc_QGraphicsView_drawBackground},
    {sipName_drawForeground, meth_QGraphicsView_drawForeground, METH_VARARGS, doc_QGraphicsView_drawForeground},
    {sipName_dropEvent, meth_QGraphicsView_dropEvent, METH_VARARGS, doc_QGraphicsView_dropEvent},
    {sipName_ensureVisible, SIP_MLMETH_CAST(meth_QGraphicsView_ensureVisible), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsView_ensureVisible},
    {sipName_event, meth_QGraphicsView_event, METH_VARARGS, doc_QGraphicsView_event},
    {sipName_fitInView, SIP_MLMETH_CAST(meth_QGraphicsView_fitInView), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsView_fitInView},
    {sipName_focusInEvent, meth_QGraphicsView_focusInEvent, METH_VARARGS, doc_QGraphicsView_focusInEvent},
    {sipName_focusNextPrevChild, meth_QGraphicsView_focusNextPrevChild, METH_VARARGS, doc_QGraphicsView_focusNextPrevChild},
    {sipName_focusOutEvent, meth_QGraphicsView_focusOutEvent, METH_VARARGS, doc_QGraphicsView_focusOutEvent},
    {sipName_foregroundBrush, meth_QGraphicsView_foregroundBrush, METH_VARARGS, doc_QGraphicsView_foregroundBrush},
    {sipName_inputMethodEvent, meth_QGraphicsView_inputMethodEvent, METH_VARARGS, doc_QGraphicsView_inputMethodEvent},
    {sipName_inputMethodQuery, meth_QGraphicsView_inputMethodQuery, METH_VARARGS, doc_QGraphicsView_inputMethodQuery},
    {sipName_invalidateScene, SIP_MLMETH_CAST(meth_QGraphicsView_invalidateScene), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsView_invalidateScene},
    {sipName_isInteractive, meth_QGraphicsView_isInteractive, METH_VARARGS, doc_QGraphicsView_isInteractive},
    {sipName_isTransformed, meth_QGraphicsView_isTransformed, METH_VARARGS, doc_QGraphicsView_isTransformed},
    {sipName_itemAt, meth_QGraphicsView_itemAt, METH_VARARGS, doc_QGraphicsView_itemAt},
    {sipName_items, SIP_MLMETH_CAST(meth_QGraphicsView_items), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsView_items},
    {sipName_keyPressEvent, meth_QGraphicsView_keyPressEvent, METH_VARARGS, doc_QGraphicsView_keyPressEvent},
    {sipName_keyReleaseEvent, meth_QGraphicsView_keyReleaseEvent, METH_VARARGS, doc_QGraphicsView_keyReleaseEvent},
    {sipName_mapFromScene, meth_QGraphicsView_mapFromScene, METH_VARARGS, doc_QGraphicsView_mapFromScene},
    {sipName_mapToScene, meth_QGraphicsView_mapToScene, METH_VARARGS, doc_QGraphicsView_mapToScene},
    {sipName_mouseDoubleClickEvent, meth_QGraphicsView_mouseDoubleClickEvent, METH_VARARGS, doc_QGraphicsView_mouseDoubleClickEvent},
    {sipName_mouseMoveEvent, meth_QGraphicsView_mouseMoveEvent, METH_VARARGS, doc_QGraphicsView_mouseMoveEvent},
    {sipName_mousePressEvent, meth_QGraphicsView_mousePressEvent, METH_VARARGS, doc_QGraphicsView_mousePressEvent},
    {sipName_mouseReleaseEvent, meth_QGraphicsView_mouseReleaseEvent, METH_VARARGS, doc_QGraphicsView_mouseReleaseEvent},
    {sipName_optimizationFlags, meth_QGraphicsView_optimizationFlags, METH_VARARGS, doc_QGraphicsView_optimizationFlags},
    {sipName_paintEvent, meth_QGraphicsView_paintEvent, METH_VARARGS, doc_QGraphicsView_paintEvent},
    {sipName_render, SIP_MLMETH_CAST(meth_QGraphicsView_render), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsView_render},
    {sipName_renderHints, meth_QGraphicsView_renderHints, METH_VARARGS, doc_QGraphicsView_renderHints},
    {sipName_resetCachedContent, meth_QGraphicsView_resetCachedContent, METH_VARARGS, doc_QGraphicsView_resetCachedContent},
    {sipName_resetTransform, meth_QGraphicsView_resetTransform, METH_VARARGS, doc_QGraphicsView_resetTransform},
    {sipName_resizeAnchor, meth_QGraphicsView_resizeAnchor, METH_VARARGS, doc_QGraphicsView_resizeAnchor},
    {sipName_resizeEvent, meth_QGraphicsView_resizeEvent, METH_VARARGS, doc_QGraphicsView_resizeEvent},
    {sipName_rotate, meth_QGraphicsView_rotate, METH_VARARGS, doc_QGraphicsView_rotate},
    {sipName_rubberBandRect, meth_QGraphicsView_rubberBandRect, METH_VARARGS, doc_QGraphicsView_rubberBandRect},
    {sipName_rubberBandSelectionMode, meth_QGraphicsView_rubberBandSelectionMode, METH_VARARGS, doc_QGraphicsView_rubberBandSelectionMode},
    {sipName_scale, meth_QGraphicsView_scale, METH_VARARGS, doc_QGraphicsView_scale},
    {sipName_scene, meth_QGraphicsView_scene, METH_VARARGS, doc_QGraphicsView_scene},
    {sipName_sceneRect, meth_QGraphicsView_sceneRect, METH_VARARGS, doc_QGraphicsView_sceneRect},
    {sipName_scrollContentsBy, meth_QGraphicsView_scrollContentsBy, METH_VARARGS, doc_QGraphicsView_scrollContentsBy},
    {sipName_setAlignment, meth_QGraphicsView_setAlignment, METH_VARARGS, doc_QGraphicsView_setAlignment},
    {sipName_setBackgroundBrush, meth_QGraphicsView_setBackgroundBrush, METH_VARARGS, doc_QGraphicsView_setBackgroundBrush},
    {sipName_setCacheMode, meth_QGraphicsView_setCacheMode, METH_VARARGS, doc_QGraphicsView_setCacheMode},
    {sipName_setDragMode, meth_QGraphicsView_setDragMode, METH_VARARGS, doc_QGraphicsView_setDragMode},
    {sipName_setForegroundBrush, meth_QGraphicsView_setForegroundBrush, METH_VARARGS, doc_QGraphicsView_setForegroundBrush},
    {sipName_setInteractive, meth_QGraphicsView_setInteractive, METH_VARARGS, doc_QGraphicsView_setInteractive},
    {sipName_setOptimizationFlag, SIP_MLMETH_CAST(meth_QGraphicsView_setOptimizationFlag), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsView_setOptimizationFlag},
    {sipName_setOptimizationFlags, meth_QGraphicsView_setOptimizationFlags, METH_VARARGS, doc_QGraphicsView_setOptimizationFlags},
    {sipName_setRenderHint, SIP_MLMETH_CAST(meth_QGraphicsView_setRenderHint), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsView_setRenderHint},
    {sipName_setRenderHints, meth_QGraphicsView_setRenderHints, METH_VARARGS, doc_QGraphicsView_setRenderHints},
    {sipName_setResizeAnchor, meth_QGraphicsView_setResizeAnchor, METH_VARARGS, doc_QGraphicsView_setResizeAnchor},
    {sipName_setRubberBandSelectionMode, meth_QGraphicsView_setRubberBandSelectionMode, METH_VARARGS, doc_QGraphicsView_setRubberBandSelectionMode},
    {sipName_setScene, meth_QGraphicsView_setScene, METH_VARARGS, doc_QGraphicsView_setScene},
    {sipName_setSceneRect, meth_QGraphicsView_setSceneRect, METH_VARARGS, doc_QGraphicsView_setSceneRect},
    {sipName_setTransform, SIP_MLMETH_CAST(meth_QGraphicsView_setTransform), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsView_setTransform},
    {sipName_setTransformationAnchor, meth_QGraphicsView_setTransformationAnchor, METH_VARARGS, doc_QGraphicsView_setTransformationAnchor},
    {sipName_setViewportUpdateMode, meth_QGraphicsView_setViewportUpdateMode, METH_VARARGS, doc_QGraphicsView_setViewportUpdateMode},
    {sipName_setupViewport, meth_QGraphicsView_setupViewport, METH_VARARGS, doc_QGraphicsView_setupViewport},
    {sipName_shear, meth_QGraphicsView_shear, METH_VARARGS, doc_QGraphicsView_shear},
    {sipName_showEvent, meth_QGraphicsView_showEvent, METH_VARARGS, doc_QGraphicsView_showEvent},
    {sipName_sizeHint, meth_QGraphicsView_sizeHint, METH_VARARGS, doc_QGraphicsView_sizeHint},
    {sipName_transform, meth_QGraphicsView_transform, METH_VARARGS, doc_QGraphicsView_transform},
    {sipName_transformationAnchor, meth_QGraphicsView_transformationAnchor, METH_VARARGS, doc_QGraphicsView_transformationAnchor},
    {sipName_translate, meth_QGraphicsView_translate, METH_VARARGS, doc_QGraphicsView_translate},
    {sipName_updateScene, meth_QGraphicsView_updateScene, METH_VARARGS, doc_QGraphicsView_updateScene},
    {sipName_updateSceneRect, meth_QGraphicsView_updateSceneRect, METH_VARARGS, doc_QGraphicsView_updateSceneRect},
    {sipName_viewportEvent, meth_QGraphicsView_viewportEvent, METH_VARARGS, doc_QGraphicsView_viewportEvent},
    {sipName_viewportTransform, meth_QGraphicsView_viewportTransform, METH_VARARGS, doc_QGraphicsView_viewportTransform},
    {sipName_viewportUpdateMode, meth_QGraphicsView_viewportUpdateMode, METH_VARARGS, doc_QGraphicsView_viewportUpdateMode},
    {sipName_wheelEvent, meth_QGraphicsView_wheelEvent, METH_VARARGS, doc_QGraphicsView_wheelEvent}
};

static sipEnumMemberDef enummembers_QGraphicsView[] = {
    {sipName_AnchorUnderMouse, static_cast<int>( ::QGraphicsView::AnchorUnderMouse), 167},
    {sipName_AnchorViewCenter, static_cast<int>( ::QGraphicsView::AnchorViewCenter), 167},
    {sipName_BoundingRectViewportUpdate, static_cast<int>( ::QGraphicsView::BoundingRectViewportUpdate), 168},
    {sipName_CacheBackground, static_cast<int>( ::QGraphicsView::CacheBackground), 163},
    {sipName_CacheNone, static_cast<int>( ::QGraphicsView::CacheNone), 163},
    {sipName_DontAdjustForAntialiasing, static_cast<int>( ::QGraphicsView::DontAdjustForAntialiasing), 165},
    {sipName_DontClipPainter, static_cast<int>( ::QGraphicsView::DontClipPainter), 165},
    {sipName_DontSavePainterState, static_cast<int>( ::QGraphicsView::DontSavePainterState), 165},
    {sipName_FullViewportUpdate, static_cast<int>( ::QGraphicsView::FullViewportUpdate), 168},
    {sipName_MinimalViewportUpdate, static_cast<int>( ::QGraphicsView::MinimalViewportUpdate), 168},
    {sipName_NoAnchor, static_cast<int>( ::QGraphicsView::NoAnchor), 167},
    {sipName_NoDrag, static_cast<int>( ::QGraphicsView::NoDrag), 164},
    {sipName_NoViewportUpdate, static_cast<int>( ::QGraphicsView::NoViewportUpdate), 168},
    {sipName_RubberBandDrag, static_cast<int>( ::QGraphicsView::RubberBandDrag), 164},
    {sipName_ScrollHandDrag, static_cast<int>( ::QGraphicsView::ScrollHandDrag), 164},
    {sipName_SmartViewportUpdate, static_cast<int>( ::QGraphicsView::SmartViewportUpdate), 168},
};

PyDoc_STRVAR(doc_QGraphicsView, "\1QGraphicsView(parent: QWidget = None)\n"
"QGraphicsView(QGraphicsScene, parent: QWidget = None)");


/* Define this type's signals. */
static const pyqt5QtSignal signals_QGraphicsView[] = {
    {"rubberBandChanged(QRect,QPointF,QPointF)", "\1rubberBandChanged(self, QRect, Union[QPointF, QPoint], Union[QPointF, QPoint])", SIP_NULLPTR, SIP_NULLPTR},
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
};


static pyqt5ClassPluginDef plugin_QGraphicsView = {
    & ::QGraphicsView::staticMetaObject,
    0,
    signals_QGraphicsView,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtWidgets_QGraphicsView = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsView,
        SIP_NULLPTR,
        &plugin_QGraphicsView
    },
    {
        sipNameNr_QGraphicsView,
        {0, 0, 1},
        79, methods_QGraphicsView,
        16, enummembers_QGraphicsView,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QGraphicsView,
    -1,
    -1,
    supers_QGraphicsView,
    SIP_NULLPTR,
    init_type_QGraphicsView,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_QGraphicsView,
    SIP_NULLPTR,
    array_QGraphicsView,
    SIP_NULLPTR,
    release_QGraphicsView,
    cast_QGraphicsView,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
