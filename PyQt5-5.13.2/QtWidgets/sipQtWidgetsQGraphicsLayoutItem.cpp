/*
 * Interface wrapper code.
 *
 * Generated by SIP 5.3.0
 *
 * Copyright (c) 2019 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicslayoutitem.sip"
#include <qgraphicslayoutitem.h>
#line 29 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsLayoutItem.cpp"

#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 33 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsLayoutItem.cpp"
#line 97 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 36 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsLayoutItem.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 39 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsLayoutItem.cpp"
#line 164 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 42 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsLayoutItem.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 45 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsLayoutItem.cpp"


class sipQGraphicsLayoutItem : public  ::QGraphicsLayoutItem
{
public:
    sipQGraphicsLayoutItem( ::QGraphicsLayoutItem*,bool);
    virtual ~sipQGraphicsLayoutItem();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
     ::QSizeF sizeHint( ::Qt::SizeHint,const  ::QSizeF&) const SIP_OVERRIDE;
    void updateGeometry() SIP_OVERRIDE;
    void getContentsMargins( ::qreal*, ::qreal*, ::qreal*, ::qreal*) const SIP_OVERRIDE;
    void setGeometry(const  ::QRectF&) SIP_OVERRIDE;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsLayoutItem(const sipQGraphicsLayoutItem &);
    sipQGraphicsLayoutItem &operator = (const sipQGraphicsLayoutItem &);

    char sipPyMethods[4];
};

sipQGraphicsLayoutItem::sipQGraphicsLayoutItem( ::QGraphicsLayoutItem*a0,bool a1):  ::QGraphicsLayoutItem(a0,a1), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsLayoutItem::~sipQGraphicsLayoutItem()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

 ::QSizeF sipQGraphicsLayoutItem::sizeHint( ::Qt::SizeHint a0,const  ::QSizeF& a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[0]), const_cast<sipSimpleWrapper **>(&sipPySelf), sipName_QGraphicsLayoutItem, sipName_sizeHint);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[0]), sipPySelf, sipName_QGraphicsLayoutItem, sipName_sizeHint);
#endif

    if (!sipMeth)
        return  ::QSizeF();

    extern  ::QSizeF sipVH_QtWidgets_140(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::Qt::SizeHint,const  ::QSizeF&);

    return sipVH_QtWidgets_140(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsLayoutItem::updateGeometry()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[1], &sipPySelf, SIP_NULLPTR, sipName_updateGeometry);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[1], sipPySelf, SIP_NULLPTR, sipName_updateGeometry);
#endif

    if (!sipMeth)
    {
         ::QGraphicsLayoutItem::updateGeometry();
        return;
    }

    extern void sipVH_QtWidgets_37(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_QtWidgets_37(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQGraphicsLayoutItem::getContentsMargins( ::qreal*a0, ::qreal*a1, ::qreal*a2, ::qreal*a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[2]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_getContentsMargins);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[2]), sipPySelf, SIP_NULLPTR, sipName_getContentsMargins);
#endif

    if (!sipMeth)
    {
         ::QGraphicsLayoutItem::getContentsMargins(a0,a1,a2,a3);
        return;
    }

    extern void sipVH_QtWidgets_139(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::qreal*, ::qreal*, ::qreal*, ::qreal*);

    sipVH_QtWidgets_139(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2, a3);
}

void sipQGraphicsLayoutItem::setGeometry(const  ::QRectF& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[3], &sipPySelf, SIP_NULLPTR, sipName_setGeometry);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[3], sipPySelf, SIP_NULLPTR, sipName_setGeometry);
#endif

    if (!sipMeth)
    {
         ::QGraphicsLayoutItem::setGeometry(a0);
        return;
    }

    extern void sipVH_QtWidgets_138(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QRectF&);

    sipVH_QtWidgets_138(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_setSizePolicy, "setSizePolicy(self, QSizePolicy)\n"
"setSizePolicy(self, QSizePolicy.Policy, QSizePolicy.Policy, controlType: QSizePolicy.ControlType = QSizePolicy.DefaultType)");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_setSizePolicy(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setSizePolicy(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QSizePolicy* a0;
         ::QGraphicsLayoutItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, "BJ9", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, sipType_QSizePolicy, &a0))
        {
            sipCpp->setSizePolicy(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
         ::QSizePolicy::Policy a0;
         ::QSizePolicy::Policy a1;
         ::QSizePolicy::ControlType a2 = QSizePolicy::DefaultType;
         ::QGraphicsLayoutItem *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_controlType,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BEE|E", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, sipType_QSizePolicy_Policy, &a0, sipType_QSizePolicy_Policy, &a1, sipType_QSizePolicy_ControlType, &a2))
        {
            sipCpp->setSizePolicy(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setSizePolicy, doc_QGraphicsLayoutItem_setSizePolicy);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_sizePolicy, "sizePolicy(self) -> QSizePolicy");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_sizePolicy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_sizePolicy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
             ::QSizePolicy*sipRes;

            sipRes = new  ::QSizePolicy(sipCpp->sizePolicy());

            return sipConvertFromNewType(sipRes,sipType_QSizePolicy,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_sizePolicy, doc_QGraphicsLayoutItem_sizePolicy);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_setMinimumSize, "setMinimumSize(self, QSizeF)\n"
"setMinimumSize(self, float, float)");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_setMinimumSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setMinimumSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QSizeF* a0;
         ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, sipType_QSizeF, &a0))
        {
            sipCpp->setMinimumSize(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, &a0, &a1))
        {
            sipCpp->setMinimumSize(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setMinimumSize, doc_QGraphicsLayoutItem_setMinimumSize);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_minimumSize, "minimumSize(self) -> QSizeF");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_minimumSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_minimumSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
             ::QSizeF*sipRes;

            sipRes = new  ::QSizeF(sipCpp->minimumSize());

            return sipConvertFromNewType(sipRes,sipType_QSizeF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_minimumSize, doc_QGraphicsLayoutItem_minimumSize);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_setMinimumWidth, "setMinimumWidth(self, float)");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_setMinimumWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setMinimumWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, &a0))
        {
            sipCpp->setMinimumWidth(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setMinimumWidth, doc_QGraphicsLayoutItem_setMinimumWidth);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_setMinimumHeight, "setMinimumHeight(self, float)");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_setMinimumHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setMinimumHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, &a0))
        {
            sipCpp->setMinimumHeight(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setMinimumHeight, doc_QGraphicsLayoutItem_setMinimumHeight);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_setPreferredSize, "setPreferredSize(self, QSizeF)\n"
"setPreferredSize(self, float, float)");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_setPreferredSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setPreferredSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QSizeF* a0;
         ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, sipType_QSizeF, &a0))
        {
            sipCpp->setPreferredSize(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, &a0, &a1))
        {
            sipCpp->setPreferredSize(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setPreferredSize, doc_QGraphicsLayoutItem_setPreferredSize);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_preferredSize, "preferredSize(self) -> QSizeF");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_preferredSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_preferredSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
             ::QSizeF*sipRes;

            sipRes = new  ::QSizeF(sipCpp->preferredSize());

            return sipConvertFromNewType(sipRes,sipType_QSizeF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_preferredSize, doc_QGraphicsLayoutItem_preferredSize);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_setPreferredWidth, "setPreferredWidth(self, float)");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_setPreferredWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setPreferredWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, &a0))
        {
            sipCpp->setPreferredWidth(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setPreferredWidth, doc_QGraphicsLayoutItem_setPreferredWidth);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_setPreferredHeight, "setPreferredHeight(self, float)");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_setPreferredHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setPreferredHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, &a0))
        {
            sipCpp->setPreferredHeight(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setPreferredHeight, doc_QGraphicsLayoutItem_setPreferredHeight);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_setMaximumSize, "setMaximumSize(self, QSizeF)\n"
"setMaximumSize(self, float, float)");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_setMaximumSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setMaximumSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QSizeF* a0;
         ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, sipType_QSizeF, &a0))
        {
            sipCpp->setMaximumSize(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, &a0, &a1))
        {
            sipCpp->setMaximumSize(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setMaximumSize, doc_QGraphicsLayoutItem_setMaximumSize);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_maximumSize, "maximumSize(self) -> QSizeF");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_maximumSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_maximumSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
             ::QSizeF*sipRes;

            sipRes = new  ::QSizeF(sipCpp->maximumSize());

            return sipConvertFromNewType(sipRes,sipType_QSizeF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_maximumSize, doc_QGraphicsLayoutItem_maximumSize);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_setMaximumWidth, "setMaximumWidth(self, float)");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_setMaximumWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setMaximumWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, &a0))
        {
            sipCpp->setMaximumWidth(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setMaximumWidth, doc_QGraphicsLayoutItem_setMaximumWidth);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_setMaximumHeight, "setMaximumHeight(self, float)");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_setMaximumHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setMaximumHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, &a0))
        {
            sipCpp->setMaximumHeight(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setMaximumHeight, doc_QGraphicsLayoutItem_setMaximumHeight);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_setGeometry, "setGeometry(self, QRectF)");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_setGeometry(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setGeometry(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QRectF* a0;
         ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, sipType_QRectF, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsLayoutItem::setGeometry(*a0) : sipCpp->setGeometry(*a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setGeometry, doc_QGraphicsLayoutItem_setGeometry);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_geometry, "geometry(self) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_geometry(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_geometry(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->geometry());

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_geometry, doc_QGraphicsLayoutItem_geometry);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_getContentsMargins, "getContentsMargins(self) -> Tuple[float, float, float, float]");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_getContentsMargins(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_getContentsMargins(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
        const  ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsLayoutItem::getContentsMargins(&a0,&a1,&a2,&a3) : sipCpp->getContentsMargins(&a0,&a1,&a2,&a3));

            return sipBuildResult(0,"(dddd)",a0,a1,a2,a3);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_getContentsMargins, doc_QGraphicsLayoutItem_getContentsMargins);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_contentsRect, "contentsRect(self) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_contentsRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_contentsRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->contentsRect());

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_contentsRect, doc_QGraphicsLayoutItem_contentsRect);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_effectiveSizeHint, "effectiveSizeHint(self, Qt.SizeHint, constraint: QSizeF = QSizeF()) -> QSizeF");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_effectiveSizeHint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_effectiveSizeHint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::Qt::SizeHint a0;
        const  ::QSizeF& a1def = QSizeF();
        const  ::QSizeF* a1 = &a1def;
        const  ::QGraphicsLayoutItem *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_constraint,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BE|J9", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, sipType_Qt_SizeHint, &a0, sipType_QSizeF, &a1))
        {
             ::QSizeF*sipRes;

            sipRes = new  ::QSizeF(sipCpp->effectiveSizeHint(a0,*a1));

            return sipConvertFromNewType(sipRes,sipType_QSizeF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_effectiveSizeHint, doc_QGraphicsLayoutItem_effectiveSizeHint);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_updateGeometry, "updateGeometry(self)");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_updateGeometry(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_updateGeometry(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsLayoutItem::updateGeometry() : sipCpp->updateGeometry());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_updateGeometry, doc_QGraphicsLayoutItem_updateGeometry);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_parentLayoutItem, "parentLayoutItem(self) -> QGraphicsLayoutItem");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_parentLayoutItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_parentLayoutItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
             ::QGraphicsLayoutItem*sipRes;

            sipRes = sipCpp->parentLayoutItem();

            return sipConvertFromType(sipRes,sipType_QGraphicsLayoutItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_parentLayoutItem, doc_QGraphicsLayoutItem_parentLayoutItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_setParentLayoutItem, "setParentLayoutItem(self, QGraphicsLayoutItem)");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_setParentLayoutItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setParentLayoutItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsLayoutItem* a0;
        sipWrapper *sipOwner = SIP_NULLPTR;
         ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJH", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, sipType_QGraphicsLayoutItem, &a0, &sipOwner))
        {
            sipCpp->setParentLayoutItem(a0);

            if (sipOwner)
                sipTransferTo(sipSelf, (PyObject *)sipOwner);
            else
                sipTransferBack(sipSelf);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setParentLayoutItem, doc_QGraphicsLayoutItem_setParentLayoutItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_isLayout, "isLayout(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_isLayout(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_isLayout(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isLayout();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_isLayout, doc_QGraphicsLayoutItem_isLayout);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_minimumWidth, "minimumWidth(self) -> float");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_minimumWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_minimumWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->minimumWidth();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_minimumWidth, doc_QGraphicsLayoutItem_minimumWidth);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_minimumHeight, "minimumHeight(self) -> float");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_minimumHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_minimumHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->minimumHeight();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_minimumHeight, doc_QGraphicsLayoutItem_minimumHeight);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_preferredWidth, "preferredWidth(self) -> float");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_preferredWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_preferredWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->preferredWidth();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_preferredWidth, doc_QGraphicsLayoutItem_preferredWidth);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_preferredHeight, "preferredHeight(self) -> float");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_preferredHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_preferredHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->preferredHeight();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_preferredHeight, doc_QGraphicsLayoutItem_preferredHeight);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_maximumWidth, "maximumWidth(self) -> float");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_maximumWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_maximumWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->maximumWidth();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_maximumWidth, doc_QGraphicsLayoutItem_maximumWidth);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_maximumHeight, "maximumHeight(self) -> float");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_maximumHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_maximumHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->maximumHeight();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_maximumHeight, doc_QGraphicsLayoutItem_maximumHeight);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_graphicsItem, "graphicsItem(self) -> QGraphicsItem");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_graphicsItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_graphicsItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
             ::QGraphicsItem*sipRes;

            sipRes = sipCpp->graphicsItem();

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_graphicsItem, doc_QGraphicsLayoutItem_graphicsItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_ownedByLayout, "ownedByLayout(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_ownedByLayout(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_ownedByLayout(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->ownedByLayout();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_ownedByLayout, doc_QGraphicsLayoutItem_ownedByLayout);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_sizeHint, "sizeHint(self, Qt.SizeHint, constraint: QSizeF = QSizeF()) -> QSizeF");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_sizeHint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_sizeHint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    PyObject *sipOrigSelf = sipSelf;

    {
         ::Qt::SizeHint a0;
        const  ::QSizeF& a1def = QSizeF();
        const  ::QSizeF* a1 = &a1def;
        const  ::QGraphicsLayoutItem *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_constraint,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "pE|J9", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, sipType_Qt_SizeHint, &a0, sipType_QSizeF, &a1))
        {
             ::QSizeF*sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QGraphicsLayoutItem, sipName_sizeHint);
                return SIP_NULLPTR;
            }

            sipRes = new  ::QSizeF(sipCpp->sizeHint(a0,*a1));

            return sipConvertFromNewType(sipRes,sipType_QSizeF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_sizeHint, doc_QGraphicsLayoutItem_sizeHint);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_setGraphicsItem, "setGraphicsItem(self, QGraphicsItem)");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_setGraphicsItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setGraphicsItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem* a0;
         ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            sipCpp->setGraphicsItem(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setGraphicsItem, doc_QGraphicsLayoutItem_setGraphicsItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLayoutItem_setOwnedByLayout, "setOwnedByLayout(self, bool)");

extern "C" {static PyObject *meth_QGraphicsLayoutItem_setOwnedByLayout(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setOwnedByLayout(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pb", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, &a0))
        {
            sipCpp->setOwnedByLayout(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setOwnedByLayout, doc_QGraphicsLayoutItem_setOwnedByLayout);

    return SIP_NULLPTR;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsLayoutItem(void *, int);}
static void release_QGraphicsLayoutItem(void *sipCppV, int sipState)
{
    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQGraphicsLayoutItem *>(sipCppV);
    else
        delete reinterpret_cast< ::QGraphicsLayoutItem *>(sipCppV);
}


extern "C" {static void dealloc_QGraphicsLayoutItem(sipSimpleWrapper *);}
static void dealloc_QGraphicsLayoutItem(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQGraphicsLayoutItem *>(sipGetAddress(sipSelf))->sipPySelf = SIP_NULLPTR;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QGraphicsLayoutItem(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QGraphicsLayoutItem(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QGraphicsLayoutItem(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsLayoutItem *sipCpp = SIP_NULLPTR;

    {
         ::QGraphicsLayoutItem* a0 = 0;
        bool a1 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
            sipName_isLayout,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JHb", sipType_QGraphicsLayoutItem, &a0, sipOwner, &a1))
        {
            sipCpp = new sipQGraphicsLayoutItem(a0,a1);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


static PyMethodDef methods_QGraphicsLayoutItem[] = {
    {sipName_contentsRect, meth_QGraphicsLayoutItem_contentsRect, METH_VARARGS, doc_QGraphicsLayoutItem_contentsRect},
    {sipName_effectiveSizeHint, SIP_MLMETH_CAST(meth_QGraphicsLayoutItem_effectiveSizeHint), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsLayoutItem_effectiveSizeHint},
    {sipName_geometry, meth_QGraphicsLayoutItem_geometry, METH_VARARGS, doc_QGraphicsLayoutItem_geometry},
    {sipName_getContentsMargins, meth_QGraphicsLayoutItem_getContentsMargins, METH_VARARGS, doc_QGraphicsLayoutItem_getContentsMargins},
    {sipName_graphicsItem, meth_QGraphicsLayoutItem_graphicsItem, METH_VARARGS, doc_QGraphicsLayoutItem_graphicsItem},
    {sipName_isLayout, meth_QGraphicsLayoutItem_isLayout, METH_VARARGS, doc_QGraphicsLayoutItem_isLayout},
    {sipName_maximumHeight, meth_QGraphicsLayoutItem_maximumHeight, METH_VARARGS, doc_QGraphicsLayoutItem_maximumHeight},
    {sipName_maximumSize, meth_QGraphicsLayoutItem_maximumSize, METH_VARARGS, doc_QGraphicsLayoutItem_maximumSize},
    {sipName_maximumWidth, meth_QGraphicsLayoutItem_maximumWidth, METH_VARARGS, doc_QGraphicsLayoutItem_maximumWidth},
    {sipName_minimumHeight, meth_QGraphicsLayoutItem_minimumHeight, METH_VARARGS, doc_QGraphicsLayoutItem_minimumHeight},
    {sipName_minimumSize, meth_QGraphicsLayoutItem_minimumSize, METH_VARARGS, doc_QGraphicsLayoutItem_minimumSize},
    {sipName_minimumWidth, meth_QGraphicsLayoutItem_minimumWidth, METH_VARARGS, doc_QGraphicsLayoutItem_minimumWidth},
    {sipName_ownedByLayout, meth_QGraphicsLayoutItem_ownedByLayout, METH_VARARGS, doc_QGraphicsLayoutItem_ownedByLayout},
    {sipName_parentLayoutItem, meth_QGraphicsLayoutItem_parentLayoutItem, METH_VARARGS, doc_QGraphicsLayoutItem_parentLayoutItem},
    {sipName_preferredHeight, meth_QGraphicsLayoutItem_preferredHeight, METH_VARARGS, doc_QGraphicsLayoutItem_preferredHeight},
    {sipName_preferredSize, meth_QGraphicsLayoutItem_preferredSize, METH_VARARGS, doc_QGraphicsLayoutItem_preferredSize},
    {sipName_preferredWidth, meth_QGraphicsLayoutItem_preferredWidth, METH_VARARGS, doc_QGraphicsLayoutItem_preferredWidth},
    {sipName_setGeometry, meth_QGraphicsLayoutItem_setGeometry, METH_VARARGS, doc_QGraphicsLayoutItem_setGeometry},
    {sipName_setGraphicsItem, meth_QGraphicsLayoutItem_setGraphicsItem, METH_VARARGS, doc_QGraphicsLayoutItem_setGraphicsItem},
    {sipName_setMaximumHeight, meth_QGraphicsLayoutItem_setMaximumHeight, METH_VARARGS, doc_QGraphicsLayoutItem_setMaximumHeight},
    {sipName_setMaximumSize, meth_QGraphicsLayoutItem_setMaximumSize, METH_VARARGS, doc_QGraphicsLayoutItem_setMaximumSize},
    {sipName_setMaximumWidth, meth_QGraphicsLayoutItem_setMaximumWidth, METH_VARARGS, doc_QGraphicsLayoutItem_setMaximumWidth},
    {sipName_setMinimumHeight, meth_QGraphicsLayoutItem_setMinimumHeight, METH_VARARGS, doc_QGraphicsLayoutItem_setMinimumHeight},
    {sipName_setMinimumSize, meth_QGraphicsLayoutItem_setMinimumSize, METH_VARARGS, doc_QGraphicsLayoutItem_setMinimumSize},
    {sipName_setMinimumWidth, meth_QGraphicsLayoutItem_setMinimumWidth, METH_VARARGS, doc_QGraphicsLayoutItem_setMinimumWidth},
    {sipName_setOwnedByLayout, meth_QGraphicsLayoutItem_setOwnedByLayout, METH_VARARGS, doc_QGraphicsLayoutItem_setOwnedByLayout},
    {sipName_setParentLayoutItem, meth_QGraphicsLayoutItem_setParentLayoutItem, METH_VARARGS, doc_QGraphicsLayoutItem_setParentLayoutItem},
    {sipName_setPreferredHeight, meth_QGraphicsLayoutItem_setPreferredHeight, METH_VARARGS, doc_QGraphicsLayoutItem_setPreferredHeight},
    {sipName_setPreferredSize, meth_QGraphicsLayoutItem_setPreferredSize, METH_VARARGS, doc_QGraphicsLayoutItem_setPreferredSize},
    {sipName_setPreferredWidth, meth_QGraphicsLayoutItem_setPreferredWidth, METH_VARARGS, doc_QGraphicsLayoutItem_setPreferredWidth},
    {sipName_setSizePolicy, SIP_MLMETH_CAST(meth_QGraphicsLayoutItem_setSizePolicy), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsLayoutItem_setSizePolicy},
    {sipName_sizeHint, SIP_MLMETH_CAST(meth_QGraphicsLayoutItem_sizeHint), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsLayoutItem_sizeHint},
    {sipName_sizePolicy, meth_QGraphicsLayoutItem_sizePolicy, METH_VARARGS, doc_QGraphicsLayoutItem_sizePolicy},
    {sipName_updateGeometry, meth_QGraphicsLayoutItem_updateGeometry, METH_VARARGS, doc_QGraphicsLayoutItem_updateGeometry}
};

PyDoc_STRVAR(doc_QGraphicsLayoutItem, "\1QGraphicsLayoutItem(parent: QGraphicsLayoutItem = None, isLayout: bool = False)");


static pyqt5ClassPluginDef plugin_QGraphicsLayoutItem = {
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtWidgets_QGraphicsLayoutItem = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_ABSTRACT|SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsLayoutItem,
        SIP_NULLPTR,
        &plugin_QGraphicsLayoutItem
    },
    {
        sipNameNr_QGraphicsLayoutItem,
        {0, 0, 1},
        34, methods_QGraphicsLayoutItem,
        0, SIP_NULLPTR,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QGraphicsLayoutItem,
    -1,
    -1,
    SIP_NULLPTR,
    SIP_NULLPTR,
    init_type_QGraphicsLayoutItem,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_QGraphicsLayoutItem,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    release_QGraphicsLayoutItem,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
