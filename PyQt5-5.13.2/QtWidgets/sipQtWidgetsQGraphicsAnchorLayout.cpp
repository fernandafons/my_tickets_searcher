/*
 * Interface wrapper code.
 *
 * Generated by SIP 5.3.0
 *
 * Copyright (c) 2019 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 44 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsanchorlayout.sip"
#include <qgraphicsanchorlayout.h>
#line 29 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsAnchorLayout.cpp"

#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicslayoutitem.sip"
#include <qgraphicslayoutitem.h>
#line 33 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsAnchorLayout.cpp"
#line 97 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 36 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsAnchorLayout.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 39 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsAnchorLayout.cpp"
#line 164 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 42 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsAnchorLayout.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 45 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsAnchorLayout.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsanchorlayout.sip"
#include <qgraphicsanchorlayout.h>
#line 48 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsAnchorLayout.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 51 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsAnchorLayout.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 54 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsAnchorLayout.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 57 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsAnchorLayout.cpp"


class sipQGraphicsAnchorLayout : public  ::QGraphicsAnchorLayout
{
public:
    sipQGraphicsAnchorLayout( ::QGraphicsLayoutItem*);
    virtual ~sipQGraphicsAnchorLayout();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
     ::QSizeF sizeHint( ::Qt::SizeHint,const  ::QSizeF&) const SIP_OVERRIDE;
    void updateGeometry() SIP_OVERRIDE;
    void getContentsMargins( ::qreal*, ::qreal*, ::qreal*, ::qreal*) const SIP_OVERRIDE;
    void setGeometry(const  ::QRectF&) SIP_OVERRIDE;
    void invalidate() SIP_OVERRIDE;
    void widgetEvent( ::QEvent*) SIP_OVERRIDE;
    int count() const SIP_OVERRIDE;
     ::QGraphicsLayoutItem* itemAt(int) const SIP_OVERRIDE;
    void removeAt(int) SIP_OVERRIDE;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsAnchorLayout(const sipQGraphicsAnchorLayout &);
    sipQGraphicsAnchorLayout &operator = (const sipQGraphicsAnchorLayout &);

    char sipPyMethods[9];
};

sipQGraphicsAnchorLayout::sipQGraphicsAnchorLayout( ::QGraphicsLayoutItem*a0):  ::QGraphicsAnchorLayout(a0), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsAnchorLayout::~sipQGraphicsAnchorLayout()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

 ::QSizeF sipQGraphicsAnchorLayout::sizeHint( ::Qt::SizeHint a0,const  ::QSizeF& a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[0]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_sizeHint);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[0]), sipPySelf, SIP_NULLPTR, sipName_sizeHint);
#endif

    if (!sipMeth)
        return  ::QGraphicsAnchorLayout::sizeHint(a0,a1);

    extern  ::QSizeF sipVH_QtWidgets_140(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::Qt::SizeHint,const  ::QSizeF&);

    return sipVH_QtWidgets_140(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsAnchorLayout::updateGeometry()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[1], &sipPySelf, SIP_NULLPTR, sipName_updateGeometry);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[1], sipPySelf, SIP_NULLPTR, sipName_updateGeometry);
#endif

    if (!sipMeth)
    {
         ::QGraphicsAnchorLayout::updateGeometry();
        return;
    }

    extern void sipVH_QtWidgets_37(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_QtWidgets_37(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQGraphicsAnchorLayout::getContentsMargins( ::qreal*a0, ::qreal*a1, ::qreal*a2, ::qreal*a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[2]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_getContentsMargins);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[2]), sipPySelf, SIP_NULLPTR, sipName_getContentsMargins);
#endif

    if (!sipMeth)
    {
         ::QGraphicsAnchorLayout::getContentsMargins(a0,a1,a2,a3);
        return;
    }

    extern void sipVH_QtWidgets_139(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::qreal*, ::qreal*, ::qreal*, ::qreal*);

    sipVH_QtWidgets_139(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2, a3);
}

void sipQGraphicsAnchorLayout::setGeometry(const  ::QRectF& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[3], &sipPySelf, SIP_NULLPTR, sipName_setGeometry);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[3], sipPySelf, SIP_NULLPTR, sipName_setGeometry);
#endif

    if (!sipMeth)
    {
         ::QGraphicsAnchorLayout::setGeometry(a0);
        return;
    }

    extern void sipVH_QtWidgets_138(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QRectF&);

    sipVH_QtWidgets_138(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsAnchorLayout::invalidate()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[4], &sipPySelf, SIP_NULLPTR, sipName_invalidate);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[4], sipPySelf, SIP_NULLPTR, sipName_invalidate);
#endif

    if (!sipMeth)
    {
         ::QGraphicsAnchorLayout::invalidate();
        return;
    }

    extern void sipVH_QtWidgets_37(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_QtWidgets_37(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQGraphicsAnchorLayout::widgetEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[5], &sipPySelf, SIP_NULLPTR, sipName_widgetEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[5], sipPySelf, SIP_NULLPTR, sipName_widgetEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsAnchorLayout::widgetEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

int sipQGraphicsAnchorLayout::count() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[6]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_count);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[6]), sipPySelf, SIP_NULLPTR, sipName_count);
#endif

    if (!sipMeth)
        return  ::QGraphicsAnchorLayout::count();

    extern int sipVH_QtWidgets_8(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_8(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

 ::QGraphicsLayoutItem* sipQGraphicsAnchorLayout::itemAt(int a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[7]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_itemAt);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[7]), sipPySelf, SIP_NULLPTR, sipName_itemAt);
#endif

    if (!sipMeth)
        return  ::QGraphicsAnchorLayout::itemAt(a0);

    extern  ::QGraphicsLayoutItem* sipVH_QtWidgets_141(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    return sipVH_QtWidgets_141(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsAnchorLayout::removeAt(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[8], &sipPySelf, SIP_NULLPTR, sipName_removeAt);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[8], sipPySelf, SIP_NULLPTR, sipName_removeAt);
#endif

    if (!sipMeth)
    {
         ::QGraphicsAnchorLayout::removeAt(a0);
        return;
    }

    extern void sipVH_QtWidgets_59(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    sipVH_QtWidgets_59(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QGraphicsAnchorLayout_addAnchor, "addAnchor(self, QGraphicsLayoutItem, Qt.AnchorPoint, QGraphicsLayoutItem, Qt.AnchorPoint) -> QGraphicsAnchor");

extern "C" {static PyObject *meth_QGraphicsAnchorLayout_addAnchor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsAnchorLayout_addAnchor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsLayoutItem* a0;
         ::Qt::AnchorPoint a1;
         ::QGraphicsLayoutItem* a2;
         ::Qt::AnchorPoint a3;
         ::QGraphicsAnchorLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:EJ:E", &sipSelf, sipType_QGraphicsAnchorLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0, sipType_Qt_AnchorPoint, &a1, sipType_QGraphicsLayoutItem, &a2, sipType_Qt_AnchorPoint, &a3))
        {
             ::QGraphicsAnchor*sipRes;

            sipRes = sipCpp->addAnchor(a0,a1,a2,a3);

            return sipConvertFromType(sipRes,sipType_QGraphicsAnchor,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsAnchorLayout, sipName_addAnchor, doc_QGraphicsAnchorLayout_addAnchor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsAnchorLayout_anchor, "anchor(self, QGraphicsLayoutItem, Qt.AnchorPoint, QGraphicsLayoutItem, Qt.AnchorPoint) -> QGraphicsAnchor");

extern "C" {static PyObject *meth_QGraphicsAnchorLayout_anchor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsAnchorLayout_anchor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsLayoutItem* a0;
         ::Qt::AnchorPoint a1;
         ::QGraphicsLayoutItem* a2;
         ::Qt::AnchorPoint a3;
         ::QGraphicsAnchorLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8EJ8E", &sipSelf, sipType_QGraphicsAnchorLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0, sipType_Qt_AnchorPoint, &a1, sipType_QGraphicsLayoutItem, &a2, sipType_Qt_AnchorPoint, &a3))
        {
             ::QGraphicsAnchor*sipRes;

            sipRes = sipCpp->anchor(a0,a1,a2,a3);

            return sipConvertFromType(sipRes,sipType_QGraphicsAnchor,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsAnchorLayout, sipName_anchor, doc_QGraphicsAnchorLayout_anchor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsAnchorLayout_addCornerAnchors, "addCornerAnchors(self, QGraphicsLayoutItem, Qt.Corner, QGraphicsLayoutItem, Qt.Corner)");

extern "C" {static PyObject *meth_QGraphicsAnchorLayout_addCornerAnchors(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsAnchorLayout_addCornerAnchors(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsLayoutItem* a0;
         ::Qt::Corner a1;
         ::QGraphicsLayoutItem* a2;
         ::Qt::Corner a3;
         ::QGraphicsAnchorLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:EJ:E", &sipSelf, sipType_QGraphicsAnchorLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0, sipType_Qt_Corner, &a1, sipType_QGraphicsLayoutItem, &a2, sipType_Qt_Corner, &a3))
        {
            sipCpp->addCornerAnchors(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsAnchorLayout, sipName_addCornerAnchors, doc_QGraphicsAnchorLayout_addCornerAnchors);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsAnchorLayout_addAnchors, "addAnchors(self, QGraphicsLayoutItem, QGraphicsLayoutItem, orientations: Union[Qt.Orientations, Qt.Orientation] = Qt.Horizontal|Qt.Vertical)");

extern "C" {static PyObject *meth_QGraphicsAnchorLayout_addAnchors(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsAnchorLayout_addAnchors(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsLayoutItem* a0;
         ::QGraphicsLayoutItem* a1;
         ::Qt::Orientations a2def = Qt::Horizontal|Qt::Vertical;
         ::Qt::Orientations* a2 = &a2def;
        int a2State = 0;
         ::QGraphicsAnchorLayout *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_orientations,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ:J:|J1", &sipSelf, sipType_QGraphicsAnchorLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0, sipType_QGraphicsLayoutItem, &a1, sipType_Qt_Orientations, &a2, &a2State))
        {
            sipCpp->addAnchors(a0,a1,*a2);
            sipReleaseType(a2,sipType_Qt_Orientations,a2State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsAnchorLayout, sipName_addAnchors, doc_QGraphicsAnchorLayout_addAnchors);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsAnchorLayout_setHorizontalSpacing, "setHorizontalSpacing(self, float)");

extern "C" {static PyObject *meth_QGraphicsAnchorLayout_setHorizontalSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsAnchorLayout_setHorizontalSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsAnchorLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsAnchorLayout, &sipCpp, &a0))
        {
            sipCpp->setHorizontalSpacing(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsAnchorLayout, sipName_setHorizontalSpacing, doc_QGraphicsAnchorLayout_setHorizontalSpacing);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsAnchorLayout_setVerticalSpacing, "setVerticalSpacing(self, float)");

extern "C" {static PyObject *meth_QGraphicsAnchorLayout_setVerticalSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsAnchorLayout_setVerticalSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsAnchorLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsAnchorLayout, &sipCpp, &a0))
        {
            sipCpp->setVerticalSpacing(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsAnchorLayout, sipName_setVerticalSpacing, doc_QGraphicsAnchorLayout_setVerticalSpacing);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsAnchorLayout_setSpacing, "setSpacing(self, float)");

extern "C" {static PyObject *meth_QGraphicsAnchorLayout_setSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsAnchorLayout_setSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsAnchorLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsAnchorLayout, &sipCpp, &a0))
        {
            sipCpp->setSpacing(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsAnchorLayout, sipName_setSpacing, doc_QGraphicsAnchorLayout_setSpacing);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsAnchorLayout_horizontalSpacing, "horizontalSpacing(self) -> float");

extern "C" {static PyObject *meth_QGraphicsAnchorLayout_horizontalSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsAnchorLayout_horizontalSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsAnchorLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsAnchorLayout, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->horizontalSpacing();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsAnchorLayout, sipName_horizontalSpacing, doc_QGraphicsAnchorLayout_horizontalSpacing);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsAnchorLayout_verticalSpacing, "verticalSpacing(self) -> float");

extern "C" {static PyObject *meth_QGraphicsAnchorLayout_verticalSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsAnchorLayout_verticalSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsAnchorLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsAnchorLayout, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->verticalSpacing();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsAnchorLayout, sipName_verticalSpacing, doc_QGraphicsAnchorLayout_verticalSpacing);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsAnchorLayout_removeAt, "removeAt(self, int)");

extern "C" {static PyObject *meth_QGraphicsAnchorLayout_removeAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsAnchorLayout_removeAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int a0;
         ::QGraphicsAnchorLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsAnchorLayout, &sipCpp, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsAnchorLayout::removeAt(a0) : sipCpp->removeAt(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsAnchorLayout, sipName_removeAt, doc_QGraphicsAnchorLayout_removeAt);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsAnchorLayout_setGeometry, "setGeometry(self, QRectF)");

extern "C" {static PyObject *meth_QGraphicsAnchorLayout_setGeometry(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsAnchorLayout_setGeometry(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QRectF* a0;
         ::QGraphicsAnchorLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsAnchorLayout, &sipCpp, sipType_QRectF, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsAnchorLayout::setGeometry(*a0) : sipCpp->setGeometry(*a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsAnchorLayout, sipName_setGeometry, doc_QGraphicsAnchorLayout_setGeometry);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsAnchorLayout_count, "count(self) -> int");

extern "C" {static PyObject *meth_QGraphicsAnchorLayout_count(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsAnchorLayout_count(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsAnchorLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsAnchorLayout, &sipCpp))
        {
            int sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsAnchorLayout::count() : sipCpp->count());

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsAnchorLayout, sipName_count, doc_QGraphicsAnchorLayout_count);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsAnchorLayout_itemAt, "itemAt(self, int) -> QGraphicsLayoutItem");

extern "C" {static PyObject *meth_QGraphicsAnchorLayout_itemAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsAnchorLayout_itemAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int a0;
        const  ::QGraphicsAnchorLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsAnchorLayout, &sipCpp, &a0))
        {
             ::QGraphicsLayoutItem*sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsAnchorLayout::itemAt(a0) : sipCpp->itemAt(a0));

            return sipConvertFromType(sipRes,sipType_QGraphicsLayoutItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsAnchorLayout, sipName_itemAt, doc_QGraphicsAnchorLayout_itemAt);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsAnchorLayout_invalidate, "invalidate(self)");

extern "C" {static PyObject *meth_QGraphicsAnchorLayout_invalidate(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsAnchorLayout_invalidate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsAnchorLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsAnchorLayout, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsAnchorLayout::invalidate() : sipCpp->invalidate());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsAnchorLayout, sipName_invalidate, doc_QGraphicsAnchorLayout_invalidate);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsAnchorLayout_sizeHint, "sizeHint(self, Qt.SizeHint, constraint: QSizeF = QSizeF()) -> QSizeF");

extern "C" {static PyObject *meth_QGraphicsAnchorLayout_sizeHint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsAnchorLayout_sizeHint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::Qt::SizeHint a0;
        const  ::QSizeF& a1def = QSizeF();
        const  ::QSizeF* a1 = &a1def;
        const  ::QGraphicsAnchorLayout *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_constraint,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "pE|J9", &sipSelf, sipType_QGraphicsAnchorLayout, &sipCpp, sipType_Qt_SizeHint, &a0, sipType_QSizeF, &a1))
        {
             ::QSizeF*sipRes;

            sipRes = new  ::QSizeF((sipSelfWasArg ? sipCpp-> ::QGraphicsAnchorLayout::sizeHint(a0,*a1) : sipCpp->sizeHint(a0,*a1)));

            return sipConvertFromNewType(sipRes,sipType_QSizeF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsAnchorLayout, sipName_sizeHint, doc_QGraphicsAnchorLayout_sizeHint);

    return SIP_NULLPTR;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QGraphicsAnchorLayout(void *, const sipTypeDef *);}
static void *cast_QGraphicsAnchorLayout(void *sipCppV, const sipTypeDef *targetType)
{
     ::QGraphicsAnchorLayout *sipCpp = reinterpret_cast< ::QGraphicsAnchorLayout *>(sipCppV);

    if (targetType == sipType_QGraphicsLayout)
        return static_cast< ::QGraphicsLayout *>(sipCpp);

    if (targetType == sipType_QGraphicsLayoutItem)
        return static_cast< ::QGraphicsLayoutItem *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsAnchorLayout(void *, int);}
static void release_QGraphicsAnchorLayout(void *sipCppV, int sipState)
{
    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQGraphicsAnchorLayout *>(sipCppV);
    else
        delete reinterpret_cast< ::QGraphicsAnchorLayout *>(sipCppV);
}


extern "C" {static void *array_QGraphicsAnchorLayout(Py_ssize_t);}
static void *array_QGraphicsAnchorLayout(Py_ssize_t sipNrElem)
{
    return new  ::QGraphicsAnchorLayout[sipNrElem];
}


extern "C" {static void dealloc_QGraphicsAnchorLayout(sipSimpleWrapper *);}
static void dealloc_QGraphicsAnchorLayout(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQGraphicsAnchorLayout *>(sipGetAddress(sipSelf))->sipPySelf = SIP_NULLPTR;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QGraphicsAnchorLayout(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QGraphicsAnchorLayout(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QGraphicsAnchorLayout(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsAnchorLayout *sipCpp = SIP_NULLPTR;

    {
         ::QGraphicsLayoutItem* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QGraphicsLayoutItem, &a0, sipOwner))
        {
            sipCpp = new sipQGraphicsAnchorLayout(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QGraphicsAnchorLayout[] = {{130, 255, 1}};


static PyMethodDef methods_QGraphicsAnchorLayout[] = {
    {sipName_addAnchor, meth_QGraphicsAnchorLayout_addAnchor, METH_VARARGS, doc_QGraphicsAnchorLayout_addAnchor},
    {sipName_addAnchors, SIP_MLMETH_CAST(meth_QGraphicsAnchorLayout_addAnchors), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsAnchorLayout_addAnchors},
    {sipName_addCornerAnchors, meth_QGraphicsAnchorLayout_addCornerAnchors, METH_VARARGS, doc_QGraphicsAnchorLayout_addCornerAnchors},
    {sipName_anchor, meth_QGraphicsAnchorLayout_anchor, METH_VARARGS, doc_QGraphicsAnchorLayout_anchor},
    {sipName_count, meth_QGraphicsAnchorLayout_count, METH_VARARGS, doc_QGraphicsAnchorLayout_count},
    {sipName_horizontalSpacing, meth_QGraphicsAnchorLayout_horizontalSpacing, METH_VARARGS, doc_QGraphicsAnchorLayout_horizontalSpacing},
    {sipName_invalidate, meth_QGraphicsAnchorLayout_invalidate, METH_VARARGS, doc_QGraphicsAnchorLayout_invalidate},
    {sipName_itemAt, meth_QGraphicsAnchorLayout_itemAt, METH_VARARGS, doc_QGraphicsAnchorLayout_itemAt},
    {sipName_removeAt, meth_QGraphicsAnchorLayout_removeAt, METH_VARARGS, doc_QGraphicsAnchorLayout_removeAt},
    {sipName_setGeometry, meth_QGraphicsAnchorLayout_setGeometry, METH_VARARGS, doc_QGraphicsAnchorLayout_setGeometry},
    {sipName_setHorizontalSpacing, meth_QGraphicsAnchorLayout_setHorizontalSpacing, METH_VARARGS, doc_QGraphicsAnchorLayout_setHorizontalSpacing},
    {sipName_setSpacing, meth_QGraphicsAnchorLayout_setSpacing, METH_VARARGS, doc_QGraphicsAnchorLayout_setSpacing},
    {sipName_setVerticalSpacing, meth_QGraphicsAnchorLayout_setVerticalSpacing, METH_VARARGS, doc_QGraphicsAnchorLayout_setVerticalSpacing},
    {sipName_sizeHint, SIP_MLMETH_CAST(meth_QGraphicsAnchorLayout_sizeHint), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsAnchorLayout_sizeHint},
    {sipName_verticalSpacing, meth_QGraphicsAnchorLayout_verticalSpacing, METH_VARARGS, doc_QGraphicsAnchorLayout_verticalSpacing}
};

PyDoc_STRVAR(doc_QGraphicsAnchorLayout, "\1QGraphicsAnchorLayout(parent: QGraphicsLayoutItem = None)");


static pyqt5ClassPluginDef plugin_QGraphicsAnchorLayout = {
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtWidgets_QGraphicsAnchorLayout = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsAnchorLayout,
        SIP_NULLPTR,
        &plugin_QGraphicsAnchorLayout
    },
    {
        sipNameNr_QGraphicsAnchorLayout,
        {0, 0, 1},
        15, methods_QGraphicsAnchorLayout,
        0, SIP_NULLPTR,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QGraphicsAnchorLayout,
    -1,
    -1,
    supers_QGraphicsAnchorLayout,
    SIP_NULLPTR,
    init_type_QGraphicsAnchorLayout,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_QGraphicsAnchorLayout,
    SIP_NULLPTR,
    array_QGraphicsAnchorLayout,
    SIP_NULLPTR,
    release_QGraphicsAnchorLayout,
    cast_QGraphicsAnchorLayout,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
