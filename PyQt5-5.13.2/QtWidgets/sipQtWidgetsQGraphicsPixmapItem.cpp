/*
 * Interface wrapper code.
 *
 * Generated by SIP 5.3.0
 *
 * Copyright (c) 2019 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 520 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 29 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"

#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 33 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 26 "sip/QtGui/qpixmap.sip"
#include <qpixmap.h>
#line 36 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 26 "sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 39 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 26 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 42 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 1012 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qstyleoption.sip"
#include <qstyleoption.h>
#line 45 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 28 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 48 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 95 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 51 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 164 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 54 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 57 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 60 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 63 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicstransform.sip"
#include <qgraphicstransform.h>
#line 66 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 69 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 607 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 72 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 30 "sip/QtGui/qtransform.sip"
#include <qtransform.h>
#line 75 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 26 "sip/QtGui/qregion.sip"
#include <qregion.h>
#line 78 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 26 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 81 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 84 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicswidget.sip"
#include <qgraphicswidget.h>
#line 87 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 119 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 90 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 93 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 88 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 96 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 354 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 99 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 26 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 102 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 500 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 105 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 164 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 108 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 375 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 111 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 199 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 114 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 139 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 117 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 329 "sip/QtGui/qpolygon.sip"
#include <qpolygon.h>
#line 120 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 123 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 26 "sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 126 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 129 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 132 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 578 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 135 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 138 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsPixmapItem.cpp"


class sipQGraphicsPixmapItem : public  ::QGraphicsPixmapItem
{
public:
    sipQGraphicsPixmapItem( ::QGraphicsItem*);
    sipQGraphicsPixmapItem(const  ::QPixmap&, ::QGraphicsItem*);
    virtual ~sipQGraphicsPixmapItem();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void advance(int) SIP_OVERRIDE;
     ::QRectF boundingRect() const SIP_OVERRIDE;
     ::QPainterPath shape() const SIP_OVERRIDE;
    bool contains(const  ::QPointF&) const SIP_OVERRIDE;
    bool collidesWithItem(const  ::QGraphicsItem*, ::Qt::ItemSelectionMode) const SIP_OVERRIDE;
    bool collidesWithPath(const  ::QPainterPath&, ::Qt::ItemSelectionMode) const SIP_OVERRIDE;
    bool isObscuredBy(const  ::QGraphicsItem*) const SIP_OVERRIDE;
     ::QPainterPath opaqueArea() const SIP_OVERRIDE;
    void paint( ::QPainter*,const  ::QStyleOptionGraphicsItem*, ::QWidget*) SIP_OVERRIDE;
    int type() const SIP_OVERRIDE;
    void contextMenuEvent( ::QGraphicsSceneContextMenuEvent*) SIP_OVERRIDE;
    void dragEnterEvent( ::QGraphicsSceneDragDropEvent*) SIP_OVERRIDE;
    void dragLeaveEvent( ::QGraphicsSceneDragDropEvent*) SIP_OVERRIDE;
    void dragMoveEvent( ::QGraphicsSceneDragDropEvent*) SIP_OVERRIDE;
    void dropEvent( ::QGraphicsSceneDragDropEvent*) SIP_OVERRIDE;
    void focusInEvent( ::QFocusEvent*) SIP_OVERRIDE;
    void focusOutEvent( ::QFocusEvent*) SIP_OVERRIDE;
    void hoverEnterEvent( ::QGraphicsSceneHoverEvent*) SIP_OVERRIDE;
    void hoverLeaveEvent( ::QGraphicsSceneHoverEvent*) SIP_OVERRIDE;
    void hoverMoveEvent( ::QGraphicsSceneHoverEvent*) SIP_OVERRIDE;
    void inputMethodEvent( ::QInputMethodEvent*) SIP_OVERRIDE;
     ::QVariant inputMethodQuery( ::Qt::InputMethodQuery) const SIP_OVERRIDE;
     ::QVariant itemChange( ::QGraphicsItem::GraphicsItemChange,const  ::QVariant&) SIP_OVERRIDE;
    void keyPressEvent( ::QKeyEvent*) SIP_OVERRIDE;
    void keyReleaseEvent( ::QKeyEvent*) SIP_OVERRIDE;
    void mouseDoubleClickEvent( ::QGraphicsSceneMouseEvent*) SIP_OVERRIDE;
    void mouseMoveEvent( ::QGraphicsSceneMouseEvent*) SIP_OVERRIDE;
    void mousePressEvent( ::QGraphicsSceneMouseEvent*) SIP_OVERRIDE;
    void mouseReleaseEvent( ::QGraphicsSceneMouseEvent*) SIP_OVERRIDE;
    bool sceneEvent( ::QEvent*) SIP_OVERRIDE;
    bool sceneEventFilter( ::QGraphicsItem*, ::QEvent*) SIP_OVERRIDE;
    void wheelEvent( ::QGraphicsSceneWheelEvent*) SIP_OVERRIDE;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsPixmapItem(const sipQGraphicsPixmapItem &);
    sipQGraphicsPixmapItem &operator = (const sipQGraphicsPixmapItem &);

    char sipPyMethods[32];
};

sipQGraphicsPixmapItem::sipQGraphicsPixmapItem( ::QGraphicsItem*a0):  ::QGraphicsPixmapItem(a0), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsPixmapItem::sipQGraphicsPixmapItem(const  ::QPixmap& a0, ::QGraphicsItem*a1):  ::QGraphicsPixmapItem(a0,a1), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsPixmapItem::~sipQGraphicsPixmapItem()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

void sipQGraphicsPixmapItem::advance(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[0], &sipPySelf, SIP_NULLPTR, sipName_advance);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[0], sipPySelf, SIP_NULLPTR, sipName_advance);
#endif

    if (!sipMeth)
    {
         ::QGraphicsPixmapItem::advance(a0);
        return;
    }

    extern void sipVH_QtWidgets_59(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    sipVH_QtWidgets_59(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QRectF sipQGraphicsPixmapItem::boundingRect() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[1]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_boundingRect);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[1]), sipPySelf, SIP_NULLPTR, sipName_boundingRect);
#endif

    if (!sipMeth)
        return  ::QGraphicsPixmapItem::boundingRect();

    extern  ::QRectF sipVH_QtWidgets_144(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_144(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

 ::QPainterPath sipQGraphicsPixmapItem::shape() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[2]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_shape);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[2]), sipPySelf, SIP_NULLPTR, sipName_shape);
#endif

    if (!sipMeth)
        return  ::QGraphicsPixmapItem::shape();

    extern  ::QPainterPath sipVH_QtWidgets_145(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_145(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

bool sipQGraphicsPixmapItem::contains(const  ::QPointF& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[3]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_contains);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[3]), sipPySelf, SIP_NULLPTR, sipName_contains);
#endif

    if (!sipMeth)
        return  ::QGraphicsPixmapItem::contains(a0);

    extern bool sipVH_QtWidgets_146(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QPointF&);

    return sipVH_QtWidgets_146(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsPixmapItem::collidesWithItem(const  ::QGraphicsItem*a0, ::Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[4]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_collidesWithItem);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[4]), sipPySelf, SIP_NULLPTR, sipName_collidesWithItem);
#endif

    if (!sipMeth)
        return  ::QGraphicsPixmapItem::collidesWithItem(a0,a1);

    extern bool sipVH_QtWidgets_147(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QGraphicsItem*, ::Qt::ItemSelectionMode);

    return sipVH_QtWidgets_147(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsPixmapItem::collidesWithPath(const  ::QPainterPath& a0, ::Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[5]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_collidesWithPath);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[5]), sipPySelf, SIP_NULLPTR, sipName_collidesWithPath);
#endif

    if (!sipMeth)
        return  ::QGraphicsPixmapItem::collidesWithPath(a0,a1);

    extern bool sipVH_QtWidgets_148(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QPainterPath&, ::Qt::ItemSelectionMode);

    return sipVH_QtWidgets_148(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsPixmapItem::isObscuredBy(const  ::QGraphicsItem*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[6]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_isObscuredBy);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[6]), sipPySelf, SIP_NULLPTR, sipName_isObscuredBy);
#endif

    if (!sipMeth)
        return  ::QGraphicsPixmapItem::isObscuredBy(a0);

    extern bool sipVH_QtWidgets_149(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QGraphicsItem*);

    return sipVH_QtWidgets_149(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QPainterPath sipQGraphicsPixmapItem::opaqueArea() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[7]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_opaqueArea);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[7]), sipPySelf, SIP_NULLPTR, sipName_opaqueArea);
#endif

    if (!sipMeth)
        return  ::QGraphicsPixmapItem::opaqueArea();

    extern  ::QPainterPath sipVH_QtWidgets_145(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_145(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQGraphicsPixmapItem::paint( ::QPainter*a0,const  ::QStyleOptionGraphicsItem*a1, ::QWidget*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[8], &sipPySelf, SIP_NULLPTR, sipName_paint);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[8], sipPySelf, SIP_NULLPTR, sipName_paint);
#endif

    if (!sipMeth)
    {
         ::QGraphicsPixmapItem::paint(a0,a1,a2);
        return;
    }

    extern void sipVH_QtWidgets_150(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPainter*,const  ::QStyleOptionGraphicsItem*, ::QWidget*);

    sipVH_QtWidgets_150(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

int sipQGraphicsPixmapItem::type() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[9]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_type);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[9]), sipPySelf, SIP_NULLPTR, sipName_type);
#endif

    if (!sipMeth)
        return  ::QGraphicsPixmapItem::type();

    extern int sipVH_QtWidgets_8(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_8(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQGraphicsPixmapItem::contextMenuEvent( ::QGraphicsSceneContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[10], &sipPySelf, SIP_NULLPTR, sipName_contextMenuEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[10], sipPySelf, SIP_NULLPTR, sipName_contextMenuEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsPixmapItem::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_151(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneContextMenuEvent*);

    sipVH_QtWidgets_151(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPixmapItem::dragEnterEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[11], &sipPySelf, SIP_NULLPTR, sipName_dragEnterEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[11], sipPySelf, SIP_NULLPTR, sipName_dragEnterEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsPixmapItem::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPixmapItem::dragLeaveEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[12], &sipPySelf, SIP_NULLPTR, sipName_dragLeaveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[12], sipPySelf, SIP_NULLPTR, sipName_dragLeaveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsPixmapItem::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPixmapItem::dragMoveEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[13], &sipPySelf, SIP_NULLPTR, sipName_dragMoveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[13], sipPySelf, SIP_NULLPTR, sipName_dragMoveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsPixmapItem::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPixmapItem::dropEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[14], &sipPySelf, SIP_NULLPTR, sipName_dropEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[14], sipPySelf, SIP_NULLPTR, sipName_dropEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsPixmapItem::dropEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPixmapItem::focusInEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[15], &sipPySelf, SIP_NULLPTR, sipName_focusInEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[15], sipPySelf, SIP_NULLPTR, sipName_focusInEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsPixmapItem::focusInEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtWidgets_15(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPixmapItem::focusOutEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[16], &sipPySelf, SIP_NULLPTR, sipName_focusOutEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[16], sipPySelf, SIP_NULLPTR, sipName_focusOutEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsPixmapItem::focusOutEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtWidgets_15(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPixmapItem::hoverEnterEvent( ::QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[17], &sipPySelf, SIP_NULLPTR, sipName_hoverEnterEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[17], sipPySelf, SIP_NULLPTR, sipName_hoverEnterEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsPixmapItem::hoverEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_153(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_153(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPixmapItem::hoverLeaveEvent( ::QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[18], &sipPySelf, SIP_NULLPTR, sipName_hoverLeaveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[18], sipPySelf, SIP_NULLPTR, sipName_hoverLeaveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsPixmapItem::hoverLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_153(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_153(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPixmapItem::hoverMoveEvent( ::QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[19], &sipPySelf, SIP_NULLPTR, sipName_hoverMoveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[19], sipPySelf, SIP_NULLPTR, sipName_hoverMoveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsPixmapItem::hoverMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_153(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_153(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPixmapItem::inputMethodEvent( ::QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[20], &sipPySelf, SIP_NULLPTR, sipName_inputMethodEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[20], sipPySelf, SIP_NULLPTR, sipName_inputMethodEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsPixmapItem::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_29(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QInputMethodEvent*);

    sipVH_QtWidgets_29(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QVariant sipQGraphicsPixmapItem::inputMethodQuery( ::Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[21]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_inputMethodQuery);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[21]), sipPySelf, SIP_NULLPTR, sipName_inputMethodQuery);
#endif

    if (!sipMeth)
        return  ::QGraphicsPixmapItem::inputMethodQuery(a0);

    extern  ::QVariant sipVH_QtWidgets_30(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::Qt::InputMethodQuery);

    return sipVH_QtWidgets_30(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QVariant sipQGraphicsPixmapItem::itemChange( ::QGraphicsItem::GraphicsItemChange a0,const  ::QVariant& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[22], &sipPySelf, SIP_NULLPTR, sipName_itemChange);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[22], sipPySelf, SIP_NULLPTR, sipName_itemChange);
#endif

    if (!sipMeth)
        return  ::QGraphicsPixmapItem::itemChange(a0,a1);

    extern  ::QVariant sipVH_QtWidgets_154(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsItem::GraphicsItemChange,const  ::QVariant&);

    return sipVH_QtWidgets_154(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsPixmapItem::keyPressEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[23], &sipPySelf, SIP_NULLPTR, sipName_keyPressEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[23], sipPySelf, SIP_NULLPTR, sipName_keyPressEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsPixmapItem::keyPressEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtWidgets_14(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPixmapItem::keyReleaseEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[24], &sipPySelf, SIP_NULLPTR, sipName_keyReleaseEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[24], sipPySelf, SIP_NULLPTR, sipName_keyReleaseEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsPixmapItem::keyReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtWidgets_14(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPixmapItem::mouseDoubleClickEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[25], &sipPySelf, SIP_NULLPTR, sipName_mouseDoubleClickEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[25], sipPySelf, SIP_NULLPTR, sipName_mouseDoubleClickEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsPixmapItem::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPixmapItem::mouseMoveEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[26], &sipPySelf, SIP_NULLPTR, sipName_mouseMoveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[26], sipPySelf, SIP_NULLPTR, sipName_mouseMoveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsPixmapItem::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPixmapItem::mousePressEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[27], &sipPySelf, SIP_NULLPTR, sipName_mousePressEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[27], sipPySelf, SIP_NULLPTR, sipName_mousePressEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsPixmapItem::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsPixmapItem::mouseReleaseEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[28], &sipPySelf, SIP_NULLPTR, sipName_mouseReleaseEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[28], sipPySelf, SIP_NULLPTR, sipName_mouseReleaseEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsPixmapItem::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsPixmapItem::sceneEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[29], &sipPySelf, SIP_NULLPTR, sipName_sceneEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[29], sipPySelf, SIP_NULLPTR, sipName_sceneEvent);
#endif

    if (!sipMeth)
        return  ::QGraphicsPixmapItem::sceneEvent(a0);

    extern bool sipVH_QtWidgets_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtWidgets_5(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsPixmapItem::sceneEventFilter( ::QGraphicsItem*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[30], &sipPySelf, SIP_NULLPTR, sipName_sceneEventFilter);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[30], sipPySelf, SIP_NULLPTR, sipName_sceneEventFilter);
#endif

    if (!sipMeth)
        return  ::QGraphicsPixmapItem::sceneEventFilter(a0,a1);

    extern bool sipVH_QtWidgets_156(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsItem*, ::QEvent*);

    return sipVH_QtWidgets_156(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsPixmapItem::wheelEvent( ::QGraphicsSceneWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[31], &sipPySelf, SIP_NULLPTR, sipName_wheelEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[31], sipPySelf, SIP_NULLPTR, sipName_wheelEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsPixmapItem::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_157(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneWheelEvent*);

    sipVH_QtWidgets_157(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QGraphicsPixmapItem_pixmap, "pixmap(self) -> QPixmap");

extern "C" {static PyObject *meth_QGraphicsPixmapItem_pixmap(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPixmapItem_pixmap(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsPixmapItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsPixmapItem, &sipCpp))
        {
             ::QPixmap*sipRes;

            sipRes = new  ::QPixmap(sipCpp->pixmap());

            return sipConvertFromNewType(sipRes,sipType_QPixmap,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsPixmapItem, sipName_pixmap, doc_QGraphicsPixmapItem_pixmap);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsPixmapItem_setPixmap, "setPixmap(self, QPixmap)");

extern "C" {static PyObject *meth_QGraphicsPixmapItem_setPixmap(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPixmapItem_setPixmap(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QPixmap* a0;
         ::QGraphicsPixmapItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsPixmapItem, &sipCpp, sipType_QPixmap, &a0))
        {
            sipCpp->setPixmap(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsPixmapItem, sipName_setPixmap, doc_QGraphicsPixmapItem_setPixmap);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsPixmapItem_transformationMode, "transformationMode(self) -> Qt.TransformationMode");

extern "C" {static PyObject *meth_QGraphicsPixmapItem_transformationMode(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPixmapItem_transformationMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsPixmapItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsPixmapItem, &sipCpp))
        {
             ::Qt::TransformationMode sipRes;

            sipRes = sipCpp->transformationMode();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_Qt_TransformationMode);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsPixmapItem, sipName_transformationMode, doc_QGraphicsPixmapItem_transformationMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsPixmapItem_setTransformationMode, "setTransformationMode(self, Qt.TransformationMode)");

extern "C" {static PyObject *meth_QGraphicsPixmapItem_setTransformationMode(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPixmapItem_setTransformationMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::Qt::TransformationMode a0;
         ::QGraphicsPixmapItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsPixmapItem, &sipCpp, sipType_Qt_TransformationMode, &a0))
        {
            sipCpp->setTransformationMode(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsPixmapItem, sipName_setTransformationMode, doc_QGraphicsPixmapItem_setTransformationMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsPixmapItem_offset, "offset(self) -> QPointF");

extern "C" {static PyObject *meth_QGraphicsPixmapItem_offset(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPixmapItem_offset(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsPixmapItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsPixmapItem, &sipCpp))
        {
             ::QPointF*sipRes;

            sipRes = new  ::QPointF(sipCpp->offset());

            return sipConvertFromNewType(sipRes,sipType_QPointF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsPixmapItem, sipName_offset, doc_QGraphicsPixmapItem_offset);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsPixmapItem_setOffset, "setOffset(self, Union[QPointF, QPoint])\n"
"setOffset(self, float, float)");

extern "C" {static PyObject *meth_QGraphicsPixmapItem_setOffset(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPixmapItem_setOffset(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QPointF* a0;
        int a0State = 0;
         ::QGraphicsPixmapItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsPixmapItem, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
            sipCpp->setOffset(*a0);
            sipReleaseType(const_cast< ::QPointF *>(a0),sipType_QPointF,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::QGraphicsPixmapItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsPixmapItem, &sipCpp, &a0, &a1))
        {
            sipCpp->setOffset(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsPixmapItem, sipName_setOffset, doc_QGraphicsPixmapItem_setOffset);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsPixmapItem_boundingRect, "boundingRect(self) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsPixmapItem_boundingRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPixmapItem_boundingRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsPixmapItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsPixmapItem, &sipCpp))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF((sipSelfWasArg ? sipCpp-> ::QGraphicsPixmapItem::boundingRect() : sipCpp->boundingRect()));

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsPixmapItem, sipName_boundingRect, doc_QGraphicsPixmapItem_boundingRect);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsPixmapItem_shape, "shape(self) -> QPainterPath");

extern "C" {static PyObject *meth_QGraphicsPixmapItem_shape(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPixmapItem_shape(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsPixmapItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsPixmapItem, &sipCpp))
        {
             ::QPainterPath*sipRes;

            sipRes = new  ::QPainterPath((sipSelfWasArg ? sipCpp-> ::QGraphicsPixmapItem::shape() : sipCpp->shape()));

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsPixmapItem, sipName_shape, doc_QGraphicsPixmapItem_shape);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsPixmapItem_contains, "contains(self, Union[QPointF, QPoint]) -> bool");

extern "C" {static PyObject *meth_QGraphicsPixmapItem_contains(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPixmapItem_contains(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QPointF* a0;
        int a0State = 0;
        const  ::QGraphicsPixmapItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsPixmapItem, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsPixmapItem::contains(*a0) : sipCpp->contains(*a0));
            sipReleaseType(const_cast< ::QPointF *>(a0),sipType_QPointF,a0State);

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsPixmapItem, sipName_contains, doc_QGraphicsPixmapItem_contains);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsPixmapItem_paint, "paint(self, QPainter, QStyleOptionGraphicsItem, QWidget)");

extern "C" {static PyObject *meth_QGraphicsPixmapItem_paint(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPixmapItem_paint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QPainter* a0;
        const  ::QStyleOptionGraphicsItem* a1;
         ::QWidget* a2;
         ::QGraphicsPixmapItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J8J8", &sipSelf, sipType_QGraphicsPixmapItem, &sipCpp, sipType_QPainter, &a0, sipType_QStyleOptionGraphicsItem, &a1, sipType_QWidget, &a2))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsPixmapItem::paint(a0,a1,a2) : sipCpp->paint(a0,a1,a2));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsPixmapItem, sipName_paint, doc_QGraphicsPixmapItem_paint);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsPixmapItem_isObscuredBy, "isObscuredBy(self, QGraphicsItem) -> bool");

extern "C" {static PyObject *meth_QGraphicsPixmapItem_isObscuredBy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPixmapItem_isObscuredBy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsItem* a0;
        const  ::QGraphicsPixmapItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsPixmapItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsPixmapItem::isObscuredBy(a0) : sipCpp->isObscuredBy(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsPixmapItem, sipName_isObscuredBy, doc_QGraphicsPixmapItem_isObscuredBy);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsPixmapItem_opaqueArea, "opaqueArea(self) -> QPainterPath");

extern "C" {static PyObject *meth_QGraphicsPixmapItem_opaqueArea(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPixmapItem_opaqueArea(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsPixmapItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsPixmapItem, &sipCpp))
        {
             ::QPainterPath*sipRes;

            sipRes = new  ::QPainterPath((sipSelfWasArg ? sipCpp-> ::QGraphicsPixmapItem::opaqueArea() : sipCpp->opaqueArea()));

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsPixmapItem, sipName_opaqueArea, doc_QGraphicsPixmapItem_opaqueArea);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsPixmapItem_type, "type(self) -> int");

extern "C" {static PyObject *meth_QGraphicsPixmapItem_type(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPixmapItem_type(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsPixmapItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsPixmapItem, &sipCpp))
        {
            int sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsPixmapItem::type() : sipCpp->type());

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsPixmapItem, sipName_type, doc_QGraphicsPixmapItem_type);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsPixmapItem_shapeMode, "shapeMode(self) -> QGraphicsPixmapItem.ShapeMode");

extern "C" {static PyObject *meth_QGraphicsPixmapItem_shapeMode(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPixmapItem_shapeMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsPixmapItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsPixmapItem, &sipCpp))
        {
             ::QGraphicsPixmapItem::ShapeMode sipRes;

            sipRes = sipCpp->shapeMode();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QGraphicsPixmapItem_ShapeMode);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsPixmapItem, sipName_shapeMode, doc_QGraphicsPixmapItem_shapeMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsPixmapItem_setShapeMode, "setShapeMode(self, QGraphicsPixmapItem.ShapeMode)");

extern "C" {static PyObject *meth_QGraphicsPixmapItem_setShapeMode(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPixmapItem_setShapeMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsPixmapItem::ShapeMode a0;
         ::QGraphicsPixmapItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsPixmapItem, &sipCpp, sipType_QGraphicsPixmapItem_ShapeMode, &a0))
        {
            sipCpp->setShapeMode(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsPixmapItem, sipName_setShapeMode, doc_QGraphicsPixmapItem_setShapeMode);

    return SIP_NULLPTR;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QGraphicsPixmapItem(void *, const sipTypeDef *);}
static void *cast_QGraphicsPixmapItem(void *sipCppV, const sipTypeDef *targetType)
{
     ::QGraphicsPixmapItem *sipCpp = reinterpret_cast< ::QGraphicsPixmapItem *>(sipCppV);

    if (targetType == sipType_QGraphicsItem)
        return static_cast< ::QGraphicsItem *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsPixmapItem(void *, int);}
static void release_QGraphicsPixmapItem(void *sipCppV, int sipState)
{
    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQGraphicsPixmapItem *>(sipCppV);
    else
        delete reinterpret_cast< ::QGraphicsPixmapItem *>(sipCppV);
}


extern "C" {static void *array_QGraphicsPixmapItem(Py_ssize_t);}
static void *array_QGraphicsPixmapItem(Py_ssize_t sipNrElem)
{
    return new  ::QGraphicsPixmapItem[sipNrElem];
}


extern "C" {static void dealloc_QGraphicsPixmapItem(sipSimpleWrapper *);}
static void dealloc_QGraphicsPixmapItem(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQGraphicsPixmapItem *>(sipGetAddress(sipSelf))->sipPySelf = SIP_NULLPTR;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QGraphicsPixmapItem(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QGraphicsPixmapItem(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QGraphicsPixmapItem(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsPixmapItem *sipCpp = SIP_NULLPTR;

    {
         ::QGraphicsItem* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QGraphicsItem, &a0, sipOwner))
        {
            sipCpp = new sipQGraphicsPixmapItem(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        const  ::QPixmap* a0;
         ::QGraphicsItem* a1 = 0;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "J9|JH", sipType_QPixmap, &a0, sipType_QGraphicsItem, &a1, sipOwner))
        {
            sipCpp = new sipQGraphicsPixmapItem(*a0,a1);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QGraphicsPixmapItem[] = {{123, 255, 1}};


static PyMethodDef methods_QGraphicsPixmapItem[] = {
    {sipName_boundingRect, meth_QGraphicsPixmapItem_boundingRect, METH_VARARGS, doc_QGraphicsPixmapItem_boundingRect},
    {sipName_contains, meth_QGraphicsPixmapItem_contains, METH_VARARGS, doc_QGraphicsPixmapItem_contains},
    {sipName_isObscuredBy, meth_QGraphicsPixmapItem_isObscuredBy, METH_VARARGS, doc_QGraphicsPixmapItem_isObscuredBy},
    {sipName_offset, meth_QGraphicsPixmapItem_offset, METH_VARARGS, doc_QGraphicsPixmapItem_offset},
    {sipName_opaqueArea, meth_QGraphicsPixmapItem_opaqueArea, METH_VARARGS, doc_QGraphicsPixmapItem_opaqueArea},
    {sipName_paint, meth_QGraphicsPixmapItem_paint, METH_VARARGS, doc_QGraphicsPixmapItem_paint},
    {sipName_pixmap, meth_QGraphicsPixmapItem_pixmap, METH_VARARGS, doc_QGraphicsPixmapItem_pixmap},
    {sipName_setOffset, meth_QGraphicsPixmapItem_setOffset, METH_VARARGS, doc_QGraphicsPixmapItem_setOffset},
    {sipName_setPixmap, meth_QGraphicsPixmapItem_setPixmap, METH_VARARGS, doc_QGraphicsPixmapItem_setPixmap},
    {sipName_setShapeMode, meth_QGraphicsPixmapItem_setShapeMode, METH_VARARGS, doc_QGraphicsPixmapItem_setShapeMode},
    {sipName_setTransformationMode, meth_QGraphicsPixmapItem_setTransformationMode, METH_VARARGS, doc_QGraphicsPixmapItem_setTransformationMode},
    {sipName_shape, meth_QGraphicsPixmapItem_shape, METH_VARARGS, doc_QGraphicsPixmapItem_shape},
    {sipName_shapeMode, meth_QGraphicsPixmapItem_shapeMode, METH_VARARGS, doc_QGraphicsPixmapItem_shapeMode},
    {sipName_transformationMode, meth_QGraphicsPixmapItem_transformationMode, METH_VARARGS, doc_QGraphicsPixmapItem_transformationMode},
    {sipName_type, meth_QGraphicsPixmapItem_type, METH_VARARGS, doc_QGraphicsPixmapItem_type}
};

static sipEnumMemberDef enummembers_QGraphicsPixmapItem[] = {
    {sipName_BoundingRectShape, static_cast<int>( ::QGraphicsPixmapItem::BoundingRectShape), 138},
    {sipName_HeuristicMaskShape, static_cast<int>( ::QGraphicsPixmapItem::HeuristicMaskShape), 138},
    {sipName_MaskShape, static_cast<int>( ::QGraphicsPixmapItem::MaskShape), 138},
};

PyDoc_STRVAR(doc_QGraphicsPixmapItem, "\1QGraphicsPixmapItem(parent: QGraphicsItem = None)\n"
"QGraphicsPixmapItem(QPixmap, parent: QGraphicsItem = None)");


static pyqt5ClassPluginDef plugin_QGraphicsPixmapItem = {
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtWidgets_QGraphicsPixmapItem = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsPixmapItem,
        SIP_NULLPTR,
        &plugin_QGraphicsPixmapItem
    },
    {
        sipNameNr_QGraphicsPixmapItem,
        {0, 0, 1},
        15, methods_QGraphicsPixmapItem,
        3, enummembers_QGraphicsPixmapItem,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QGraphicsPixmapItem,
    -1,
    -1,
    supers_QGraphicsPixmapItem,
    SIP_NULLPTR,
    init_type_QGraphicsPixmapItem,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_QGraphicsPixmapItem,
    SIP_NULLPTR,
    array_QGraphicsPixmapItem,
    SIP_NULLPTR,
    release_QGraphicsPixmapItem,
    cast_QGraphicsPixmapItem,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
