/*
 * Interface wrapper code.
 *
 * Generated by SIP 5.3.0
 *
 * Copyright (c) 2019 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qabstractitemview.sip"
#include <qabstractitemview.h>
#line 29 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"

#line 28 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 33 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qabstractitemmodel.sip"
#include <qabstractitemmodel.h>
#line 36 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 39 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 28 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 42 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 45 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 48 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 500 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 51 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 54 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qabstractitemdelegate.sip"
#include <qabstractitemdelegate.h>
#line 57 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 235 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 60 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 416 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 63 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 354 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 66 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 375 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 69 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 561 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 72 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 610 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 75 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 583 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 78 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 599 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 81 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 205 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 84 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 87 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtGui/qregion.sip"
#include <qregion.h>
#line 90 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 560 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qstyleoption.sip"
#include <qstyleoption.h>
#line 93 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 96 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 67 "sip/QtCore/qitemselectionmodel.sip"
#include <qitemselectionmodel.h>
#line 99 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 102 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 147 "sip/QtCore/qitemselectionmodel.sip"
#include <qitemselectionmodel.h>
#line 105 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 108 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 111 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 328 "sip/QtCore/qpycore_qvector.sip"
#include <qvector.h>
#line 114 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 117 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qabstractitemview.sip"
#include <qabstractitemview.h>
#line 120 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 67 "sip/QtCore/qitemselectionmodel.sip"
#include <qitemselectionmodel.h>
#line 123 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 111 "sip/QtCore/qabstractitemmodel.sip"
#include <qabstractitemmodel.h>
#line 126 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qabstractscrollarea.sip"
#include <qabstractscrollarea.h>
#line 129 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 132 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 135 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qscrollbar.sip"
#include <qscrollbar.h>
#line 138 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 473 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 141 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 253 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 144 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 389 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 147 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qmargins.sip"
#include <qmargins.h>
#line 150 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 208 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qstyleoption.sip"
#include <qstyleoption.h>
#line 153 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 156 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qframe.sip"
#include <qframe.h>
#line 159 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtGui/qicon.sip"
#include <qicon.h>
#line 162 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 30 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 165 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtGui/qwindow.sip"
#include <qwindow.h>
#line 168 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 171 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtGui/qpixmap.sip"
#include <qpixmap.h>
#line 174 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 177 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 180 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 183 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsproxywidget.sip"
#include <qgraphicsproxywidget.h>
#line 186 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 189 "sip/QtCore/qglobal.sip"
#include <QtGlobal>
#line 189 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qlocale.sip"
#include <qlocale.h>
#line 192 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtGui/qpaintdevice.sip"
#include <qpaintdevice.h>
#line 195 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 28 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 198 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtGui/qfontinfo.sip"
#include <qfontinfo.h>
#line 201 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtGui/qfontmetrics.sip"
#include <qfontmetrics.h>
#line 204 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtGui/qfont.sip"
#include <qfont.h>
#line 207 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 462 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 210 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 451 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 213 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 666 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 216 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 296 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 219 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 429 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 222 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 403 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 225 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 52 "sip/QtGui/qpaintengine.sip"
#include <qpaintengine.h>
#line 228 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 231 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qaction.sip"
#include <qaction.h>
#line 234 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qlayout.sip"
#include <qlayout.h>
#line 237 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 240 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 243 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtGui/qkeysequence.sip"
#include <qkeysequence.h>
#line 246 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 249 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtGui/qbitmap.sip"
#include <qbitmap.h>
#line 252 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtGui/qpalette.sip"
#include <qpalette.h>
#line 255 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qstyle.sip"
#include <qstyle.h>
#line 258 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 146 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 263 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 266 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 247 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 269 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 272 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 275 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 278 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 281 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 284 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 287 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 290 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"


class sipQAbstractItemView : public  ::QAbstractItemView
{
public:
    sipQAbstractItemView( ::QWidget*);
    virtual ~sipQAbstractItemView();

    int qt_metacall(QMetaObject::Call, int, void **) SIP_OVERRIDE;
    void *qt_metacast(const char *) SIP_OVERRIDE;
    const QMetaObject *metaObject() const SIP_OVERRIDE;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
     ::QStyleOptionViewItem viewOptions() const SIP_OVERRIDE;
    void startDrag( ::Qt::DropActions) SIP_OVERRIDE;
     ::QItemSelectionModel::SelectionFlags selectionCommand(const  ::QModelIndex&,const  ::QEvent*) const SIP_OVERRIDE;
    bool edit(const  ::QModelIndex&, ::QAbstractItemView::EditTrigger, ::QEvent*) SIP_OVERRIDE;
     ::QModelIndexList selectedIndexes() const SIP_OVERRIDE;
     ::QRegion visualRegionForSelection(const  ::QItemSelection&) const SIP_OVERRIDE;
    void setSelection(const  ::QRect&, ::QItemSelectionModel::SelectionFlags) SIP_OVERRIDE;
    bool isIndexHidden(const  ::QModelIndex&) const SIP_OVERRIDE;
    int verticalOffset() const SIP_OVERRIDE;
    int horizontalOffset() const SIP_OVERRIDE;
     ::QModelIndex moveCursor( ::QAbstractItemView::CursorAction, ::Qt::KeyboardModifiers) SIP_OVERRIDE;
    void editorDestroyed( ::QObject*) SIP_OVERRIDE;
    void commitData( ::QWidget*) SIP_OVERRIDE;
    void closeEditor( ::QWidget*, ::QAbstractItemDelegate::EndEditHint) SIP_OVERRIDE;
    void horizontalScrollbarValueChanged(int) SIP_OVERRIDE;
    void verticalScrollbarValueChanged(int) SIP_OVERRIDE;
    void horizontalScrollbarAction(int) SIP_OVERRIDE;
    void verticalScrollbarAction(int) SIP_OVERRIDE;
    void updateGeometries() SIP_OVERRIDE;
    void updateEditorGeometries() SIP_OVERRIDE;
    void updateEditorData() SIP_OVERRIDE;
    void currentChanged(const  ::QModelIndex&,const  ::QModelIndex&) SIP_OVERRIDE;
    void selectionChanged(const  ::QItemSelection&,const  ::QItemSelection&) SIP_OVERRIDE;
    void rowsAboutToBeRemoved(const  ::QModelIndex&,int,int) SIP_OVERRIDE;
    void rowsInserted(const  ::QModelIndex&,int,int) SIP_OVERRIDE;
    void dataChanged(const  ::QModelIndex&,const  ::QModelIndex&,const  ::QVector<int>&) SIP_OVERRIDE;
    void selectAll() SIP_OVERRIDE;
    void setRootIndex(const  ::QModelIndex&) SIP_OVERRIDE;
    void reset() SIP_OVERRIDE;
    int sizeHintForColumn(int) const SIP_OVERRIDE;
    int sizeHintForRow(int) const SIP_OVERRIDE;
     ::QModelIndex indexAt(const  ::QPoint&) const SIP_OVERRIDE;
    void scrollTo(const  ::QModelIndex&, ::QAbstractItemView::ScrollHint) SIP_OVERRIDE;
     ::QRect visualRect(const  ::QModelIndex&) const SIP_OVERRIDE;
    void keyboardSearch(const  ::QString&) SIP_OVERRIDE;
    void setSelectionModel( ::QItemSelectionModel*) SIP_OVERRIDE;
    void setModel( ::QAbstractItemModel*) SIP_OVERRIDE;
    void disconnectNotify(const  ::QMetaMethod&) SIP_OVERRIDE;
    void connectNotify(const  ::QMetaMethod&) SIP_OVERRIDE;
    void customEvent( ::QEvent*) SIP_OVERRIDE;
    void childEvent( ::QChildEvent*) SIP_OVERRIDE;
    void timerEvent( ::QTimerEvent*) SIP_OVERRIDE;
    bool eventFilter( ::QObject*, ::QEvent*) SIP_OVERRIDE;
    bool event( ::QEvent*) SIP_OVERRIDE;
    int metric( ::QPaintDevice::PaintDeviceMetric) const SIP_OVERRIDE;
     ::QPaintEngine* paintEngine() const SIP_OVERRIDE;
    int devType() const SIP_OVERRIDE;
    void setVisible(bool) SIP_OVERRIDE;
     ::QSize sizeHint() const SIP_OVERRIDE;
     ::QSize minimumSizeHint() const SIP_OVERRIDE;
    int heightForWidth(int) const SIP_OVERRIDE;
    void mousePressEvent( ::QMouseEvent*) SIP_OVERRIDE;
    void mouseReleaseEvent( ::QMouseEvent*) SIP_OVERRIDE;
    void mouseDoubleClickEvent( ::QMouseEvent*) SIP_OVERRIDE;
    void mouseMoveEvent( ::QMouseEvent*) SIP_OVERRIDE;
    void wheelEvent( ::QWheelEvent*) SIP_OVERRIDE;
    void keyPressEvent( ::QKeyEvent*) SIP_OVERRIDE;
    void keyReleaseEvent( ::QKeyEvent*) SIP_OVERRIDE;
    void focusInEvent( ::QFocusEvent*) SIP_OVERRIDE;
    void focusOutEvent( ::QFocusEvent*) SIP_OVERRIDE;
    void enterEvent( ::QEvent*) SIP_OVERRIDE;
    void leaveEvent( ::QEvent*) SIP_OVERRIDE;
    void paintEvent( ::QPaintEvent*) SIP_OVERRIDE;
    void moveEvent( ::QMoveEvent*) SIP_OVERRIDE;
    void resizeEvent( ::QResizeEvent*) SIP_OVERRIDE;
    void closeEvent( ::QCloseEvent*) SIP_OVERRIDE;
    void contextMenuEvent( ::QContextMenuEvent*) SIP_OVERRIDE;
    void tabletEvent( ::QTabletEvent*) SIP_OVERRIDE;
    void actionEvent( ::QActionEvent*) SIP_OVERRIDE;
    void dragEnterEvent( ::QDragEnterEvent*) SIP_OVERRIDE;
    void dragMoveEvent( ::QDragMoveEvent*) SIP_OVERRIDE;
    void dragLeaveEvent( ::QDragLeaveEvent*) SIP_OVERRIDE;
    void dropEvent( ::QDropEvent*) SIP_OVERRIDE;
    void showEvent( ::QShowEvent*) SIP_OVERRIDE;
    void hideEvent( ::QHideEvent*) SIP_OVERRIDE;
    void changeEvent( ::QEvent*) SIP_OVERRIDE;
    void inputMethodEvent( ::QInputMethodEvent*) SIP_OVERRIDE;
     ::QVariant inputMethodQuery( ::Qt::InputMethodQuery) const SIP_OVERRIDE;
    bool focusNextPrevChild(bool) SIP_OVERRIDE;
    bool hasHeightForWidth() const SIP_OVERRIDE;
    bool nativeEvent(const  ::QByteArray&,void*,long*) SIP_OVERRIDE;
     ::QPainter* sharedPainter() const SIP_OVERRIDE;
    void initPainter( ::QPainter*) const SIP_OVERRIDE;
     ::QSize viewportSizeHint() const SIP_OVERRIDE;
    bool viewportEvent( ::QEvent*) SIP_OVERRIDE;
    void scrollContentsBy(int,int) SIP_OVERRIDE;
    void setupViewport( ::QWidget*) SIP_OVERRIDE;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQAbstractItemView(const sipQAbstractItemView &);
    sipQAbstractItemView &operator = (const sipQAbstractItemView &);

    char sipPyMethods[87];
};

sipQAbstractItemView::sipQAbstractItemView( ::QWidget*a0):  ::QAbstractItemView(a0), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQAbstractItemView::~sipQAbstractItemView()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

const QMetaObject *sipQAbstractItemView::metaObject() const
{
    if (sipGetInterpreter())
        return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_QtWidgets_qt_metaobject(sipPySelf,sipType_QAbstractItemView);

    return  ::QAbstractItemView::metaObject();
}

int sipQAbstractItemView::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id =  ::QAbstractItemView::qt_metacall(_c,_id,_a);

    if (_id >= 0)
    {
        SIP_BLOCK_THREADS
        _id = sip_QtWidgets_qt_metacall(sipPySelf,sipType_QAbstractItemView,_c,_id,_a);
        SIP_UNBLOCK_THREADS
    }

    return _id;
}

void *sipQAbstractItemView::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_QtWidgets_qt_metacast(sipPySelf, sipType_QAbstractItemView, _clname, &sipCpp) ? sipCpp :  ::QAbstractItemView::qt_metacast(_clname));
}

 ::QStyleOptionViewItem sipQAbstractItemView::viewOptions() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[0]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_viewOptions);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[0]), sipPySelf, SIP_NULLPTR, sipName_viewOptions);
#endif

    if (!sipMeth)
        return  ::QAbstractItemView::viewOptions();

    extern  ::QStyleOptionViewItem sipVH_QtWidgets_70(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_70(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQAbstractItemView::startDrag( ::Qt::DropActions a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[1], &sipPySelf, SIP_NULLPTR, sipName_startDrag);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[1], sipPySelf, SIP_NULLPTR, sipName_startDrag);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::startDrag(a0);
        return;
    }

    extern void sipVH_QtWidgets_69(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::Qt::DropActions);

    sipVH_QtWidgets_69(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QItemSelectionModel::SelectionFlags sipQAbstractItemView::selectionCommand(const  ::QModelIndex& a0,const  ::QEvent*a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[2]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_selectionCommand);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[2]), sipPySelf, SIP_NULLPTR, sipName_selectionCommand);
#endif

    if (!sipMeth)
        return  ::QAbstractItemView::selectionCommand(a0,a1);

    extern  ::QItemSelectionModel::SelectionFlags sipVH_QtWidgets_68(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&,const  ::QEvent*);

    return sipVH_QtWidgets_68(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQAbstractItemView::edit(const  ::QModelIndex& a0, ::QAbstractItemView::EditTrigger a1, ::QEvent*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[3], &sipPySelf, SIP_NULLPTR, sipName_edit);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[3], sipPySelf, SIP_NULLPTR, sipName_edit);
#endif

    if (!sipMeth)
        return  ::QAbstractItemView::edit(a0,a1,a2);

    extern bool sipVH_QtWidgets_67(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&, ::QAbstractItemView::EditTrigger, ::QEvent*);

    return sipVH_QtWidgets_67(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

 ::QModelIndexList sipQAbstractItemView::selectedIndexes() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[4]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_selectedIndexes);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[4]), sipPySelf, SIP_NULLPTR, sipName_selectedIndexes);
#endif

    if (!sipMeth)
        return  ::QAbstractItemView::selectedIndexes();

    extern  ::QModelIndexList sipVH_QtWidgets_66(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_66(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

 ::QRegion sipQAbstractItemView::visualRegionForSelection(const  ::QItemSelection& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[5]), const_cast<sipSimpleWrapper **>(&sipPySelf), sipName_QAbstractItemView, sipName_visualRegionForSelection);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[5]), sipPySelf, sipName_QAbstractItemView, sipName_visualRegionForSelection);
#endif

    if (!sipMeth)
        return  ::QRegion();

    extern  ::QRegion sipVH_QtWidgets_65(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QItemSelection&);

    return sipVH_QtWidgets_65(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::setSelection(const  ::QRect& a0, ::QItemSelectionModel::SelectionFlags a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[6], &sipPySelf, sipName_QAbstractItemView, sipName_setSelection);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[6], sipPySelf, sipName_QAbstractItemView, sipName_setSelection);
#endif

    if (!sipMeth)
        return;

    extern void sipVH_QtWidgets_64(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QRect&, ::QItemSelectionModel::SelectionFlags);

    sipVH_QtWidgets_64(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQAbstractItemView::isIndexHidden(const  ::QModelIndex& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[7]), const_cast<sipSimpleWrapper **>(&sipPySelf), sipName_QAbstractItemView, sipName_isIndexHidden);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[7]), sipPySelf, sipName_QAbstractItemView, sipName_isIndexHidden);
#endif

    if (!sipMeth)
        return 0;

    extern bool sipVH_QtWidgets_63(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&);

    return sipVH_QtWidgets_63(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

int sipQAbstractItemView::verticalOffset() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[8]), const_cast<sipSimpleWrapper **>(&sipPySelf), sipName_QAbstractItemView, sipName_verticalOffset);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[8]), sipPySelf, sipName_QAbstractItemView, sipName_verticalOffset);
#endif

    if (!sipMeth)
        return 0;

    extern int sipVH_QtWidgets_8(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_8(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

int sipQAbstractItemView::horizontalOffset() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[9]), const_cast<sipSimpleWrapper **>(&sipPySelf), sipName_QAbstractItemView, sipName_horizontalOffset);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[9]), sipPySelf, sipName_QAbstractItemView, sipName_horizontalOffset);
#endif

    if (!sipMeth)
        return 0;

    extern int sipVH_QtWidgets_8(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_8(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

 ::QModelIndex sipQAbstractItemView::moveCursor( ::QAbstractItemView::CursorAction a0, ::Qt::KeyboardModifiers a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[10], &sipPySelf, sipName_QAbstractItemView, sipName_moveCursor);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[10], sipPySelf, sipName_QAbstractItemView, sipName_moveCursor);
#endif

    if (!sipMeth)
        return  ::QModelIndex();

    extern  ::QModelIndex sipVH_QtWidgets_62(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QAbstractItemView::CursorAction, ::Qt::KeyboardModifiers);

    return sipVH_QtWidgets_62(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQAbstractItemView::editorDestroyed( ::QObject*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[11], &sipPySelf, SIP_NULLPTR, sipName_editorDestroyed);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[11], sipPySelf, SIP_NULLPTR, sipName_editorDestroyed);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::editorDestroyed(a0);
        return;
    }

    extern void sipVH_QtWidgets_61(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QObject*);

    sipVH_QtWidgets_61(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::commitData( ::QWidget*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[12], &sipPySelf, SIP_NULLPTR, sipName_commitData);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[12], sipPySelf, SIP_NULLPTR, sipName_commitData);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::commitData(a0);
        return;
    }

    extern void sipVH_QtWidgets_47(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QWidget*);

    sipVH_QtWidgets_47(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::closeEditor( ::QWidget*a0, ::QAbstractItemDelegate::EndEditHint a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[13], &sipPySelf, SIP_NULLPTR, sipName_closeEditor);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[13], sipPySelf, SIP_NULLPTR, sipName_closeEditor);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::closeEditor(a0,a1);
        return;
    }

    extern void sipVH_QtWidgets_60(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QWidget*, ::QAbstractItemDelegate::EndEditHint);

    sipVH_QtWidgets_60(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQAbstractItemView::horizontalScrollbarValueChanged(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[14], &sipPySelf, SIP_NULLPTR, sipName_horizontalScrollbarValueChanged);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[14], sipPySelf, SIP_NULLPTR, sipName_horizontalScrollbarValueChanged);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::horizontalScrollbarValueChanged(a0);
        return;
    }

    extern void sipVH_QtWidgets_59(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    sipVH_QtWidgets_59(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::verticalScrollbarValueChanged(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[15], &sipPySelf, SIP_NULLPTR, sipName_verticalScrollbarValueChanged);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[15], sipPySelf, SIP_NULLPTR, sipName_verticalScrollbarValueChanged);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::verticalScrollbarValueChanged(a0);
        return;
    }

    extern void sipVH_QtWidgets_59(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    sipVH_QtWidgets_59(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::horizontalScrollbarAction(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[16], &sipPySelf, SIP_NULLPTR, sipName_horizontalScrollbarAction);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[16], sipPySelf, SIP_NULLPTR, sipName_horizontalScrollbarAction);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::horizontalScrollbarAction(a0);
        return;
    }

    extern void sipVH_QtWidgets_59(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    sipVH_QtWidgets_59(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::verticalScrollbarAction(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[17], &sipPySelf, SIP_NULLPTR, sipName_verticalScrollbarAction);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[17], sipPySelf, SIP_NULLPTR, sipName_verticalScrollbarAction);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::verticalScrollbarAction(a0);
        return;
    }

    extern void sipVH_QtWidgets_59(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    sipVH_QtWidgets_59(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::updateGeometries()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[18], &sipPySelf, SIP_NULLPTR, sipName_updateGeometries);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[18], sipPySelf, SIP_NULLPTR, sipName_updateGeometries);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::updateGeometries();
        return;
    }

    extern void sipVH_QtWidgets_37(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_QtWidgets_37(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQAbstractItemView::updateEditorGeometries()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[19], &sipPySelf, SIP_NULLPTR, sipName_updateEditorGeometries);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[19], sipPySelf, SIP_NULLPTR, sipName_updateEditorGeometries);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::updateEditorGeometries();
        return;
    }

    extern void sipVH_QtWidgets_37(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_QtWidgets_37(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQAbstractItemView::updateEditorData()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[20], &sipPySelf, SIP_NULLPTR, sipName_updateEditorData);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[20], sipPySelf, SIP_NULLPTR, sipName_updateEditorData);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::updateEditorData();
        return;
    }

    extern void sipVH_QtWidgets_37(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_QtWidgets_37(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQAbstractItemView::currentChanged(const  ::QModelIndex& a0,const  ::QModelIndex& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[21], &sipPySelf, SIP_NULLPTR, sipName_currentChanged);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[21], sipPySelf, SIP_NULLPTR, sipName_currentChanged);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::currentChanged(a0,a1);
        return;
    }

    extern void sipVH_QtWidgets_58(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&,const  ::QModelIndex&);

    sipVH_QtWidgets_58(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQAbstractItemView::selectionChanged(const  ::QItemSelection& a0,const  ::QItemSelection& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[22], &sipPySelf, SIP_NULLPTR, sipName_selectionChanged);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[22], sipPySelf, SIP_NULLPTR, sipName_selectionChanged);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::selectionChanged(a0,a1);
        return;
    }

    extern void sipVH_QtWidgets_57(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QItemSelection&,const  ::QItemSelection&);

    sipVH_QtWidgets_57(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQAbstractItemView::rowsAboutToBeRemoved(const  ::QModelIndex& a0,int a1,int a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[23], &sipPySelf, SIP_NULLPTR, sipName_rowsAboutToBeRemoved);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[23], sipPySelf, SIP_NULLPTR, sipName_rowsAboutToBeRemoved);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::rowsAboutToBeRemoved(a0,a1,a2);
        return;
    }

    extern void sipVH_QtWidgets_56(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&,int,int);

    sipVH_QtWidgets_56(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

void sipQAbstractItemView::rowsInserted(const  ::QModelIndex& a0,int a1,int a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[24], &sipPySelf, SIP_NULLPTR, sipName_rowsInserted);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[24], sipPySelf, SIP_NULLPTR, sipName_rowsInserted);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::rowsInserted(a0,a1,a2);
        return;
    }

    extern void sipVH_QtWidgets_56(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&,int,int);

    sipVH_QtWidgets_56(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

void sipQAbstractItemView::dataChanged(const  ::QModelIndex& a0,const  ::QModelIndex& a1,const  ::QVector<int>& a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[25], &sipPySelf, SIP_NULLPTR, sipName_dataChanged);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[25], sipPySelf, SIP_NULLPTR, sipName_dataChanged);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::dataChanged(a0,a1,a2);
        return;
    }

    extern void sipVH_QtWidgets_55(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&,const  ::QModelIndex&,const  ::QVector<int>&);

    sipVH_QtWidgets_55(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

void sipQAbstractItemView::selectAll()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[26], &sipPySelf, SIP_NULLPTR, sipName_selectAll);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[26], sipPySelf, SIP_NULLPTR, sipName_selectAll);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::selectAll();
        return;
    }

    extern void sipVH_QtWidgets_37(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_QtWidgets_37(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQAbstractItemView::setRootIndex(const  ::QModelIndex& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[27], &sipPySelf, SIP_NULLPTR, sipName_setRootIndex);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[27], sipPySelf, SIP_NULLPTR, sipName_setRootIndex);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::setRootIndex(a0);
        return;
    }

    extern void sipVH_QtWidgets_54(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&);

    sipVH_QtWidgets_54(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::reset()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[28], &sipPySelf, SIP_NULLPTR, sipName_reset);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[28], sipPySelf, SIP_NULLPTR, sipName_reset);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::reset();
        return;
    }

    extern void sipVH_QtWidgets_37(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_QtWidgets_37(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

int sipQAbstractItemView::sizeHintForColumn(int a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[29]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_sizeHintForColumn);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[29]), sipPySelf, SIP_NULLPTR, sipName_sizeHintForColumn);
#endif

    if (!sipMeth)
        return  ::QAbstractItemView::sizeHintForColumn(a0);

    extern int sipVH_QtWidgets_11(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    return sipVH_QtWidgets_11(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

int sipQAbstractItemView::sizeHintForRow(int a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[30]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_sizeHintForRow);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[30]), sipPySelf, SIP_NULLPTR, sipName_sizeHintForRow);
#endif

    if (!sipMeth)
        return  ::QAbstractItemView::sizeHintForRow(a0);

    extern int sipVH_QtWidgets_11(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    return sipVH_QtWidgets_11(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QModelIndex sipQAbstractItemView::indexAt(const  ::QPoint& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[31]), const_cast<sipSimpleWrapper **>(&sipPySelf), sipName_QAbstractItemView, sipName_indexAt);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[31]), sipPySelf, sipName_QAbstractItemView, sipName_indexAt);
#endif

    if (!sipMeth)
        return  ::QModelIndex();

    extern  ::QModelIndex sipVH_QtWidgets_53(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QPoint&);

    return sipVH_QtWidgets_53(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::scrollTo(const  ::QModelIndex& a0, ::QAbstractItemView::ScrollHint a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[32], &sipPySelf, sipName_QAbstractItemView, sipName_scrollTo);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[32], sipPySelf, sipName_QAbstractItemView, sipName_scrollTo);
#endif

    if (!sipMeth)
        return;

    extern void sipVH_QtWidgets_52(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&, ::QAbstractItemView::ScrollHint);

    sipVH_QtWidgets_52(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

 ::QRect sipQAbstractItemView::visualRect(const  ::QModelIndex& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[33]), const_cast<sipSimpleWrapper **>(&sipPySelf), sipName_QAbstractItemView, sipName_visualRect);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[33]), sipPySelf, sipName_QAbstractItemView, sipName_visualRect);
#endif

    if (!sipMeth)
        return  ::QRect();

    extern  ::QRect sipVH_QtWidgets_51(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&);

    return sipVH_QtWidgets_51(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::keyboardSearch(const  ::QString& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[34], &sipPySelf, SIP_NULLPTR, sipName_keyboardSearch);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[34], sipPySelf, SIP_NULLPTR, sipName_keyboardSearch);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::keyboardSearch(a0);
        return;
    }

    extern void sipVH_QtWidgets_50(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QString&);

    sipVH_QtWidgets_50(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::setSelectionModel( ::QItemSelectionModel*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[35], &sipPySelf, SIP_NULLPTR, sipName_setSelectionModel);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[35], sipPySelf, SIP_NULLPTR, sipName_setSelectionModel);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::setSelectionModel(a0);
        return;
    }

    extern void sipVH_QtWidgets_49(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QItemSelectionModel*);

    sipVH_QtWidgets_49(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::setModel( ::QAbstractItemModel*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[36], &sipPySelf, SIP_NULLPTR, sipName_setModel);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[36], sipPySelf, SIP_NULLPTR, sipName_setModel);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::setModel(a0);
        return;
    }

    extern void sipVH_QtWidgets_48(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QAbstractItemModel*);

    sipVH_QtWidgets_48(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::disconnectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[37], &sipPySelf, SIP_NULLPTR, sipName_disconnectNotify);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[37], sipPySelf, SIP_NULLPTR, sipName_disconnectNotify);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::disconnectNotify(a0);
        return;
    }

    extern void sipVH_QtWidgets_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtWidgets_0(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::connectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[38], &sipPySelf, SIP_NULLPTR, sipName_connectNotify);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[38], sipPySelf, SIP_NULLPTR, sipName_connectNotify);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::connectNotify(a0);
        return;
    }

    extern void sipVH_QtWidgets_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtWidgets_0(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::customEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[39], &sipPySelf, SIP_NULLPTR, sipName_customEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[39], sipPySelf, SIP_NULLPTR, sipName_customEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::customEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::childEvent( ::QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[40], &sipPySelf, SIP_NULLPTR, sipName_childEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[40], sipPySelf, SIP_NULLPTR, sipName_childEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::childEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_2(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QChildEvent*);

    sipVH_QtWidgets_2(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::timerEvent( ::QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[41], &sipPySelf, SIP_NULLPTR, sipName_timerEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[41], sipPySelf, SIP_NULLPTR, sipName_timerEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::timerEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTimerEvent*);

    sipVH_QtWidgets_3(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQAbstractItemView::eventFilter( ::QObject*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[42], &sipPySelf, SIP_NULLPTR, sipName_eventFilter);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[42], sipPySelf, SIP_NULLPTR, sipName_eventFilter);
#endif

    if (!sipMeth)
        return  ::QAbstractItemView::eventFilter(a0,a1);

    extern bool sipVH_QtWidgets_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QObject*, ::QEvent*);

    return sipVH_QtWidgets_4(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQAbstractItemView::event( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[43], &sipPySelf, SIP_NULLPTR, sipName_event);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[43], sipPySelf, SIP_NULLPTR, sipName_event);
#endif

    if (!sipMeth)
        return  ::QAbstractItemView::event(a0);

    extern bool sipVH_QtWidgets_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtWidgets_5(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

int sipQAbstractItemView::metric( ::QPaintDevice::PaintDeviceMetric a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[44]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_metric);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[44]), sipPySelf, SIP_NULLPTR, sipName_metric);
#endif

    if (!sipMeth)
        return  ::QAbstractItemView::metric(a0);

    extern int sipVH_QtWidgets_6(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPaintDevice::PaintDeviceMetric);

    return sipVH_QtWidgets_6(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QPaintEngine* sipQAbstractItemView::paintEngine() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[45]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_paintEngine);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[45]), sipPySelf, SIP_NULLPTR, sipName_paintEngine);
#endif

    if (!sipMeth)
        return  ::QAbstractItemView::paintEngine();

    extern  ::QPaintEngine* sipVH_QtWidgets_7(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_7(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

int sipQAbstractItemView::devType() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[46]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_devType);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[46]), sipPySelf, SIP_NULLPTR, sipName_devType);
#endif

    if (!sipMeth)
        return  ::QAbstractItemView::devType();

    extern int sipVH_QtWidgets_8(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_8(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQAbstractItemView::setVisible(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[47], &sipPySelf, SIP_NULLPTR, sipName_setVisible);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[47], sipPySelf, SIP_NULLPTR, sipName_setVisible);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::setVisible(a0);
        return;
    }

    extern void sipVH_QtWidgets_9(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    sipVH_QtWidgets_9(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QSize sipQAbstractItemView::sizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[48]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_sizeHint);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[48]), sipPySelf, SIP_NULLPTR, sipName_sizeHint);
#endif

    if (!sipMeth)
        return  ::QAbstractItemView::sizeHint();

    extern  ::QSize sipVH_QtWidgets_10(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_10(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

 ::QSize sipQAbstractItemView::minimumSizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[49]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_minimumSizeHint);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[49]), sipPySelf, SIP_NULLPTR, sipName_minimumSizeHint);
#endif

    if (!sipMeth)
        return  ::QAbstractItemView::minimumSizeHint();

    extern  ::QSize sipVH_QtWidgets_10(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_10(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

int sipQAbstractItemView::heightForWidth(int a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[50]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_heightForWidth);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[50]), sipPySelf, SIP_NULLPTR, sipName_heightForWidth);
#endif

    if (!sipMeth)
        return  ::QAbstractItemView::heightForWidth(a0);

    extern int sipVH_QtWidgets_11(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    return sipVH_QtWidgets_11(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::mousePressEvent( ::QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[51], &sipPySelf, SIP_NULLPTR, sipName_mousePressEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[51], sipPySelf, SIP_NULLPTR, sipName_mousePressEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*);

    sipVH_QtWidgets_12(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::mouseReleaseEvent( ::QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[52], &sipPySelf, SIP_NULLPTR, sipName_mouseReleaseEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[52], sipPySelf, SIP_NULLPTR, sipName_mouseReleaseEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*);

    sipVH_QtWidgets_12(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::mouseDoubleClickEvent( ::QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[53], &sipPySelf, SIP_NULLPTR, sipName_mouseDoubleClickEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[53], sipPySelf, SIP_NULLPTR, sipName_mouseDoubleClickEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*);

    sipVH_QtWidgets_12(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::mouseMoveEvent( ::QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[54], &sipPySelf, SIP_NULLPTR, sipName_mouseMoveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[54], sipPySelf, SIP_NULLPTR, sipName_mouseMoveEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*);

    sipVH_QtWidgets_12(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::wheelEvent( ::QWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[55], &sipPySelf, SIP_NULLPTR, sipName_wheelEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[55], sipPySelf, SIP_NULLPTR, sipName_wheelEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_13(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QWheelEvent*);

    sipVH_QtWidgets_13(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::keyPressEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[56], &sipPySelf, SIP_NULLPTR, sipName_keyPressEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[56], sipPySelf, SIP_NULLPTR, sipName_keyPressEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::keyPressEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtWidgets_14(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::keyReleaseEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[57], &sipPySelf, SIP_NULLPTR, sipName_keyReleaseEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[57], sipPySelf, SIP_NULLPTR, sipName_keyReleaseEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::keyReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtWidgets_14(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::focusInEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[58], &sipPySelf, SIP_NULLPTR, sipName_focusInEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[58], sipPySelf, SIP_NULLPTR, sipName_focusInEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::focusInEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtWidgets_15(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::focusOutEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[59], &sipPySelf, SIP_NULLPTR, sipName_focusOutEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[59], sipPySelf, SIP_NULLPTR, sipName_focusOutEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::focusOutEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtWidgets_15(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::enterEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[60], &sipPySelf, SIP_NULLPTR, sipName_enterEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[60], sipPySelf, SIP_NULLPTR, sipName_enterEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::enterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::leaveEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[61], &sipPySelf, SIP_NULLPTR, sipName_leaveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[61], sipPySelf, SIP_NULLPTR, sipName_leaveEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::leaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::paintEvent( ::QPaintEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[62], &sipPySelf, SIP_NULLPTR, sipName_paintEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[62], sipPySelf, SIP_NULLPTR, sipName_paintEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::paintEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_16(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPaintEvent*);

    sipVH_QtWidgets_16(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::moveEvent( ::QMoveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[63], &sipPySelf, SIP_NULLPTR, sipName_moveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[63], sipPySelf, SIP_NULLPTR, sipName_moveEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::moveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_17(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMoveEvent*);

    sipVH_QtWidgets_17(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::resizeEvent( ::QResizeEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[64], &sipPySelf, SIP_NULLPTR, sipName_resizeEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[64], sipPySelf, SIP_NULLPTR, sipName_resizeEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::resizeEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_18(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QResizeEvent*);

    sipVH_QtWidgets_18(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::closeEvent( ::QCloseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[65], &sipPySelf, SIP_NULLPTR, sipName_closeEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[65], sipPySelf, SIP_NULLPTR, sipName_closeEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::closeEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_19(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QCloseEvent*);

    sipVH_QtWidgets_19(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::contextMenuEvent( ::QContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[66], &sipPySelf, SIP_NULLPTR, sipName_contextMenuEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[66], sipPySelf, SIP_NULLPTR, sipName_contextMenuEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_20(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QContextMenuEvent*);

    sipVH_QtWidgets_20(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::tabletEvent( ::QTabletEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[67], &sipPySelf, SIP_NULLPTR, sipName_tabletEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[67], sipPySelf, SIP_NULLPTR, sipName_tabletEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::tabletEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_21(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTabletEvent*);

    sipVH_QtWidgets_21(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::actionEvent( ::QActionEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[68], &sipPySelf, SIP_NULLPTR, sipName_actionEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[68], sipPySelf, SIP_NULLPTR, sipName_actionEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::actionEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_22(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QActionEvent*);

    sipVH_QtWidgets_22(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::dragEnterEvent( ::QDragEnterEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[69], &sipPySelf, SIP_NULLPTR, sipName_dragEnterEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[69], sipPySelf, SIP_NULLPTR, sipName_dragEnterEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_23(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QDragEnterEvent*);

    sipVH_QtWidgets_23(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::dragMoveEvent( ::QDragMoveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[70], &sipPySelf, SIP_NULLPTR, sipName_dragMoveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[70], sipPySelf, SIP_NULLPTR, sipName_dragMoveEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_24(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QDragMoveEvent*);

    sipVH_QtWidgets_24(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::dragLeaveEvent( ::QDragLeaveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[71], &sipPySelf, SIP_NULLPTR, sipName_dragLeaveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[71], sipPySelf, SIP_NULLPTR, sipName_dragLeaveEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_25(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QDragLeaveEvent*);

    sipVH_QtWidgets_25(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::dropEvent( ::QDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[72], &sipPySelf, SIP_NULLPTR, sipName_dropEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[72], sipPySelf, SIP_NULLPTR, sipName_dropEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::dropEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_26(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QDropEvent*);

    sipVH_QtWidgets_26(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::showEvent( ::QShowEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[73], &sipPySelf, SIP_NULLPTR, sipName_showEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[73], sipPySelf, SIP_NULLPTR, sipName_showEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::showEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_27(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QShowEvent*);

    sipVH_QtWidgets_27(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::hideEvent( ::QHideEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[74], &sipPySelf, SIP_NULLPTR, sipName_hideEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[74], sipPySelf, SIP_NULLPTR, sipName_hideEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::hideEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_28(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QHideEvent*);

    sipVH_QtWidgets_28(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::changeEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[75], &sipPySelf, SIP_NULLPTR, sipName_changeEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[75], sipPySelf, SIP_NULLPTR, sipName_changeEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::changeEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::inputMethodEvent( ::QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[76], &sipPySelf, SIP_NULLPTR, sipName_inputMethodEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[76], sipPySelf, SIP_NULLPTR, sipName_inputMethodEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_29(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QInputMethodEvent*);

    sipVH_QtWidgets_29(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QVariant sipQAbstractItemView::inputMethodQuery( ::Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[77]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_inputMethodQuery);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[77]), sipPySelf, SIP_NULLPTR, sipName_inputMethodQuery);
#endif

    if (!sipMeth)
        return  ::QAbstractItemView::inputMethodQuery(a0);

    extern  ::QVariant sipVH_QtWidgets_30(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::Qt::InputMethodQuery);

    return sipVH_QtWidgets_30(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQAbstractItemView::focusNextPrevChild(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[78], &sipPySelf, SIP_NULLPTR, sipName_focusNextPrevChild);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[78], sipPySelf, SIP_NULLPTR, sipName_focusNextPrevChild);
#endif

    if (!sipMeth)
        return  ::QAbstractItemView::focusNextPrevChild(a0);

    extern bool sipVH_QtWidgets_31(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    return sipVH_QtWidgets_31(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQAbstractItemView::hasHeightForWidth() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[79]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_hasHeightForWidth);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[79]), sipPySelf, SIP_NULLPTR, sipName_hasHeightForWidth);
#endif

    if (!sipMeth)
        return  ::QAbstractItemView::hasHeightForWidth();

    extern bool sipVH_QtWidgets_32(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_32(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

bool sipQAbstractItemView::nativeEvent(const  ::QByteArray& a0,void*a1,long*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[80], &sipPySelf, SIP_NULLPTR, sipName_nativeEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[80], sipPySelf, SIP_NULLPTR, sipName_nativeEvent);
#endif

    if (!sipMeth)
        return  ::QAbstractItemView::nativeEvent(a0,a1,a2);

    extern bool sipVH_QtWidgets_33(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QByteArray&,void*,long*);

    return sipVH_QtWidgets_33(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

 ::QPainter* sipQAbstractItemView::sharedPainter() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[81]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_sharedPainter);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[81]), sipPySelf, SIP_NULLPTR, sipName_sharedPainter);
#endif

    if (!sipMeth)
        return  ::QAbstractItemView::sharedPainter();

    extern  ::QPainter* sipVH_QtWidgets_34(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_34(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQAbstractItemView::initPainter( ::QPainter*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[82]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_initPainter);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[82]), sipPySelf, SIP_NULLPTR, sipName_initPainter);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::initPainter(a0);
        return;
    }

    extern void sipVH_QtWidgets_35(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPainter*);

    sipVH_QtWidgets_35(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QSize sipQAbstractItemView::viewportSizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[83]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_viewportSizeHint);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[83]), sipPySelf, SIP_NULLPTR, sipName_viewportSizeHint);
#endif

    if (!sipMeth)
        return  ::QAbstractItemView::viewportSizeHint();

    extern  ::QSize sipVH_QtWidgets_10(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_10(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

bool sipQAbstractItemView::viewportEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[84], &sipPySelf, SIP_NULLPTR, sipName_viewportEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[84], sipPySelf, SIP_NULLPTR, sipName_viewportEvent);
#endif

    if (!sipMeth)
        return  ::QAbstractItemView::viewportEvent(a0);

    extern bool sipVH_QtWidgets_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtWidgets_5(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemView::scrollContentsBy(int a0,int a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[85], &sipPySelf, SIP_NULLPTR, sipName_scrollContentsBy);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[85], sipPySelf, SIP_NULLPTR, sipName_scrollContentsBy);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::scrollContentsBy(a0,a1);
        return;
    }

    extern void sipVH_QtWidgets_46(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int,int);

    sipVH_QtWidgets_46(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQAbstractItemView::setupViewport( ::QWidget*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[86], &sipPySelf, SIP_NULLPTR, sipName_setupViewport);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[86], sipPySelf, SIP_NULLPTR, sipName_setupViewport);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemView::setupViewport(a0);
        return;
    }

    extern void sipVH_QtWidgets_47(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QWidget*);

    sipVH_QtWidgets_47(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QAbstractItemView_setModel, "setModel(self, QAbstractItemModel)");

extern "C" {static PyObject *meth_QAbstractItemView_setModel(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setModel(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QAbstractItemModel* a0;
        PyObject *a0Keep;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0Keep, sipType_QAbstractItemModel, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::setModel(a0) : sipCpp->setModel(a0));

            sipKeepReference(sipSelf, -2, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setModel, doc_QAbstractItemView_setModel);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_model, "model(self) -> QAbstractItemModel");

extern "C" {static PyObject *meth_QAbstractItemView_model(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_model(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
             ::QAbstractItemModel*sipRes;

            sipRes = sipCpp->model();

            return sipConvertFromType(sipRes,sipType_QAbstractItemModel,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_model, doc_QAbstractItemView_model);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setSelectionModel, "setSelectionModel(self, QItemSelectionModel)");

extern "C" {static PyObject *meth_QAbstractItemView_setSelectionModel(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setSelectionModel(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QItemSelectionModel* a0;
        PyObject *a0Keep;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0Keep, sipType_QItemSelectionModel, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::setSelectionModel(a0) : sipCpp->setSelectionModel(a0));

            sipKeepReference(sipSelf, -3, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setSelectionModel, doc_QAbstractItemView_setSelectionModel);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_selectionModel, "selectionModel(self) -> QItemSelectionModel");

extern "C" {static PyObject *meth_QAbstractItemView_selectionModel(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_selectionModel(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
             ::QItemSelectionModel*sipRes;

            sipRes = sipCpp->selectionModel();

            return sipConvertFromType(sipRes,sipType_QItemSelectionModel,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_selectionModel, doc_QAbstractItemView_selectionModel);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setItemDelegate, "setItemDelegate(self, QAbstractItemDelegate)");

extern "C" {static PyObject *meth_QAbstractItemView_setItemDelegate(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setItemDelegate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QAbstractItemDelegate* a0;
        PyObject *a0Keep;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0Keep, sipType_QAbstractItemDelegate, &a0))
        {
            sipCpp->setItemDelegate(a0);

            sipKeepReference(sipSelf, -4, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setItemDelegate, doc_QAbstractItemView_setItemDelegate);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_itemDelegate, "itemDelegate(self) -> QAbstractItemDelegate\n"
"itemDelegate(self, QModelIndex) -> QAbstractItemDelegate");

extern "C" {static PyObject *meth_QAbstractItemView_itemDelegate(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_itemDelegate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
             ::QAbstractItemDelegate*sipRes;

            sipRes = sipCpp->itemDelegate();

            return sipConvertFromType(sipRes,sipType_QAbstractItemDelegate,SIP_NULLPTR);
        }
    }

    {
        const  ::QModelIndex* a0;
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QModelIndex, &a0))
        {
             ::QAbstractItemDelegate*sipRes;

            sipRes = sipCpp->itemDelegate(*a0);

            return sipConvertFromType(sipRes,sipType_QAbstractItemDelegate,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_itemDelegate, doc_QAbstractItemView_itemDelegate);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setSelectionMode, "setSelectionMode(self, QAbstractItemView.SelectionMode)");

extern "C" {static PyObject *meth_QAbstractItemView_setSelectionMode(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setSelectionMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QAbstractItemView::SelectionMode a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QAbstractItemView_SelectionMode, &a0))
        {
            sipCpp->setSelectionMode(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setSelectionMode, doc_QAbstractItemView_setSelectionMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_selectionMode, "selectionMode(self) -> QAbstractItemView.SelectionMode");

extern "C" {static PyObject *meth_QAbstractItemView_selectionMode(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_selectionMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
             ::QAbstractItemView::SelectionMode sipRes;

            sipRes = sipCpp->selectionMode();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QAbstractItemView_SelectionMode);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_selectionMode, doc_QAbstractItemView_selectionMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setSelectionBehavior, "setSelectionBehavior(self, QAbstractItemView.SelectionBehavior)");

extern "C" {static PyObject *meth_QAbstractItemView_setSelectionBehavior(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setSelectionBehavior(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QAbstractItemView::SelectionBehavior a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QAbstractItemView_SelectionBehavior, &a0))
        {
            sipCpp->setSelectionBehavior(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setSelectionBehavior, doc_QAbstractItemView_setSelectionBehavior);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_selectionBehavior, "selectionBehavior(self) -> QAbstractItemView.SelectionBehavior");

extern "C" {static PyObject *meth_QAbstractItemView_selectionBehavior(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_selectionBehavior(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
             ::QAbstractItemView::SelectionBehavior sipRes;

            sipRes = sipCpp->selectionBehavior();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QAbstractItemView_SelectionBehavior);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_selectionBehavior, doc_QAbstractItemView_selectionBehavior);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_currentIndex, "currentIndex(self) -> QModelIndex");

extern "C" {static PyObject *meth_QAbstractItemView_currentIndex(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_currentIndex(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
             ::QModelIndex*sipRes;

            sipRes = new  ::QModelIndex(sipCpp->currentIndex());

            return sipConvertFromNewType(sipRes,sipType_QModelIndex,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_currentIndex, doc_QAbstractItemView_currentIndex);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_rootIndex, "rootIndex(self) -> QModelIndex");

extern "C" {static PyObject *meth_QAbstractItemView_rootIndex(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_rootIndex(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
             ::QModelIndex*sipRes;

            sipRes = new  ::QModelIndex(sipCpp->rootIndex());

            return sipConvertFromNewType(sipRes,sipType_QModelIndex,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_rootIndex, doc_QAbstractItemView_rootIndex);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setEditTriggers, "setEditTriggers(self, Union[QAbstractItemView.EditTriggers, QAbstractItemView.EditTrigger])");

extern "C" {static PyObject *meth_QAbstractItemView_setEditTriggers(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setEditTriggers(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QAbstractItemView::EditTriggers* a0;
        int a0State = 0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QAbstractItemView_EditTriggers, &a0, &a0State))
        {
            sipCpp->setEditTriggers(*a0);
            sipReleaseType(a0,sipType_QAbstractItemView_EditTriggers,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setEditTriggers, doc_QAbstractItemView_setEditTriggers);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_editTriggers, "editTriggers(self) -> QAbstractItemView.EditTriggers");

extern "C" {static PyObject *meth_QAbstractItemView_editTriggers(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_editTriggers(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
             ::QAbstractItemView::EditTriggers*sipRes;

            sipRes = new  ::QAbstractItemView::EditTriggers(sipCpp->editTriggers());

            return sipConvertFromNewType(sipRes,sipType_QAbstractItemView_EditTriggers,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_editTriggers, doc_QAbstractItemView_editTriggers);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setAutoScroll, "setAutoScroll(self, bool)");

extern "C" {static PyObject *meth_QAbstractItemView_setAutoScroll(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setAutoScroll(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0))
        {
            sipCpp->setAutoScroll(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setAutoScroll, doc_QAbstractItemView_setAutoScroll);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_hasAutoScroll, "hasAutoScroll(self) -> bool");

extern "C" {static PyObject *meth_QAbstractItemView_hasAutoScroll(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_hasAutoScroll(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->hasAutoScroll();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_hasAutoScroll, doc_QAbstractItemView_hasAutoScroll);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setTabKeyNavigation, "setTabKeyNavigation(self, bool)");

extern "C" {static PyObject *meth_QAbstractItemView_setTabKeyNavigation(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setTabKeyNavigation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0))
        {
            sipCpp->setTabKeyNavigation(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setTabKeyNavigation, doc_QAbstractItemView_setTabKeyNavigation);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_tabKeyNavigation, "tabKeyNavigation(self) -> bool");

extern "C" {static PyObject *meth_QAbstractItemView_tabKeyNavigation(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_tabKeyNavigation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->tabKeyNavigation();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_tabKeyNavigation, doc_QAbstractItemView_tabKeyNavigation);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setDropIndicatorShown, "setDropIndicatorShown(self, bool)");

extern "C" {static PyObject *meth_QAbstractItemView_setDropIndicatorShown(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setDropIndicatorShown(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0))
        {
            sipCpp->setDropIndicatorShown(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setDropIndicatorShown, doc_QAbstractItemView_setDropIndicatorShown);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_showDropIndicator, "showDropIndicator(self) -> bool");

extern "C" {static PyObject *meth_QAbstractItemView_showDropIndicator(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_showDropIndicator(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->showDropIndicator();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_showDropIndicator, doc_QAbstractItemView_showDropIndicator);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setDragEnabled, "setDragEnabled(self, bool)");

extern "C" {static PyObject *meth_QAbstractItemView_setDragEnabled(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setDragEnabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0))
        {
            sipCpp->setDragEnabled(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setDragEnabled, doc_QAbstractItemView_setDragEnabled);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_dragEnabled, "dragEnabled(self) -> bool");

extern "C" {static PyObject *meth_QAbstractItemView_dragEnabled(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_dragEnabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->dragEnabled();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_dragEnabled, doc_QAbstractItemView_dragEnabled);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setAlternatingRowColors, "setAlternatingRowColors(self, bool)");

extern "C" {static PyObject *meth_QAbstractItemView_setAlternatingRowColors(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setAlternatingRowColors(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0))
        {
            sipCpp->setAlternatingRowColors(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setAlternatingRowColors, doc_QAbstractItemView_setAlternatingRowColors);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_alternatingRowColors, "alternatingRowColors(self) -> bool");

extern "C" {static PyObject *meth_QAbstractItemView_alternatingRowColors(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_alternatingRowColors(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->alternatingRowColors();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_alternatingRowColors, doc_QAbstractItemView_alternatingRowColors);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setIconSize, "setIconSize(self, QSize)");

extern "C" {static PyObject *meth_QAbstractItemView_setIconSize(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setIconSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QSize* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QSize, &a0))
        {
            sipCpp->setIconSize(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setIconSize, doc_QAbstractItemView_setIconSize);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_iconSize, "iconSize(self) -> QSize");

extern "C" {static PyObject *meth_QAbstractItemView_iconSize(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_iconSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
             ::QSize*sipRes;

            sipRes = new  ::QSize(sipCpp->iconSize());

            return sipConvertFromNewType(sipRes,sipType_QSize,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_iconSize, doc_QAbstractItemView_iconSize);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setTextElideMode, "setTextElideMode(self, Qt.TextElideMode)");

extern "C" {static PyObject *meth_QAbstractItemView_setTextElideMode(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setTextElideMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::Qt::TextElideMode a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_Qt_TextElideMode, &a0))
        {
            sipCpp->setTextElideMode(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setTextElideMode, doc_QAbstractItemView_setTextElideMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_textElideMode, "textElideMode(self) -> Qt.TextElideMode");

extern "C" {static PyObject *meth_QAbstractItemView_textElideMode(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_textElideMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
             ::Qt::TextElideMode sipRes;

            sipRes = sipCpp->textElideMode();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_Qt_TextElideMode);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_textElideMode, doc_QAbstractItemView_textElideMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_keyboardSearch, "keyboardSearch(self, str)");

extern "C" {static PyObject *meth_QAbstractItemView_keyboardSearch(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_keyboardSearch(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QString,&a0, &a0State))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::keyboardSearch(*a0) : sipCpp->keyboardSearch(*a0));
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_keyboardSearch, doc_QAbstractItemView_keyboardSearch);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_visualRect, "visualRect(self, QModelIndex) -> QRect");

extern "C" {static PyObject *meth_QAbstractItemView_visualRect(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_visualRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    PyObject *sipOrigSelf = sipSelf;

    {
        const  ::QModelIndex* a0;
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QModelIndex, &a0))
        {
             ::QRect*sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QAbstractItemView, sipName_visualRect);
                return SIP_NULLPTR;
            }

            sipRes = new  ::QRect(sipCpp->visualRect(*a0));

            return sipConvertFromNewType(sipRes,sipType_QRect,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_visualRect, doc_QAbstractItemView_visualRect);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_scrollTo, "scrollTo(self, QModelIndex, hint: QAbstractItemView.ScrollHint = QAbstractItemView.EnsureVisible)");

extern "C" {static PyObject *meth_QAbstractItemView_scrollTo(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_scrollTo(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    PyObject *sipOrigSelf = sipSelf;

    {
        const  ::QModelIndex* a0;
         ::QAbstractItemView::ScrollHint a1 = QAbstractItemView::EnsureVisible;
         ::QAbstractItemView *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_hint,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9|E", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QModelIndex, &a0, sipType_QAbstractItemView_ScrollHint, &a1))
        {
            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QAbstractItemView, sipName_scrollTo);
                return SIP_NULLPTR;
            }

            sipCpp->scrollTo(*a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_scrollTo, doc_QAbstractItemView_scrollTo);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_indexAt, "indexAt(self, QPoint) -> QModelIndex");

extern "C" {static PyObject *meth_QAbstractItemView_indexAt(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_indexAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    PyObject *sipOrigSelf = sipSelf;

    {
        const  ::QPoint* a0;
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QPoint, &a0))
        {
             ::QModelIndex*sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QAbstractItemView, sipName_indexAt);
                return SIP_NULLPTR;
            }

            sipRes = new  ::QModelIndex(sipCpp->indexAt(*a0));

            return sipConvertFromNewType(sipRes,sipType_QModelIndex,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_indexAt, doc_QAbstractItemView_indexAt);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_sizeHintForIndex, "sizeHintForIndex(self, QModelIndex) -> QSize");

extern "C" {static PyObject *meth_QAbstractItemView_sizeHintForIndex(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_sizeHintForIndex(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QModelIndex* a0;
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QModelIndex, &a0))
        {
             ::QSize*sipRes;

            sipRes = new  ::QSize(sipCpp->sizeHintForIndex(*a0));

            return sipConvertFromNewType(sipRes,sipType_QSize,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_sizeHintForIndex, doc_QAbstractItemView_sizeHintForIndex);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_sizeHintForRow, "sizeHintForRow(self, int) -> int");

extern "C" {static PyObject *meth_QAbstractItemView_sizeHintForRow(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_sizeHintForRow(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int a0;
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0))
        {
            int sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::sizeHintForRow(a0) : sipCpp->sizeHintForRow(a0));

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_sizeHintForRow, doc_QAbstractItemView_sizeHintForRow);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_sizeHintForColumn, "sizeHintForColumn(self, int) -> int");

extern "C" {static PyObject *meth_QAbstractItemView_sizeHintForColumn(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_sizeHintForColumn(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int a0;
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0))
        {
            int sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::sizeHintForColumn(a0) : sipCpp->sizeHintForColumn(a0));

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_sizeHintForColumn, doc_QAbstractItemView_sizeHintForColumn);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_openPersistentEditor, "openPersistentEditor(self, QModelIndex)");

extern "C" {static PyObject *meth_QAbstractItemView_openPersistentEditor(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_openPersistentEditor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QModelIndex* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QModelIndex, &a0))
        {
            sipCpp->openPersistentEditor(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_openPersistentEditor, doc_QAbstractItemView_openPersistentEditor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_closePersistentEditor, "closePersistentEditor(self, QModelIndex)");

extern "C" {static PyObject *meth_QAbstractItemView_closePersistentEditor(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_closePersistentEditor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QModelIndex* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QModelIndex, &a0))
        {
            sipCpp->closePersistentEditor(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_closePersistentEditor, doc_QAbstractItemView_closePersistentEditor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setIndexWidget, "setIndexWidget(self, QModelIndex, QWidget)");

extern "C" {static PyObject *meth_QAbstractItemView_setIndexWidget(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setIndexWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QModelIndex* a0;
         ::QWidget* a1;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9J:", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QModelIndex, &a0, sipType_QWidget, &a1))
        {
#line 123 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qabstractitemview.sip"
        // We have to break the association with any existing widget.
        QWidget *w = sipCpp->indexWidget(*a0);
        
        if (w)
        {
            PyObject *wo = sipGetPyObject(w, sipType_QWidget);
        
            if (wo)
                sipTransferTo(wo, 0);
        }
        
        Py_BEGIN_ALLOW_THREADS
        sipCpp->setIndexWidget(*a0, a1);
        Py_END_ALLOW_THREADS
#line 3452 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemView.cpp"

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setIndexWidget, doc_QAbstractItemView_setIndexWidget);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_indexWidget, "indexWidget(self, QModelIndex) -> QWidget");

extern "C" {static PyObject *meth_QAbstractItemView_indexWidget(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_indexWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QModelIndex* a0;
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QModelIndex, &a0))
        {
             ::QWidget*sipRes;

            sipRes = sipCpp->indexWidget(*a0);

            return sipConvertFromType(sipRes,sipType_QWidget,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_indexWidget, doc_QAbstractItemView_indexWidget);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_reset, "reset(self)");

extern "C" {static PyObject *meth_QAbstractItemView_reset(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_reset(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::reset() : sipCpp->reset());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_reset, doc_QAbstractItemView_reset);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setRootIndex, "setRootIndex(self, QModelIndex)");

extern "C" {static PyObject *meth_QAbstractItemView_setRootIndex(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setRootIndex(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QModelIndex* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QModelIndex, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::setRootIndex(*a0) : sipCpp->setRootIndex(*a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setRootIndex, doc_QAbstractItemView_setRootIndex);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_selectAll, "selectAll(self)");

extern "C" {static PyObject *meth_QAbstractItemView_selectAll(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_selectAll(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::selectAll() : sipCpp->selectAll());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_selectAll, doc_QAbstractItemView_selectAll);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_edit, "edit(self, QModelIndex)\n"
"edit(self, QModelIndex, QAbstractItemView.EditTrigger, QEvent) -> bool");

extern "C" {static PyObject *meth_QAbstractItemView_edit(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_edit(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QModelIndex* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QModelIndex, &a0))
        {
            sipCpp->edit(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const  ::QModelIndex* a0;
         ::QAbstractItemView::EditTrigger a1;
         ::QEvent* a2;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ9EJ8", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QModelIndex, &a0, sipType_QAbstractItemView_EditTrigger, &a1, sipType_QEvent, &a2))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::edit(*a0,a1,a2) : sipCpp->edit(*a0,a1,a2));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_edit, doc_QAbstractItemView_edit);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_clearSelection, "clearSelection(self)");

extern "C" {static PyObject *meth_QAbstractItemView_clearSelection(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_clearSelection(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            sipCpp->clearSelection();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_clearSelection, doc_QAbstractItemView_clearSelection);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setCurrentIndex, "setCurrentIndex(self, QModelIndex)");

extern "C" {static PyObject *meth_QAbstractItemView_setCurrentIndex(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setCurrentIndex(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QModelIndex* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QModelIndex, &a0))
        {
            sipCpp->setCurrentIndex(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setCurrentIndex, doc_QAbstractItemView_setCurrentIndex);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_scrollToTop, "scrollToTop(self)");

extern "C" {static PyObject *meth_QAbstractItemView_scrollToTop(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_scrollToTop(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            sipCpp->scrollToTop();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_scrollToTop, doc_QAbstractItemView_scrollToTop);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_scrollToBottom, "scrollToBottom(self)");

extern "C" {static PyObject *meth_QAbstractItemView_scrollToBottom(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_scrollToBottom(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            sipCpp->scrollToBottom();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_scrollToBottom, doc_QAbstractItemView_scrollToBottom);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_update, "update(self)\n"
"update(self, QModelIndex)");

extern "C" {static PyObject *meth_QAbstractItemView_update(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_update(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            sipCpp->update();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const  ::QModelIndex* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QModelIndex, &a0))
        {
            sipCpp->update(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_update, doc_QAbstractItemView_update);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_dataChanged, "dataChanged(self, QModelIndex, QModelIndex, roles: Iterable[int] = [])");

extern "C" {static PyObject *meth_QAbstractItemView_dataChanged(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_dataChanged(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QModelIndex* a0;
        const  ::QModelIndex* a1;
        const  ::QVector<int>& a2def = QVector<int>();
        const  ::QVector<int>* a2 = &a2def;
        int a2State = 0;
         ::QAbstractItemView *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_roles,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "pJ9J9|J1", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QModelIndex, &a0, sipType_QModelIndex, &a1, sipType_QVector_1800,&a2, &a2State))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::dataChanged(*a0,*a1,*a2) : sipCpp->dataChanged(*a0,*a1,*a2));
            sipReleaseType(const_cast< ::QVector<int> *>(a2),sipType_QVector_1800,a2State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_dataChanged, doc_QAbstractItemView_dataChanged);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_rowsInserted, "rowsInserted(self, QModelIndex, int, int)");

extern "C" {static PyObject *meth_QAbstractItemView_rowsInserted(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_rowsInserted(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QModelIndex* a0;
        int a1;
        int a2;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ9ii", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QModelIndex, &a0, &a1, &a2))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::rowsInserted(*a0,a1,a2) : sipCpp->rowsInserted(*a0,a1,a2));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_rowsInserted, doc_QAbstractItemView_rowsInserted);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_rowsAboutToBeRemoved, "rowsAboutToBeRemoved(self, QModelIndex, int, int)");

extern "C" {static PyObject *meth_QAbstractItemView_rowsAboutToBeRemoved(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_rowsAboutToBeRemoved(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QModelIndex* a0;
        int a1;
        int a2;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ9ii", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QModelIndex, &a0, &a1, &a2))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::rowsAboutToBeRemoved(*a0,a1,a2) : sipCpp->rowsAboutToBeRemoved(*a0,a1,a2));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_rowsAboutToBeRemoved, doc_QAbstractItemView_rowsAboutToBeRemoved);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_selectionChanged, "selectionChanged(self, QItemSelection, QItemSelection)");

extern "C" {static PyObject *meth_QAbstractItemView_selectionChanged(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_selectionChanged(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QItemSelection* a0;
        const  ::QItemSelection* a1;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ9J9", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QItemSelection, &a0, sipType_QItemSelection, &a1))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::selectionChanged(*a0,*a1) : sipCpp->selectionChanged(*a0,*a1));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_selectionChanged, doc_QAbstractItemView_selectionChanged);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_currentChanged, "currentChanged(self, QModelIndex, QModelIndex)");

extern "C" {static PyObject *meth_QAbstractItemView_currentChanged(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_currentChanged(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QModelIndex* a0;
        const  ::QModelIndex* a1;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ9J9", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QModelIndex, &a0, sipType_QModelIndex, &a1))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::currentChanged(*a0,*a1) : sipCpp->currentChanged(*a0,*a1));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_currentChanged, doc_QAbstractItemView_currentChanged);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_updateEditorData, "updateEditorData(self)");

extern "C" {static PyObject *meth_QAbstractItemView_updateEditorData(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_updateEditorData(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::updateEditorData() : sipCpp->updateEditorData());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_updateEditorData, doc_QAbstractItemView_updateEditorData);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_updateEditorGeometries, "updateEditorGeometries(self)");

extern "C" {static PyObject *meth_QAbstractItemView_updateEditorGeometries(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_updateEditorGeometries(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::updateEditorGeometries() : sipCpp->updateEditorGeometries());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_updateEditorGeometries, doc_QAbstractItemView_updateEditorGeometries);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_updateGeometries, "updateGeometries(self)");

extern "C" {static PyObject *meth_QAbstractItemView_updateGeometries(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_updateGeometries(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::updateGeometries() : sipCpp->updateGeometries());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_updateGeometries, doc_QAbstractItemView_updateGeometries);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_verticalScrollbarAction, "verticalScrollbarAction(self, int)");

extern "C" {static PyObject *meth_QAbstractItemView_verticalScrollbarAction(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_verticalScrollbarAction(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pi", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::verticalScrollbarAction(a0) : sipCpp->verticalScrollbarAction(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_verticalScrollbarAction, doc_QAbstractItemView_verticalScrollbarAction);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_horizontalScrollbarAction, "horizontalScrollbarAction(self, int)");

extern "C" {static PyObject *meth_QAbstractItemView_horizontalScrollbarAction(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_horizontalScrollbarAction(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pi", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::horizontalScrollbarAction(a0) : sipCpp->horizontalScrollbarAction(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_horizontalScrollbarAction, doc_QAbstractItemView_horizontalScrollbarAction);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_verticalScrollbarValueChanged, "verticalScrollbarValueChanged(self, int)");

extern "C" {static PyObject *meth_QAbstractItemView_verticalScrollbarValueChanged(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_verticalScrollbarValueChanged(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pi", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::verticalScrollbarValueChanged(a0) : sipCpp->verticalScrollbarValueChanged(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_verticalScrollbarValueChanged, doc_QAbstractItemView_verticalScrollbarValueChanged);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_horizontalScrollbarValueChanged, "horizontalScrollbarValueChanged(self, int)");

extern "C" {static PyObject *meth_QAbstractItemView_horizontalScrollbarValueChanged(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_horizontalScrollbarValueChanged(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pi", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::horizontalScrollbarValueChanged(a0) : sipCpp->horizontalScrollbarValueChanged(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_horizontalScrollbarValueChanged, doc_QAbstractItemView_horizontalScrollbarValueChanged);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_closeEditor, "closeEditor(self, QWidget, QAbstractItemDelegate.EndEditHint)");

extern "C" {static PyObject *meth_QAbstractItemView_closeEditor(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_closeEditor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QWidget* a0;
         ::QAbstractItemDelegate::EndEditHint a1;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8E", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QWidget, &a0, sipType_QAbstractItemDelegate_EndEditHint, &a1))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::closeEditor(a0,a1) : sipCpp->closeEditor(a0,a1));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_closeEditor, doc_QAbstractItemView_closeEditor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_commitData, "commitData(self, QWidget)");

extern "C" {static PyObject *meth_QAbstractItemView_commitData(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_commitData(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QWidget* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QWidget, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::commitData(a0) : sipCpp->commitData(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_commitData, doc_QAbstractItemView_commitData);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_editorDestroyed, "editorDestroyed(self, QObject)");

extern "C" {static PyObject *meth_QAbstractItemView_editorDestroyed(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_editorDestroyed(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QObject* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QObject, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::editorDestroyed(a0) : sipCpp->editorDestroyed(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_editorDestroyed, doc_QAbstractItemView_editorDestroyed);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_moveCursor, "moveCursor(self, QAbstractItemView.CursorAction, Union[Qt.KeyboardModifiers, Qt.KeyboardModifier]) -> QModelIndex");

extern "C" {static PyObject *meth_QAbstractItemView_moveCursor(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_moveCursor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    PyObject *sipOrigSelf = sipSelf;

    {
         ::QAbstractItemView::CursorAction a0;
         ::Qt::KeyboardModifiers* a1;
        int a1State = 0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pEJ1", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QAbstractItemView_CursorAction, &a0, sipType_Qt_KeyboardModifiers, &a1, &a1State))
        {
             ::QModelIndex*sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QAbstractItemView, sipName_moveCursor);
                return SIP_NULLPTR;
            }

            sipRes = new  ::QModelIndex(sipCpp->moveCursor(a0,*a1));
            sipReleaseType(a1,sipType_Qt_KeyboardModifiers,a1State);

            return sipConvertFromNewType(sipRes,sipType_QModelIndex,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_moveCursor, doc_QAbstractItemView_moveCursor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_horizontalOffset, "horizontalOffset(self) -> int");

extern "C" {static PyObject *meth_QAbstractItemView_horizontalOffset(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_horizontalOffset(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    PyObject *sipOrigSelf = sipSelf;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            int sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QAbstractItemView, sipName_horizontalOffset);
                return SIP_NULLPTR;
            }

            sipRes = sipCpp->horizontalOffset();

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_horizontalOffset, doc_QAbstractItemView_horizontalOffset);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_verticalOffset, "verticalOffset(self) -> int");

extern "C" {static PyObject *meth_QAbstractItemView_verticalOffset(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_verticalOffset(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    PyObject *sipOrigSelf = sipSelf;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            int sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QAbstractItemView, sipName_verticalOffset);
                return SIP_NULLPTR;
            }

            sipRes = sipCpp->verticalOffset();

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_verticalOffset, doc_QAbstractItemView_verticalOffset);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_isIndexHidden, "isIndexHidden(self, QModelIndex) -> bool");

extern "C" {static PyObject *meth_QAbstractItemView_isIndexHidden(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_isIndexHidden(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    PyObject *sipOrigSelf = sipSelf;

    {
        const  ::QModelIndex* a0;
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ9", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QModelIndex, &a0))
        {
            bool sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QAbstractItemView, sipName_isIndexHidden);
                return SIP_NULLPTR;
            }

            sipRes = sipCpp->isIndexHidden(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_isIndexHidden, doc_QAbstractItemView_isIndexHidden);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setSelection, "setSelection(self, QRect, Union[QItemSelectionModel.SelectionFlags, QItemSelectionModel.SelectionFlag])");

extern "C" {static PyObject *meth_QAbstractItemView_setSelection(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setSelection(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    PyObject *sipOrigSelf = sipSelf;

    {
        const  ::QRect* a0;
         ::QItemSelectionModel::SelectionFlags* a1;
        int a1State = 0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ9J1", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QRect, &a0, sipType_QItemSelectionModel_SelectionFlags, &a1, &a1State))
        {
            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QAbstractItemView, sipName_setSelection);
                return SIP_NULLPTR;
            }

            sipCpp->setSelection(*a0,*a1);
            sipReleaseType(a1,sipType_QItemSelectionModel_SelectionFlags,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setSelection, doc_QAbstractItemView_setSelection);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_visualRegionForSelection, "visualRegionForSelection(self, QItemSelection) -> QRegion");

extern "C" {static PyObject *meth_QAbstractItemView_visualRegionForSelection(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_visualRegionForSelection(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    PyObject *sipOrigSelf = sipSelf;

    {
        const  ::QItemSelection* a0;
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ9", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QItemSelection, &a0))
        {
             ::QRegion*sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QAbstractItemView, sipName_visualRegionForSelection);
                return SIP_NULLPTR;
            }

            sipRes = new  ::QRegion(sipCpp->visualRegionForSelection(*a0));

            return sipConvertFromNewType(sipRes,sipType_QRegion,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_visualRegionForSelection, doc_QAbstractItemView_visualRegionForSelection);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_selectedIndexes, "selectedIndexes(self) -> List[QModelIndex]");

extern "C" {static PyObject *meth_QAbstractItemView_selectedIndexes(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_selectedIndexes(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
             ::QModelIndexList*sipRes;

            sipRes = new  ::QModelIndexList((sipSelfWasArg ? sipCpp-> ::QAbstractItemView::selectedIndexes() : sipCpp->selectedIndexes()));

            return sipConvertFromNewType(sipRes,sipType_QList_0100QModelIndex,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_selectedIndexes, doc_QAbstractItemView_selectedIndexes);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_selectionCommand, "selectionCommand(self, QModelIndex, event: QEvent = None) -> QItemSelectionModel.SelectionFlags");

extern "C" {static PyObject *meth_QAbstractItemView_selectionCommand(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_selectionCommand(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QModelIndex* a0;
        const  ::QEvent* a1 = 0;
        const  ::QAbstractItemView *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_event,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "pJ9|J8", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QModelIndex, &a0, sipType_QEvent, &a1))
        {
             ::QItemSelectionModel::SelectionFlags*sipRes;

            sipRes = new  ::QItemSelectionModel::SelectionFlags((sipSelfWasArg ? sipCpp-> ::QAbstractItemView::selectionCommand(*a0,a1) : sipCpp->selectionCommand(*a0,a1)));

            return sipConvertFromNewType(sipRes,sipType_QItemSelectionModel_SelectionFlags,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_selectionCommand, doc_QAbstractItemView_selectionCommand);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_startDrag, "startDrag(self, Union[Qt.DropActions, Qt.DropAction])");

extern "C" {static PyObject *meth_QAbstractItemView_startDrag(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_startDrag(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::Qt::DropActions* a0;
        int a0State = 0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ1", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_Qt_DropActions, &a0, &a0State))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::startDrag(*a0) : sipCpp->startDrag(*a0));
            sipReleaseType(a0,sipType_Qt_DropActions,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_startDrag, doc_QAbstractItemView_startDrag);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_viewOptions, "viewOptions(self) -> QStyleOptionViewItem");

extern "C" {static PyObject *meth_QAbstractItemView_viewOptions(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_viewOptions(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
             ::QStyleOptionViewItem*sipRes;

            sipRes = new  ::QStyleOptionViewItem((sipSelfWasArg ? sipCpp-> ::QAbstractItemView::viewOptions() : sipCpp->viewOptions()));

            return sipConvertFromNewType(sipRes,sipType_QStyleOptionViewItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_viewOptions, doc_QAbstractItemView_viewOptions);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_state, "state(self) -> QAbstractItemView.State");

extern "C" {static PyObject *meth_QAbstractItemView_state(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_state(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
             ::QAbstractItemView::State sipRes;

            sipRes = sipCpp->state();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QAbstractItemView_State);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_state, doc_QAbstractItemView_state);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setState, "setState(self, QAbstractItemView.State)");

extern "C" {static PyObject *meth_QAbstractItemView_setState(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setState(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QAbstractItemView::State a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pE", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QAbstractItemView_State, &a0))
        {
            sipCpp->setState(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setState, doc_QAbstractItemView_setState);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_scheduleDelayedItemsLayout, "scheduleDelayedItemsLayout(self)");

extern "C" {static PyObject *meth_QAbstractItemView_scheduleDelayedItemsLayout(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_scheduleDelayedItemsLayout(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            sipCpp->scheduleDelayedItemsLayout();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_scheduleDelayedItemsLayout, doc_QAbstractItemView_scheduleDelayedItemsLayout);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_executeDelayedItemsLayout, "executeDelayedItemsLayout(self)");

extern "C" {static PyObject *meth_QAbstractItemView_executeDelayedItemsLayout(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_executeDelayedItemsLayout(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            sipCpp->executeDelayedItemsLayout();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_executeDelayedItemsLayout, doc_QAbstractItemView_executeDelayedItemsLayout);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_scrollDirtyRegion, "scrollDirtyRegion(self, int, int)");

extern "C" {static PyObject *meth_QAbstractItemView_scrollDirtyRegion(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_scrollDirtyRegion(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        int a1;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pii", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0, &a1))
        {
            sipCpp->scrollDirtyRegion(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_scrollDirtyRegion, doc_QAbstractItemView_scrollDirtyRegion);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setDirtyRegion, "setDirtyRegion(self, QRegion)");

extern "C" {static PyObject *meth_QAbstractItemView_setDirtyRegion(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setDirtyRegion(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QRegion* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ9", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QRegion, &a0))
        {
            sipCpp->setDirtyRegion(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setDirtyRegion, doc_QAbstractItemView_setDirtyRegion);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_dirtyRegionOffset, "dirtyRegionOffset(self) -> QPoint");

extern "C" {static PyObject *meth_QAbstractItemView_dirtyRegionOffset(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_dirtyRegionOffset(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
             ::QPoint*sipRes;

            sipRes = new  ::QPoint(sipCpp->dirtyRegionOffset());

            return sipConvertFromNewType(sipRes,sipType_QPoint,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_dirtyRegionOffset, doc_QAbstractItemView_dirtyRegionOffset);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_event, "event(self, QEvent) -> bool");

extern "C" {static PyObject *meth_QAbstractItemView_event(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_event(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::event(a0) : sipCpp->event(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_event, doc_QAbstractItemView_event);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_viewportEvent, "viewportEvent(self, QEvent) -> bool");

extern "C" {static PyObject *meth_QAbstractItemView_viewportEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_viewportEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::viewportEvent(a0) : sipCpp->viewportEvent(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_viewportEvent, doc_QAbstractItemView_viewportEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_mousePressEvent, "mousePressEvent(self, QMouseEvent)");

extern "C" {static PyObject *meth_QAbstractItemView_mousePressEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::mousePressEvent(a0) : sipCpp->mousePressEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_mousePressEvent, doc_QAbstractItemView_mousePressEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_mouseMoveEvent, "mouseMoveEvent(self, QMouseEvent)");

extern "C" {static PyObject *meth_QAbstractItemView_mouseMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::mouseMoveEvent(a0) : sipCpp->mouseMoveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_mouseMoveEvent, doc_QAbstractItemView_mouseMoveEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_mouseReleaseEvent, "mouseReleaseEvent(self, QMouseEvent)");

extern "C" {static PyObject *meth_QAbstractItemView_mouseReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::mouseReleaseEvent(a0) : sipCpp->mouseReleaseEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_mouseReleaseEvent, doc_QAbstractItemView_mouseReleaseEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_mouseDoubleClickEvent, "mouseDoubleClickEvent(self, QMouseEvent)");

extern "C" {static PyObject *meth_QAbstractItemView_mouseDoubleClickEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_mouseDoubleClickEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::mouseDoubleClickEvent(a0) : sipCpp->mouseDoubleClickEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_mouseDoubleClickEvent, doc_QAbstractItemView_mouseDoubleClickEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_dragEnterEvent, "dragEnterEvent(self, QDragEnterEvent)");

extern "C" {static PyObject *meth_QAbstractItemView_dragEnterEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_dragEnterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QDragEnterEvent* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QDragEnterEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::dragEnterEvent(a0) : sipCpp->dragEnterEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_dragEnterEvent, doc_QAbstractItemView_dragEnterEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_dragMoveEvent, "dragMoveEvent(self, QDragMoveEvent)");

extern "C" {static PyObject *meth_QAbstractItemView_dragMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_dragMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QDragMoveEvent* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QDragMoveEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::dragMoveEvent(a0) : sipCpp->dragMoveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_dragMoveEvent, doc_QAbstractItemView_dragMoveEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_dragLeaveEvent, "dragLeaveEvent(self, QDragLeaveEvent)");

extern "C" {static PyObject *meth_QAbstractItemView_dragLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_dragLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QDragLeaveEvent* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QDragLeaveEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::dragLeaveEvent(a0) : sipCpp->dragLeaveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_dragLeaveEvent, doc_QAbstractItemView_dragLeaveEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_dropEvent, "dropEvent(self, QDropEvent)");

extern "C" {static PyObject *meth_QAbstractItemView_dropEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_dropEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QDropEvent* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QDropEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::dropEvent(a0) : sipCpp->dropEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_dropEvent, doc_QAbstractItemView_dropEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_focusInEvent, "focusInEvent(self, QFocusEvent)");

extern "C" {static PyObject *meth_QAbstractItemView_focusInEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_focusInEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QFocusEvent* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QFocusEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::focusInEvent(a0) : sipCpp->focusInEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_focusInEvent, doc_QAbstractItemView_focusInEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_focusOutEvent, "focusOutEvent(self, QFocusEvent)");

extern "C" {static PyObject *meth_QAbstractItemView_focusOutEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_focusOutEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QFocusEvent* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QFocusEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::focusOutEvent(a0) : sipCpp->focusOutEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_focusOutEvent, doc_QAbstractItemView_focusOutEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_keyPressEvent, "keyPressEvent(self, QKeyEvent)");

extern "C" {static PyObject *meth_QAbstractItemView_keyPressEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_keyPressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QKeyEvent* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QKeyEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::keyPressEvent(a0) : sipCpp->keyPressEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_keyPressEvent, doc_QAbstractItemView_keyPressEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_resizeEvent, "resizeEvent(self, QResizeEvent)");

extern "C" {static PyObject *meth_QAbstractItemView_resizeEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_resizeEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QResizeEvent* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QResizeEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::resizeEvent(a0) : sipCpp->resizeEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_resizeEvent, doc_QAbstractItemView_resizeEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_timerEvent, "timerEvent(self, QTimerEvent)");

extern "C" {static PyObject *meth_QAbstractItemView_timerEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_timerEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QTimerEvent* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QTimerEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::timerEvent(a0) : sipCpp->timerEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_timerEvent, doc_QAbstractItemView_timerEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_dropIndicatorPosition, "dropIndicatorPosition(self) -> QAbstractItemView.DropIndicatorPosition");

extern "C" {static PyObject *meth_QAbstractItemView_dropIndicatorPosition(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_dropIndicatorPosition(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
             ::QAbstractItemView::DropIndicatorPosition sipRes;

            sipRes = sipCpp->dropIndicatorPosition();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QAbstractItemView_DropIndicatorPosition);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_dropIndicatorPosition, doc_QAbstractItemView_dropIndicatorPosition);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setVerticalScrollMode, "setVerticalScrollMode(self, QAbstractItemView.ScrollMode)");

extern "C" {static PyObject *meth_QAbstractItemView_setVerticalScrollMode(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setVerticalScrollMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QAbstractItemView::ScrollMode a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QAbstractItemView_ScrollMode, &a0))
        {
            sipCpp->setVerticalScrollMode(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setVerticalScrollMode, doc_QAbstractItemView_setVerticalScrollMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_verticalScrollMode, "verticalScrollMode(self) -> QAbstractItemView.ScrollMode");

extern "C" {static PyObject *meth_QAbstractItemView_verticalScrollMode(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_verticalScrollMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
             ::QAbstractItemView::ScrollMode sipRes;

            sipRes = sipCpp->verticalScrollMode();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QAbstractItemView_ScrollMode);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_verticalScrollMode, doc_QAbstractItemView_verticalScrollMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setHorizontalScrollMode, "setHorizontalScrollMode(self, QAbstractItemView.ScrollMode)");

extern "C" {static PyObject *meth_QAbstractItemView_setHorizontalScrollMode(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setHorizontalScrollMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QAbstractItemView::ScrollMode a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QAbstractItemView_ScrollMode, &a0))
        {
            sipCpp->setHorizontalScrollMode(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setHorizontalScrollMode, doc_QAbstractItemView_setHorizontalScrollMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_horizontalScrollMode, "horizontalScrollMode(self) -> QAbstractItemView.ScrollMode");

extern "C" {static PyObject *meth_QAbstractItemView_horizontalScrollMode(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_horizontalScrollMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
             ::QAbstractItemView::ScrollMode sipRes;

            sipRes = sipCpp->horizontalScrollMode();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QAbstractItemView_ScrollMode);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_horizontalScrollMode, doc_QAbstractItemView_horizontalScrollMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setDragDropOverwriteMode, "setDragDropOverwriteMode(self, bool)");

extern "C" {static PyObject *meth_QAbstractItemView_setDragDropOverwriteMode(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setDragDropOverwriteMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0))
        {
            sipCpp->setDragDropOverwriteMode(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setDragDropOverwriteMode, doc_QAbstractItemView_setDragDropOverwriteMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_dragDropOverwriteMode, "dragDropOverwriteMode(self) -> bool");

extern "C" {static PyObject *meth_QAbstractItemView_dragDropOverwriteMode(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_dragDropOverwriteMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->dragDropOverwriteMode();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_dragDropOverwriteMode, doc_QAbstractItemView_dragDropOverwriteMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setDragDropMode, "setDragDropMode(self, QAbstractItemView.DragDropMode)");

extern "C" {static PyObject *meth_QAbstractItemView_setDragDropMode(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setDragDropMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QAbstractItemView::DragDropMode a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QAbstractItemView_DragDropMode, &a0))
        {
            sipCpp->setDragDropMode(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setDragDropMode, doc_QAbstractItemView_setDragDropMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_dragDropMode, "dragDropMode(self) -> QAbstractItemView.DragDropMode");

extern "C" {static PyObject *meth_QAbstractItemView_dragDropMode(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_dragDropMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
             ::QAbstractItemView::DragDropMode sipRes;

            sipRes = sipCpp->dragDropMode();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QAbstractItemView_DragDropMode);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_dragDropMode, doc_QAbstractItemView_dragDropMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setItemDelegateForRow, "setItemDelegateForRow(self, int, QAbstractItemDelegate)");

extern "C" {static PyObject *meth_QAbstractItemView_setItemDelegateForRow(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setItemDelegateForRow(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::QAbstractItemDelegate* a1;
        PyObject *a1Keep;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi@J8", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0, &a1Keep, sipType_QAbstractItemDelegate, &a1))
        {
            sipCpp->setItemDelegateForRow(a0,a1);

            sipKeepReference(sipSelf, -5, a1Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setItemDelegateForRow, doc_QAbstractItemView_setItemDelegateForRow);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_itemDelegateForRow, "itemDelegateForRow(self, int) -> QAbstractItemDelegate");

extern "C" {static PyObject *meth_QAbstractItemView_itemDelegateForRow(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_itemDelegateForRow(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0))
        {
             ::QAbstractItemDelegate*sipRes;

            sipRes = sipCpp->itemDelegateForRow(a0);

            return sipConvertFromType(sipRes,sipType_QAbstractItemDelegate,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_itemDelegateForRow, doc_QAbstractItemView_itemDelegateForRow);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setItemDelegateForColumn, "setItemDelegateForColumn(self, int, QAbstractItemDelegate)");

extern "C" {static PyObject *meth_QAbstractItemView_setItemDelegateForColumn(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setItemDelegateForColumn(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::QAbstractItemDelegate* a1;
        PyObject *a1Keep;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi@J8", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0, &a1Keep, sipType_QAbstractItemDelegate, &a1))
        {
            sipCpp->setItemDelegateForColumn(a0,a1);

            sipKeepReference(sipSelf, -6, a1Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setItemDelegateForColumn, doc_QAbstractItemView_setItemDelegateForColumn);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_itemDelegateForColumn, "itemDelegateForColumn(self, int) -> QAbstractItemDelegate");

extern "C" {static PyObject *meth_QAbstractItemView_itemDelegateForColumn(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_itemDelegateForColumn(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0))
        {
             ::QAbstractItemDelegate*sipRes;

            sipRes = sipCpp->itemDelegateForColumn(a0);

            return sipConvertFromType(sipRes,sipType_QAbstractItemDelegate,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_itemDelegateForColumn, doc_QAbstractItemView_itemDelegateForColumn);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_inputMethodQuery, "inputMethodQuery(self, Qt.InputMethodQuery) -> Any");

extern "C" {static PyObject *meth_QAbstractItemView_inputMethodQuery(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_inputMethodQuery(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::Qt::InputMethodQuery a0;
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_Qt_InputMethodQuery, &a0))
        {
             ::QVariant*sipRes;

            sipRes = new  ::QVariant((sipSelfWasArg ? sipCpp-> ::QAbstractItemView::inputMethodQuery(a0) : sipCpp->inputMethodQuery(a0)));

            return sipConvertFromNewType(sipRes,sipType_QVariant,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_inputMethodQuery, doc_QAbstractItemView_inputMethodQuery);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setAutoScrollMargin, "setAutoScrollMargin(self, int)");

extern "C" {static PyObject *meth_QAbstractItemView_setAutoScrollMargin(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setAutoScrollMargin(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0))
        {
            sipCpp->setAutoScrollMargin(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setAutoScrollMargin, doc_QAbstractItemView_setAutoScrollMargin);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_autoScrollMargin, "autoScrollMargin(self) -> int");

extern "C" {static PyObject *meth_QAbstractItemView_autoScrollMargin(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_autoScrollMargin(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->autoScrollMargin();

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_autoScrollMargin, doc_QAbstractItemView_autoScrollMargin);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_focusNextPrevChild, "focusNextPrevChild(self, bool) -> bool");

extern "C" {static PyObject *meth_QAbstractItemView_focusNextPrevChild(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_focusNextPrevChild(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        bool a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pb", &sipSelf, sipType_QAbstractItemView, &sipCpp, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::focusNextPrevChild(a0) : sipCpp->focusNextPrevChild(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_focusNextPrevChild, doc_QAbstractItemView_focusNextPrevChild);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_inputMethodEvent, "inputMethodEvent(self, QInputMethodEvent)");

extern "C" {static PyObject *meth_QAbstractItemView_inputMethodEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_inputMethodEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QInputMethodEvent* a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QInputMethodEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::inputMethodEvent(a0) : sipCpp->inputMethodEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_inputMethodEvent, doc_QAbstractItemView_inputMethodEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_viewportSizeHint, "viewportSizeHint(self) -> QSize");

extern "C" {static PyObject *meth_QAbstractItemView_viewportSizeHint(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_viewportSizeHint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
             ::QSize*sipRes;

            sipRes = new  ::QSize((sipSelfWasArg ? sipCpp-> ::QAbstractItemView::viewportSizeHint() : sipCpp->viewportSizeHint()));

            return sipConvertFromNewType(sipRes,sipType_QSize,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_viewportSizeHint, doc_QAbstractItemView_viewportSizeHint);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_eventFilter, "eventFilter(self, QObject, QEvent) -> bool");

extern "C" {static PyObject *meth_QAbstractItemView_eventFilter(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_eventFilter(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QObject* a0;
         ::QEvent* a1;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8J8", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QObject, &a0, sipType_QEvent, &a1))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QAbstractItemView::eventFilter(a0,a1) : sipCpp->eventFilter(a0,a1));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_eventFilter, doc_QAbstractItemView_eventFilter);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_setDefaultDropAction, "setDefaultDropAction(self, Qt.DropAction)");

extern "C" {static PyObject *meth_QAbstractItemView_setDefaultDropAction(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_setDefaultDropAction(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::Qt::DropAction a0;
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_Qt_DropAction, &a0))
        {
            sipCpp->setDefaultDropAction(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_setDefaultDropAction, doc_QAbstractItemView_setDefaultDropAction);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_defaultDropAction, "defaultDropAction(self) -> Qt.DropAction");

extern "C" {static PyObject *meth_QAbstractItemView_defaultDropAction(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_defaultDropAction(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
             ::Qt::DropAction sipRes;

            sipRes = sipCpp->defaultDropAction();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_Qt_DropAction);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_defaultDropAction, doc_QAbstractItemView_defaultDropAction);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_resetVerticalScrollMode, "resetVerticalScrollMode(self)");

extern "C" {static PyObject *meth_QAbstractItemView_resetVerticalScrollMode(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_resetVerticalScrollMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            sipCpp->resetVerticalScrollMode();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_resetVerticalScrollMode, doc_QAbstractItemView_resetVerticalScrollMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_resetHorizontalScrollMode, "resetHorizontalScrollMode(self)");

extern "C" {static PyObject *meth_QAbstractItemView_resetHorizontalScrollMode(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_resetHorizontalScrollMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractItemView, &sipCpp))
        {
            sipCpp->resetHorizontalScrollMode();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_resetHorizontalScrollMode, doc_QAbstractItemView_resetHorizontalScrollMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemView_isPersistentEditorOpen, "isPersistentEditorOpen(self, QModelIndex) -> bool");

extern "C" {static PyObject *meth_QAbstractItemView_isPersistentEditorOpen(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemView_isPersistentEditorOpen(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QModelIndex* a0;
        const  ::QAbstractItemView *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QAbstractItemView, &sipCpp, sipType_QModelIndex, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->isPersistentEditorOpen(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemView, sipName_isPersistentEditorOpen, doc_QAbstractItemView_isPersistentEditorOpen);

    return SIP_NULLPTR;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QAbstractItemView(void *, const sipTypeDef *);}
static void *cast_QAbstractItemView(void *sipCppV, const sipTypeDef *targetType)
{
     ::QAbstractItemView *sipCpp = reinterpret_cast< ::QAbstractItemView *>(sipCppV);

    if (targetType == sipType_QAbstractScrollArea)
        return static_cast< ::QAbstractScrollArea *>(sipCpp);

    if (targetType == sipType_QFrame)
        return static_cast< ::QFrame *>(sipCpp);

    if (targetType == sipType_QWidget)
        return static_cast< ::QWidget *>(sipCpp);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    if (targetType == sipType_QPaintDevice)
        return static_cast< ::QPaintDevice *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QAbstractItemView(void *, int);}
static void release_QAbstractItemView(void *sipCppV, int)
{
     ::QAbstractItemView *sipCpp = reinterpret_cast< ::QAbstractItemView *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QAbstractItemView(sipSimpleWrapper *);}
static void dealloc_QAbstractItemView(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQAbstractItemView *>(sipGetAddress(sipSelf))->sipPySelf = SIP_NULLPTR;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QAbstractItemView(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QAbstractItemView(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QAbstractItemView(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQAbstractItemView *sipCpp = SIP_NULLPTR;

    {
         ::QWidget* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QWidget, &a0, sipOwner))
        {
            sipCpp = new sipQAbstractItemView(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QAbstractItemView[] = {{15, 255, 1}};


static PyMethodDef methods_QAbstractItemView[] = {
    {sipName_alternatingRowColors, meth_QAbstractItemView_alternatingRowColors, METH_VARARGS, doc_QAbstractItemView_alternatingRowColors},
    {sipName_autoScrollMargin, meth_QAbstractItemView_autoScrollMargin, METH_VARARGS, doc_QAbstractItemView_autoScrollMargin},
    {sipName_clearSelection, meth_QAbstractItemView_clearSelection, METH_VARARGS, doc_QAbstractItemView_clearSelection},
    {sipName_closeEditor, meth_QAbstractItemView_closeEditor, METH_VARARGS, doc_QAbstractItemView_closeEditor},
    {sipName_closePersistentEditor, meth_QAbstractItemView_closePersistentEditor, METH_VARARGS, doc_QAbstractItemView_closePersistentEditor},
    {sipName_commitData, meth_QAbstractItemView_commitData, METH_VARARGS, doc_QAbstractItemView_commitData},
    {sipName_currentChanged, meth_QAbstractItemView_currentChanged, METH_VARARGS, doc_QAbstractItemView_currentChanged},
    {sipName_currentIndex, meth_QAbstractItemView_currentIndex, METH_VARARGS, doc_QAbstractItemView_currentIndex},
    {sipName_dataChanged, SIP_MLMETH_CAST(meth_QAbstractItemView_dataChanged), METH_VARARGS|METH_KEYWORDS, doc_QAbstractItemView_dataChanged},
    {sipName_defaultDropAction, meth_QAbstractItemView_defaultDropAction, METH_VARARGS, doc_QAbstractItemView_defaultDropAction},
    {sipName_dirtyRegionOffset, meth_QAbstractItemView_dirtyRegionOffset, METH_VARARGS, doc_QAbstractItemView_dirtyRegionOffset},
    {sipName_dragDropMode, meth_QAbstractItemView_dragDropMode, METH_VARARGS, doc_QAbstractItemView_dragDropMode},
    {sipName_dragDropOverwriteMode, meth_QAbstractItemView_dragDropOverwriteMode, METH_VARARGS, doc_QAbstractItemView_dragDropOverwriteMode},
    {sipName_dragEnabled, meth_QAbstractItemView_dragEnabled, METH_VARARGS, doc_QAbstractItemView_dragEnabled},
    {sipName_dragEnterEvent, meth_QAbstractItemView_dragEnterEvent, METH_VARARGS, doc_QAbstractItemView_dragEnterEvent},
    {sipName_dragLeaveEvent, meth_QAbstractItemView_dragLeaveEvent, METH_VARARGS, doc_QAbstractItemView_dragLeaveEvent},
    {sipName_dragMoveEvent, meth_QAbstractItemView_dragMoveEvent, METH_VARARGS, doc_QAbstractItemView_dragMoveEvent},
    {sipName_dropEvent, meth_QAbstractItemView_dropEvent, METH_VARARGS, doc_QAbstractItemView_dropEvent},
    {sipName_dropIndicatorPosition, meth_QAbstractItemView_dropIndicatorPosition, METH_VARARGS, doc_QAbstractItemView_dropIndicatorPosition},
    {sipName_edit, meth_QAbstractItemView_edit, METH_VARARGS, doc_QAbstractItemView_edit},
    {sipName_editTriggers, meth_QAbstractItemView_editTriggers, METH_VARARGS, doc_QAbstractItemView_editTriggers},
    {sipName_editorDestroyed, meth_QAbstractItemView_editorDestroyed, METH_VARARGS, doc_QAbstractItemView_editorDestroyed},
    {sipName_event, meth_QAbstractItemView_event, METH_VARARGS, doc_QAbstractItemView_event},
    {sipName_eventFilter, meth_QAbstractItemView_eventFilter, METH_VARARGS, doc_QAbstractItemView_eventFilter},
    {sipName_executeDelayedItemsLayout, meth_QAbstractItemView_executeDelayedItemsLayout, METH_VARARGS, doc_QAbstractItemView_executeDelayedItemsLayout},
    {sipName_focusInEvent, meth_QAbstractItemView_focusInEvent, METH_VARARGS, doc_QAbstractItemView_focusInEvent},
    {sipName_focusNextPrevChild, meth_QAbstractItemView_focusNextPrevChild, METH_VARARGS, doc_QAbstractItemView_focusNextPrevChild},
    {sipName_focusOutEvent, meth_QAbstractItemView_focusOutEvent, METH_VARARGS, doc_QAbstractItemView_focusOutEvent},
    {sipName_hasAutoScroll, meth_QAbstractItemView_hasAutoScroll, METH_VARARGS, doc_QAbstractItemView_hasAutoScroll},
    {sipName_horizontalOffset, meth_QAbstractItemView_horizontalOffset, METH_VARARGS, doc_QAbstractItemView_horizontalOffset},
    {sipName_horizontalScrollMode, meth_QAbstractItemView_horizontalScrollMode, METH_VARARGS, doc_QAbstractItemView_horizontalScrollMode},
    {sipName_horizontalScrollbarAction, meth_QAbstractItemView_horizontalScrollbarAction, METH_VARARGS, doc_QAbstractItemView_horizontalScrollbarAction},
    {sipName_horizontalScrollbarValueChanged, meth_QAbstractItemView_horizontalScrollbarValueChanged, METH_VARARGS, doc_QAbstractItemView_horizontalScrollbarValueChanged},
    {sipName_iconSize, meth_QAbstractItemView_iconSize, METH_VARARGS, doc_QAbstractItemView_iconSize},
    {sipName_indexAt, meth_QAbstractItemView_indexAt, METH_VARARGS, doc_QAbstractItemView_indexAt},
    {sipName_indexWidget, meth_QAbstractItemView_indexWidget, METH_VARARGS, doc_QAbstractItemView_indexWidget},
    {sipName_inputMethodEvent, meth_QAbstractItemView_inputMethodEvent, METH_VARARGS, doc_QAbstractItemView_inputMethodEvent},
    {sipName_inputMethodQuery, meth_QAbstractItemView_inputMethodQuery, METH_VARARGS, doc_QAbstractItemView_inputMethodQuery},
    {sipName_isIndexHidden, meth_QAbstractItemView_isIndexHidden, METH_VARARGS, doc_QAbstractItemView_isIndexHidden},
    {sipName_isPersistentEditorOpen, meth_QAbstractItemView_isPersistentEditorOpen, METH_VARARGS, doc_QAbstractItemView_isPersistentEditorOpen},
    {sipName_itemDelegate, meth_QAbstractItemView_itemDelegate, METH_VARARGS, doc_QAbstractItemView_itemDelegate},
    {sipName_itemDelegateForColumn, meth_QAbstractItemView_itemDelegateForColumn, METH_VARARGS, doc_QAbstractItemView_itemDelegateForColumn},
    {sipName_itemDelegateForRow, meth_QAbstractItemView_itemDelegateForRow, METH_VARARGS, doc_QAbstractItemView_itemDelegateForRow},
    {sipName_keyPressEvent, meth_QAbstractItemView_keyPressEvent, METH_VARARGS, doc_QAbstractItemView_keyPressEvent},
    {sipName_keyboardSearch, meth_QAbstractItemView_keyboardSearch, METH_VARARGS, doc_QAbstractItemView_keyboardSearch},
    {sipName_model, meth_QAbstractItemView_model, METH_VARARGS, doc_QAbstractItemView_model},
    {sipName_mouseDoubleClickEvent, meth_QAbstractItemView_mouseDoubleClickEvent, METH_VARARGS, doc_QAbstractItemView_mouseDoubleClickEvent},
    {sipName_mouseMoveEvent, meth_QAbstractItemView_mouseMoveEvent, METH_VARARGS, doc_QAbstractItemView_mouseMoveEvent},
    {sipName_mousePressEvent, meth_QAbstractItemView_mousePressEvent, METH_VARARGS, doc_QAbstractItemView_mousePressEvent},
    {sipName_mouseReleaseEvent, meth_QAbstractItemView_mouseReleaseEvent, METH_VARARGS, doc_QAbstractItemView_mouseReleaseEvent},
    {sipName_moveCursor, meth_QAbstractItemView_moveCursor, METH_VARARGS, doc_QAbstractItemView_moveCursor},
    {sipName_openPersistentEditor, meth_QAbstractItemView_openPersistentEditor, METH_VARARGS, doc_QAbstractItemView_openPersistentEditor},
    {sipName_reset, meth_QAbstractItemView_reset, METH_VARARGS, doc_QAbstractItemView_reset},
    {sipName_resetHorizontalScrollMode, meth_QAbstractItemView_resetHorizontalScrollMode, METH_VARARGS, doc_QAbstractItemView_resetHorizontalScrollMode},
    {sipName_resetVerticalScrollMode, meth_QAbstractItemView_resetVerticalScrollMode, METH_VARARGS, doc_QAbstractItemView_resetVerticalScrollMode},
    {sipName_resizeEvent, meth_QAbstractItemView_resizeEvent, METH_VARARGS, doc_QAbstractItemView_resizeEvent},
    {sipName_rootIndex, meth_QAbstractItemView_rootIndex, METH_VARARGS, doc_QAbstractItemView_rootIndex},
    {sipName_rowsAboutToBeRemoved, meth_QAbstractItemView_rowsAboutToBeRemoved, METH_VARARGS, doc_QAbstractItemView_rowsAboutToBeRemoved},
    {sipName_rowsInserted, meth_QAbstractItemView_rowsInserted, METH_VARARGS, doc_QAbstractItemView_rowsInserted},
    {sipName_scheduleDelayedItemsLayout, meth_QAbstractItemView_scheduleDelayedItemsLayout, METH_VARARGS, doc_QAbstractItemView_scheduleDelayedItemsLayout},
    {sipName_scrollDirtyRegion, meth_QAbstractItemView_scrollDirtyRegion, METH_VARARGS, doc_QAbstractItemView_scrollDirtyRegion},
    {sipName_scrollTo, SIP_MLMETH_CAST(meth_QAbstractItemView_scrollTo), METH_VARARGS|METH_KEYWORDS, doc_QAbstractItemView_scrollTo},
    {sipName_scrollToBottom, meth_QAbstractItemView_scrollToBottom, METH_VARARGS, doc_QAbstractItemView_scrollToBottom},
    {sipName_scrollToTop, meth_QAbstractItemView_scrollToTop, METH_VARARGS, doc_QAbstractItemView_scrollToTop},
    {sipName_selectAll, meth_QAbstractItemView_selectAll, METH_VARARGS, doc_QAbstractItemView_selectAll},
    {sipName_selectedIndexes, meth_QAbstractItemView_selectedIndexes, METH_VARARGS, doc_QAbstractItemView_selectedIndexes},
    {sipName_selectionBehavior, meth_QAbstractItemView_selectionBehavior, METH_VARARGS, doc_QAbstractItemView_selectionBehavior},
    {sipName_selectionChanged, meth_QAbstractItemView_selectionChanged, METH_VARARGS, doc_QAbstractItemView_selectionChanged},
    {sipName_selectionCommand, SIP_MLMETH_CAST(meth_QAbstractItemView_selectionCommand), METH_VARARGS|METH_KEYWORDS, doc_QAbstractItemView_selectionCommand},
    {sipName_selectionMode, meth_QAbstractItemView_selectionMode, METH_VARARGS, doc_QAbstractItemView_selectionMode},
    {sipName_selectionModel, meth_QAbstractItemView_selectionModel, METH_VARARGS, doc_QAbstractItemView_selectionModel},
    {sipName_setAlternatingRowColors, meth_QAbstractItemView_setAlternatingRowColors, METH_VARARGS, doc_QAbstractItemView_setAlternatingRowColors},
    {sipName_setAutoScroll, meth_QAbstractItemView_setAutoScroll, METH_VARARGS, doc_QAbstractItemView_setAutoScroll},
    {sipName_setAutoScrollMargin, meth_QAbstractItemView_setAutoScrollMargin, METH_VARARGS, doc_QAbstractItemView_setAutoScrollMargin},
    {sipName_setCurrentIndex, meth_QAbstractItemView_setCurrentIndex, METH_VARARGS, doc_QAbstractItemView_setCurrentIndex},
    {sipName_setDefaultDropAction, meth_QAbstractItemView_setDefaultDropAction, METH_VARARGS, doc_QAbstractItemView_setDefaultDropAction},
    {sipName_setDirtyRegion, meth_QAbstractItemView_setDirtyRegion, METH_VARARGS, doc_QAbstractItemView_setDirtyRegion},
    {sipName_setDragDropMode, meth_QAbstractItemView_setDragDropMode, METH_VARARGS, doc_QAbstractItemView_setDragDropMode},
    {sipName_setDragDropOverwriteMode, meth_QAbstractItemView_setDragDropOverwriteMode, METH_VARARGS, doc_QAbstractItemView_setDragDropOverwriteMode},
    {sipName_setDragEnabled, meth_QAbstractItemView_setDragEnabled, METH_VARARGS, doc_QAbstractItemView_setDragEnabled},
    {sipName_setDropIndicatorShown, meth_QAbstractItemView_setDropIndicatorShown, METH_VARARGS, doc_QAbstractItemView_setDropIndicatorShown},
    {sipName_setEditTriggers, meth_QAbstractItemView_setEditTriggers, METH_VARARGS, doc_QAbstractItemView_setEditTriggers},
    {sipName_setHorizontalScrollMode, meth_QAbstractItemView_setHorizontalScrollMode, METH_VARARGS, doc_QAbstractItemView_setHorizontalScrollMode},
    {sipName_setIconSize, meth_QAbstractItemView_setIconSize, METH_VARARGS, doc_QAbstractItemView_setIconSize},
    {sipName_setIndexWidget, meth_QAbstractItemView_setIndexWidget, METH_VARARGS, doc_QAbstractItemView_setIndexWidget},
    {sipName_setItemDelegate, meth_QAbstractItemView_setItemDelegate, METH_VARARGS, doc_QAbstractItemView_setItemDelegate},
    {sipName_setItemDelegateForColumn, meth_QAbstractItemView_setItemDelegateForColumn, METH_VARARGS, doc_QAbstractItemView_setItemDelegateForColumn},
    {sipName_setItemDelegateForRow, meth_QAbstractItemView_setItemDelegateForRow, METH_VARARGS, doc_QAbstractItemView_setItemDelegateForRow},
    {sipName_setModel, meth_QAbstractItemView_setModel, METH_VARARGS, doc_QAbstractItemView_setModel},
    {sipName_setRootIndex, meth_QAbstractItemView_setRootIndex, METH_VARARGS, doc_QAbstractItemView_setRootIndex},
    {sipName_setSelection, meth_QAbstractItemView_setSelection, METH_VARARGS, doc_QAbstractItemView_setSelection},
    {sipName_setSelectionBehavior, meth_QAbstractItemView_setSelectionBehavior, METH_VARARGS, doc_QAbstractItemView_setSelectionBehavior},
    {sipName_setSelectionMode, meth_QAbstractItemView_setSelectionMode, METH_VARARGS, doc_QAbstractItemView_setSelectionMode},
    {sipName_setSelectionModel, meth_QAbstractItemView_setSelectionModel, METH_VARARGS, doc_QAbstractItemView_setSelectionModel},
    {sipName_setState, meth_QAbstractItemView_setState, METH_VARARGS, doc_QAbstractItemView_setState},
    {sipName_setTabKeyNavigation, meth_QAbstractItemView_setTabKeyNavigation, METH_VARARGS, doc_QAbstractItemView_setTabKeyNavigation},
    {sipName_setTextElideMode, meth_QAbstractItemView_setTextElideMode, METH_VARARGS, doc_QAbstractItemView_setTextElideMode},
    {sipName_setVerticalScrollMode, meth_QAbstractItemView_setVerticalScrollMode, METH_VARARGS, doc_QAbstractItemView_setVerticalScrollMode},
    {sipName_showDropIndicator, meth_QAbstractItemView_showDropIndicator, METH_VARARGS, doc_QAbstractItemView_showDropIndicator},
    {sipName_sizeHintForColumn, meth_QAbstractItemView_sizeHintForColumn, METH_VARARGS, doc_QAbstractItemView_sizeHintForColumn},
    {sipName_sizeHintForIndex, meth_QAbstractItemView_sizeHintForIndex, METH_VARARGS, doc_QAbstractItemView_sizeHintForIndex},
    {sipName_sizeHintForRow, meth_QAbstractItemView_sizeHintForRow, METH_VARARGS, doc_QAbstractItemView_sizeHintForRow},
    {sipName_startDrag, meth_QAbstractItemView_startDrag, METH_VARARGS, doc_QAbstractItemView_startDrag},
    {sipName_state, meth_QAbstractItemView_state, METH_VARARGS, doc_QAbstractItemView_state},
    {sipName_tabKeyNavigation, meth_QAbstractItemView_tabKeyNavigation, METH_VARARGS, doc_QAbstractItemView_tabKeyNavigation},
    {sipName_textElideMode, meth_QAbstractItemView_textElideMode, METH_VARARGS, doc_QAbstractItemView_textElideMode},
    {sipName_timerEvent, meth_QAbstractItemView_timerEvent, METH_VARARGS, doc_QAbstractItemView_timerEvent},
    {sipName_update, meth_QAbstractItemView_update, METH_VARARGS, doc_QAbstractItemView_update},
    {sipName_updateEditorData, meth_QAbstractItemView_updateEditorData, METH_VARARGS, doc_QAbstractItemView_updateEditorData},
    {sipName_updateEditorGeometries, meth_QAbstractItemView_updateEditorGeometries, METH_VARARGS, doc_QAbstractItemView_updateEditorGeometries},
    {sipName_updateGeometries, meth_QAbstractItemView_updateGeometries, METH_VARARGS, doc_QAbstractItemView_updateGeometries},
    {sipName_verticalOffset, meth_QAbstractItemView_verticalOffset, METH_VARARGS, doc_QAbstractItemView_verticalOffset},
    {sipName_verticalScrollMode, meth_QAbstractItemView_verticalScrollMode, METH_VARARGS, doc_QAbstractItemView_verticalScrollMode},
    {sipName_verticalScrollbarAction, meth_QAbstractItemView_verticalScrollbarAction, METH_VARARGS, doc_QAbstractItemView_verticalScrollbarAction},
    {sipName_verticalScrollbarValueChanged, meth_QAbstractItemView_verticalScrollbarValueChanged, METH_VARARGS, doc_QAbstractItemView_verticalScrollbarValueChanged},
    {sipName_viewOptions, meth_QAbstractItemView_viewOptions, METH_VARARGS, doc_QAbstractItemView_viewOptions},
    {sipName_viewportEvent, meth_QAbstractItemView_viewportEvent, METH_VARARGS, doc_QAbstractItemView_viewportEvent},
    {sipName_viewportSizeHint, meth_QAbstractItemView_viewportSizeHint, METH_VARARGS, doc_QAbstractItemView_viewportSizeHint},
    {sipName_visualRect, meth_QAbstractItemView_visualRect, METH_VARARGS, doc_QAbstractItemView_visualRect},
    {sipName_visualRegionForSelection, meth_QAbstractItemView_visualRegionForSelection, METH_VARARGS, doc_QAbstractItemView_visualRegionForSelection}
};

static sipEnumMemberDef enummembers_QAbstractItemView[] = {
    {sipName_AboveItem, static_cast<int>( ::QAbstractItemView::AboveItem), 7},
    {sipName_AllEditTriggers, static_cast<int>( ::QAbstractItemView::AllEditTriggers), 8},
    {sipName_AnimatingState, static_cast<int>( ::QAbstractItemView::AnimatingState), 14},
    {sipName_AnyKeyPressed, static_cast<int>( ::QAbstractItemView::AnyKeyPressed), 8},
    {sipName_BelowItem, static_cast<int>( ::QAbstractItemView::BelowItem), 7},
    {sipName_CollapsingState, static_cast<int>( ::QAbstractItemView::CollapsingState), 14},
    {sipName_ContiguousSelection, static_cast<int>( ::QAbstractItemView::ContiguousSelection), 13},
    {sipName_CurrentChanged, static_cast<int>( ::QAbstractItemView::CurrentChanged), 8},
    {sipName_DoubleClicked, static_cast<int>( ::QAbstractItemView::DoubleClicked), 8},
    {sipName_DragDrop, static_cast<int>( ::QAbstractItemView::DragDrop), 6},
    {sipName_DragOnly, static_cast<int>( ::QAbstractItemView::DragOnly), 6},
    {sipName_DragSelectingState, static_cast<int>( ::QAbstractItemView::DragSelectingState), 14},
    {sipName_DraggingState, static_cast<int>( ::QAbstractItemView::DraggingState), 14},
    {sipName_DropOnly, static_cast<int>( ::QAbstractItemView::DropOnly), 6},
    {sipName_EditKeyPressed, static_cast<int>( ::QAbstractItemView::EditKeyPressed), 8},
    {sipName_EditingState, static_cast<int>( ::QAbstractItemView::EditingState), 14},
    {sipName_EnsureVisible, static_cast<int>( ::QAbstractItemView::EnsureVisible), 10},
    {sipName_ExpandingState, static_cast<int>( ::QAbstractItemView::ExpandingState), 14},
    {sipName_ExtendedSelection, static_cast<int>( ::QAbstractItemView::ExtendedSelection), 13},
    {sipName_InternalMove, static_cast<int>( ::QAbstractItemView::InternalMove), 6},
    {sipName_MoveDown, static_cast<int>( ::QAbstractItemView::MoveDown), 5},
    {sipName_MoveEnd, static_cast<int>( ::QAbstractItemView::MoveEnd), 5},
    {sipName_MoveHome, static_cast<int>( ::QAbstractItemView::MoveHome), 5},
    {sipName_MoveLeft, static_cast<int>( ::QAbstractItemView::MoveLeft), 5},
    {sipName_MoveNext, static_cast<int>( ::QAbstractItemView::MoveNext), 5},
    {sipName_MovePageDown, static_cast<int>( ::QAbstractItemView::MovePageDown), 5},
    {sipName_MovePageUp, static_cast<int>( ::QAbstractItemView::MovePageUp), 5},
    {sipName_MovePrevious, static_cast<int>( ::QAbstractItemView::MovePrevious), 5},
    {sipName_MoveRight, static_cast<int>( ::QAbstractItemView::MoveRight), 5},
    {sipName_MoveUp, static_cast<int>( ::QAbstractItemView::MoveUp), 5},
    {sipName_MultiSelection, static_cast<int>( ::QAbstractItemView::MultiSelection), 13},
    {sipName_NoDragDrop, static_cast<int>( ::QAbstractItemView::NoDragDrop), 6},
    {sipName_NoEditTriggers, static_cast<int>( ::QAbstractItemView::NoEditTriggers), 8},
    {sipName_NoSelection, static_cast<int>( ::QAbstractItemView::NoSelection), 13},
    {sipName_NoState, static_cast<int>( ::QAbstractItemView::NoState), 14},
    {sipName_OnItem, static_cast<int>( ::QAbstractItemView::OnItem), 7},
    {sipName_OnViewport, static_cast<int>( ::QAbstractItemView::OnViewport), 7},
    {sipName_PositionAtBottom, static_cast<int>( ::QAbstractItemView::PositionAtBottom), 10},
    {sipName_PositionAtCenter, static_cast<int>( ::QAbstractItemView::PositionAtCenter), 10},
    {sipName_PositionAtTop, static_cast<int>( ::QAbstractItemView::PositionAtTop), 10},
    {sipName_ScrollPerItem, static_cast<int>( ::QAbstractItemView::ScrollPerItem), 11},
    {sipName_ScrollPerPixel, static_cast<int>( ::QAbstractItemView::ScrollPerPixel), 11},
    {sipName_SelectColumns, static_cast<int>( ::QAbstractItemView::SelectColumns), 12},
    {sipName_SelectItems, static_cast<int>( ::QAbstractItemView::SelectItems), 12},
    {sipName_SelectRows, static_cast<int>( ::QAbstractItemView::SelectRows), 12},
    {sipName_SelectedClicked, static_cast<int>( ::QAbstractItemView::SelectedClicked), 8},
    {sipName_SingleSelection, static_cast<int>( ::QAbstractItemView::SingleSelection), 13},
};

PyDoc_STRVAR(doc_QAbstractItemView, "\1QAbstractItemView(parent: QWidget = None)");


/* Define this type's signals. */
static const pyqt5QtSignal signals_QAbstractItemView[] = {
    {"iconSizeChanged(QSize)", "\1iconSizeChanged(self, QSize)", SIP_NULLPTR, SIP_NULLPTR},
    {"viewportEntered()", "\1viewportEntered(self)", SIP_NULLPTR, SIP_NULLPTR},
    {"entered(QModelIndex)", "\1entered(self, QModelIndex)", SIP_NULLPTR, SIP_NULLPTR},
    {"activated(QModelIndex)", "\1activated(self, QModelIndex)", SIP_NULLPTR, SIP_NULLPTR},
    {"doubleClicked(QModelIndex)", "\1doubleClicked(self, QModelIndex)", SIP_NULLPTR, SIP_NULLPTR},
    {"clicked(QModelIndex)", "\1clicked(self, QModelIndex)", SIP_NULLPTR, SIP_NULLPTR},
    {"pressed(QModelIndex)", "\1pressed(self, QModelIndex)", SIP_NULLPTR, SIP_NULLPTR},
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
};


static pyqt5ClassPluginDef plugin_QAbstractItemView = {
    & ::QAbstractItemView::staticMetaObject,
    0,
    signals_QAbstractItemView,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtWidgets_QAbstractItemView = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QAbstractItemView,
        SIP_NULLPTR,
        &plugin_QAbstractItemView
    },
    {
        sipNameNr_QAbstractItemView,
        {0, 0, 1},
        120, methods_QAbstractItemView,
        47, enummembers_QAbstractItemView,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QAbstractItemView,
    -1,
    -1,
    supers_QAbstractItemView,
    SIP_NULLPTR,
    init_type_QAbstractItemView,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_QAbstractItemView,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    release_QAbstractItemView,
    cast_QAbstractItemView,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
