/*
 * Interface wrapper code.
 *
 * Generated by SIP 5.3.0
 *
 * Copyright (c) 2019 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicslinearlayout.sip"
#include <qgraphicslinearlayout.h>
#line 29 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsLinearLayout.cpp"

#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicslayoutitem.sip"
#include <qgraphicslayoutitem.h>
#line 33 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsLinearLayout.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 36 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsLinearLayout.cpp"
#line 97 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 39 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsLinearLayout.cpp"
#line 164 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 42 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsLinearLayout.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 45 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsLinearLayout.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 48 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsLinearLayout.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 51 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsLinearLayout.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 54 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsLinearLayout.cpp"


class sipQGraphicsLinearLayout : public  ::QGraphicsLinearLayout
{
public:
    sipQGraphicsLinearLayout( ::QGraphicsLayoutItem*);
    sipQGraphicsLinearLayout( ::Qt::Orientation, ::QGraphicsLayoutItem*);
    virtual ~sipQGraphicsLinearLayout();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
     ::QSizeF sizeHint( ::Qt::SizeHint,const  ::QSizeF&) const SIP_OVERRIDE;
    void updateGeometry() SIP_OVERRIDE;
    void getContentsMargins( ::qreal*, ::qreal*, ::qreal*, ::qreal*) const SIP_OVERRIDE;
    void setGeometry(const  ::QRectF&) SIP_OVERRIDE;
    void invalidate() SIP_OVERRIDE;
    void widgetEvent( ::QEvent*) SIP_OVERRIDE;
    int count() const SIP_OVERRIDE;
     ::QGraphicsLayoutItem* itemAt(int) const SIP_OVERRIDE;
    void removeAt(int) SIP_OVERRIDE;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsLinearLayout(const sipQGraphicsLinearLayout &);
    sipQGraphicsLinearLayout &operator = (const sipQGraphicsLinearLayout &);

    char sipPyMethods[9];
};

sipQGraphicsLinearLayout::sipQGraphicsLinearLayout( ::QGraphicsLayoutItem*a0):  ::QGraphicsLinearLayout(a0), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsLinearLayout::sipQGraphicsLinearLayout( ::Qt::Orientation a0, ::QGraphicsLayoutItem*a1):  ::QGraphicsLinearLayout(a0,a1), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsLinearLayout::~sipQGraphicsLinearLayout()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

 ::QSizeF sipQGraphicsLinearLayout::sizeHint( ::Qt::SizeHint a0,const  ::QSizeF& a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[0]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_sizeHint);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[0]), sipPySelf, SIP_NULLPTR, sipName_sizeHint);
#endif

    if (!sipMeth)
        return  ::QGraphicsLinearLayout::sizeHint(a0,a1);

    extern  ::QSizeF sipVH_QtWidgets_140(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::Qt::SizeHint,const  ::QSizeF&);

    return sipVH_QtWidgets_140(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsLinearLayout::updateGeometry()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[1], &sipPySelf, SIP_NULLPTR, sipName_updateGeometry);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[1], sipPySelf, SIP_NULLPTR, sipName_updateGeometry);
#endif

    if (!sipMeth)
    {
         ::QGraphicsLinearLayout::updateGeometry();
        return;
    }

    extern void sipVH_QtWidgets_37(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_QtWidgets_37(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQGraphicsLinearLayout::getContentsMargins( ::qreal*a0, ::qreal*a1, ::qreal*a2, ::qreal*a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[2]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_getContentsMargins);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[2]), sipPySelf, SIP_NULLPTR, sipName_getContentsMargins);
#endif

    if (!sipMeth)
    {
         ::QGraphicsLinearLayout::getContentsMargins(a0,a1,a2,a3);
        return;
    }

    extern void sipVH_QtWidgets_139(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::qreal*, ::qreal*, ::qreal*, ::qreal*);

    sipVH_QtWidgets_139(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2, a3);
}

void sipQGraphicsLinearLayout::setGeometry(const  ::QRectF& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[3], &sipPySelf, SIP_NULLPTR, sipName_setGeometry);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[3], sipPySelf, SIP_NULLPTR, sipName_setGeometry);
#endif

    if (!sipMeth)
    {
         ::QGraphicsLinearLayout::setGeometry(a0);
        return;
    }

    extern void sipVH_QtWidgets_138(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QRectF&);

    sipVH_QtWidgets_138(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsLinearLayout::invalidate()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[4], &sipPySelf, SIP_NULLPTR, sipName_invalidate);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[4], sipPySelf, SIP_NULLPTR, sipName_invalidate);
#endif

    if (!sipMeth)
    {
         ::QGraphicsLinearLayout::invalidate();
        return;
    }

    extern void sipVH_QtWidgets_37(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_QtWidgets_37(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQGraphicsLinearLayout::widgetEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[5], &sipPySelf, SIP_NULLPTR, sipName_widgetEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[5], sipPySelf, SIP_NULLPTR, sipName_widgetEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsLinearLayout::widgetEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

int sipQGraphicsLinearLayout::count() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[6]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_count);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[6]), sipPySelf, SIP_NULLPTR, sipName_count);
#endif

    if (!sipMeth)
        return  ::QGraphicsLinearLayout::count();

    extern int sipVH_QtWidgets_8(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_8(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

 ::QGraphicsLayoutItem* sipQGraphicsLinearLayout::itemAt(int a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[7]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_itemAt);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[7]), sipPySelf, SIP_NULLPTR, sipName_itemAt);
#endif

    if (!sipMeth)
        return  ::QGraphicsLinearLayout::itemAt(a0);

    extern  ::QGraphicsLayoutItem* sipVH_QtWidgets_141(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    return sipVH_QtWidgets_141(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsLinearLayout::removeAt(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[8], &sipPySelf, SIP_NULLPTR, sipName_removeAt);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[8], sipPySelf, SIP_NULLPTR, sipName_removeAt);
#endif

    if (!sipMeth)
    {
         ::QGraphicsLinearLayout::removeAt(a0);
        return;
    }

    extern void sipVH_QtWidgets_59(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    sipVH_QtWidgets_59(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_setOrientation, "setOrientation(self, Qt.Orientation)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_setOrientation(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_setOrientation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::Qt::Orientation a0;
         ::QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, sipType_Qt_Orientation, &a0))
        {
            sipCpp->setOrientation(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_setOrientation, doc_QGraphicsLinearLayout_setOrientation);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_orientation, "orientation(self) -> Qt.Orientation");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_orientation(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_orientation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp))
        {
             ::Qt::Orientation sipRes;

            sipRes = sipCpp->orientation();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_Qt_Orientation);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_orientation, doc_QGraphicsLinearLayout_orientation);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_addItem, "addItem(self, QGraphicsLayoutItem)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_addItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_addItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsLayoutItem* a0;
         ::QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0))
        {
            sipCpp->addItem(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_addItem, doc_QGraphicsLinearLayout_addItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_addStretch, "addStretch(self, stretch: int = 1)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_addStretch(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_addStretch(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0 = 1;
         ::QGraphicsLinearLayout *sipCpp;

        static const char *sipKwdList[] = {
            sipName_stretch,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|i", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, &a0))
        {
            sipCpp->addStretch(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_addStretch, doc_QGraphicsLinearLayout_addStretch);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_insertItem, "insertItem(self, int, QGraphicsLayoutItem)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_insertItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_insertItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::QGraphicsLayoutItem* a1;
         ::QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiJ:", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, &a0, sipType_QGraphicsLayoutItem, &a1))
        {
            sipCpp->insertItem(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_insertItem, doc_QGraphicsLinearLayout_insertItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_insertStretch, "insertStretch(self, int, stretch: int = 1)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_insertStretch(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_insertStretch(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        int a1 = 1;
         ::QGraphicsLinearLayout *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_stretch,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bi|i", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, &a0, &a1))
        {
            sipCpp->insertStretch(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_insertStretch, doc_QGraphicsLinearLayout_insertStretch);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_removeItem, "removeItem(self, QGraphicsLayoutItem)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_removeItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_removeItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsLayoutItem* a0;
         ::QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ<", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0))
        {
            sipCpp->removeItem(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_removeItem, doc_QGraphicsLinearLayout_removeItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_removeAt, "removeAt(self, int)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_removeAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_removeAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int a0;
         ::QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, &a0))
        {
#line 42 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicslinearlayout.sip"
        // The ownership of any existing item must be passed back to Python.
        QGraphicsLayoutItem *itm;
        
        if (a0 < sipCpp->count())
            itm = sipCpp->itemAt(a0);
        else
            itm = 0;
        
        Py_BEGIN_ALLOW_THREADS
        sipSelfWasArg ? sipCpp->QGraphicsLinearLayout::removeAt(a0)
                      : sipCpp->removeAt(a0);
        Py_END_ALLOW_THREADS
        
        // The Qt documentation isn't quite correct as ownership isn't always passed
        // back to the caller.
        if (itm && !itm->parentLayoutItem())
        {
            PyObject *itmo = sipGetPyObject(itm, sipType_QGraphicsLayoutItem);
        
            if (itmo)
                sipTransferBack(itmo);
        }
#line 541 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsLinearLayout.cpp"

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_removeAt, doc_QGraphicsLinearLayout_removeAt);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_setSpacing, "setSpacing(self, float)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_setSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_setSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, &a0))
        {
            sipCpp->setSpacing(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_setSpacing, doc_QGraphicsLinearLayout_setSpacing);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_spacing, "spacing(self) -> float");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_spacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_spacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->spacing();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_spacing, doc_QGraphicsLinearLayout_spacing);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_setItemSpacing, "setItemSpacing(self, int, float)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_setItemSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_setItemSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::qreal a1;
         ::QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, &a0, &a1))
        {
            sipCpp->setItemSpacing(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_setItemSpacing, doc_QGraphicsLinearLayout_setItemSpacing);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_itemSpacing, "itemSpacing(self, int) -> float");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_itemSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_itemSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        const  ::QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, &a0))
        {
             ::qreal sipRes;

            sipRes = sipCpp->itemSpacing(a0);

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_itemSpacing, doc_QGraphicsLinearLayout_itemSpacing);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_setStretchFactor, "setStretchFactor(self, QGraphicsLayoutItem, int)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_setStretchFactor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_setStretchFactor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsLayoutItem* a0;
        int a1;
         ::QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8i", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0, &a1))
        {
            sipCpp->setStretchFactor(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_setStretchFactor, doc_QGraphicsLinearLayout_setStretchFactor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_stretchFactor, "stretchFactor(self, QGraphicsLayoutItem) -> int");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_stretchFactor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_stretchFactor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsLayoutItem* a0;
        const  ::QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0))
        {
            int sipRes;

            sipRes = sipCpp->stretchFactor(a0);

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_stretchFactor, doc_QGraphicsLinearLayout_stretchFactor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_setAlignment, "setAlignment(self, QGraphicsLayoutItem, Union[Qt.Alignment, Qt.AlignmentFlag])");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_setAlignment(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_setAlignment(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsLayoutItem* a0;
         ::Qt::Alignment* a1;
        int a1State = 0;
         ::QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J1", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0, sipType_Qt_Alignment, &a1, &a1State))
        {
            sipCpp->setAlignment(a0,*a1);
            sipReleaseType(a1,sipType_Qt_Alignment,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_setAlignment, doc_QGraphicsLinearLayout_setAlignment);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_alignment, "alignment(self, QGraphicsLayoutItem) -> Qt.Alignment");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_alignment(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_alignment(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsLayoutItem* a0;
        const  ::QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0))
        {
             ::Qt::Alignment*sipRes;

            sipRes = new  ::Qt::Alignment(sipCpp->alignment(a0));

            return sipConvertFromNewType(sipRes,sipType_Qt_Alignment,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_alignment, doc_QGraphicsLinearLayout_alignment);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_setGeometry, "setGeometry(self, QRectF)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_setGeometry(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_setGeometry(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QRectF* a0;
         ::QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, sipType_QRectF, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsLinearLayout::setGeometry(*a0) : sipCpp->setGeometry(*a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_setGeometry, doc_QGraphicsLinearLayout_setGeometry);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_count, "count(self) -> int");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_count(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_count(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp))
        {
            int sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsLinearLayout::count() : sipCpp->count());

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_count, doc_QGraphicsLinearLayout_count);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_itemAt, "itemAt(self, int) -> QGraphicsLayoutItem");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_itemAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_itemAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int a0;
        const  ::QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, &a0))
        {
             ::QGraphicsLayoutItem*sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsLinearLayout::itemAt(a0) : sipCpp->itemAt(a0));

            return sipConvertFromType(sipRes,sipType_QGraphicsLayoutItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_itemAt, doc_QGraphicsLinearLayout_itemAt);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_invalidate, "invalidate(self)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_invalidate(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_invalidate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsLinearLayout::invalidate() : sipCpp->invalidate());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_invalidate, doc_QGraphicsLinearLayout_invalidate);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_sizeHint, "sizeHint(self, Qt.SizeHint, constraint: QSizeF = QSizeF()) -> QSizeF");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_sizeHint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_sizeHint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::Qt::SizeHint a0;
        const  ::QSizeF& a1def = QSizeF();
        const  ::QSizeF* a1 = &a1def;
        const  ::QGraphicsLinearLayout *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_constraint,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BE|J9", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, sipType_Qt_SizeHint, &a0, sipType_QSizeF, &a1))
        {
             ::QSizeF*sipRes;

            sipRes = new  ::QSizeF((sipSelfWasArg ? sipCpp-> ::QGraphicsLinearLayout::sizeHint(a0,*a1) : sipCpp->sizeHint(a0,*a1)));

            return sipConvertFromNewType(sipRes,sipType_QSizeF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_sizeHint, doc_QGraphicsLinearLayout_sizeHint);

    return SIP_NULLPTR;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QGraphicsLinearLayout(void *, const sipTypeDef *);}
static void *cast_QGraphicsLinearLayout(void *sipCppV, const sipTypeDef *targetType)
{
     ::QGraphicsLinearLayout *sipCpp = reinterpret_cast< ::QGraphicsLinearLayout *>(sipCppV);

    if (targetType == sipType_QGraphicsLayout)
        return static_cast< ::QGraphicsLayout *>(sipCpp);

    if (targetType == sipType_QGraphicsLayoutItem)
        return static_cast< ::QGraphicsLayoutItem *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsLinearLayout(void *, int);}
static void release_QGraphicsLinearLayout(void *sipCppV, int sipState)
{
    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQGraphicsLinearLayout *>(sipCppV);
    else
        delete reinterpret_cast< ::QGraphicsLinearLayout *>(sipCppV);
}


extern "C" {static void *array_QGraphicsLinearLayout(Py_ssize_t);}
static void *array_QGraphicsLinearLayout(Py_ssize_t sipNrElem)
{
    return new  ::QGraphicsLinearLayout[sipNrElem];
}


extern "C" {static void dealloc_QGraphicsLinearLayout(sipSimpleWrapper *);}
static void dealloc_QGraphicsLinearLayout(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQGraphicsLinearLayout *>(sipGetAddress(sipSelf))->sipPySelf = SIP_NULLPTR;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QGraphicsLinearLayout(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QGraphicsLinearLayout(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QGraphicsLinearLayout(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsLinearLayout *sipCpp = SIP_NULLPTR;

    {
         ::QGraphicsLayoutItem* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QGraphicsLayoutItem, &a0, sipOwner))
        {
            sipCpp = new sipQGraphicsLinearLayout(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
         ::Qt::Orientation a0;
         ::QGraphicsLayoutItem* a1 = 0;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "E|JH", sipType_Qt_Orientation, &a0, sipType_QGraphicsLayoutItem, &a1, sipOwner))
        {
            sipCpp = new sipQGraphicsLinearLayout(a0,a1);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QGraphicsLinearLayout[] = {{130, 255, 1}};


static PyMethodDef methods_QGraphicsLinearLayout[] = {
    {sipName_addItem, meth_QGraphicsLinearLayout_addItem, METH_VARARGS, doc_QGraphicsLinearLayout_addItem},
    {sipName_addStretch, SIP_MLMETH_CAST(meth_QGraphicsLinearLayout_addStretch), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsLinearLayout_addStretch},
    {sipName_alignment, meth_QGraphicsLinearLayout_alignment, METH_VARARGS, doc_QGraphicsLinearLayout_alignment},
    {sipName_count, meth_QGraphicsLinearLayout_count, METH_VARARGS, doc_QGraphicsLinearLayout_count},
    {sipName_insertItem, meth_QGraphicsLinearLayout_insertItem, METH_VARARGS, doc_QGraphicsLinearLayout_insertItem},
    {sipName_insertStretch, SIP_MLMETH_CAST(meth_QGraphicsLinearLayout_insertStretch), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsLinearLayout_insertStretch},
    {sipName_invalidate, meth_QGraphicsLinearLayout_invalidate, METH_VARARGS, doc_QGraphicsLinearLayout_invalidate},
    {sipName_itemAt, meth_QGraphicsLinearLayout_itemAt, METH_VARARGS, doc_QGraphicsLinearLayout_itemAt},
    {sipName_itemSpacing, meth_QGraphicsLinearLayout_itemSpacing, METH_VARARGS, doc_QGraphicsLinearLayout_itemSpacing},
    {sipName_orientation, meth_QGraphicsLinearLayout_orientation, METH_VARARGS, doc_QGraphicsLinearLayout_orientation},
    {sipName_removeAt, meth_QGraphicsLinearLayout_removeAt, METH_VARARGS, doc_QGraphicsLinearLayout_removeAt},
    {sipName_removeItem, meth_QGraphicsLinearLayout_removeItem, METH_VARARGS, doc_QGraphicsLinearLayout_removeItem},
    {sipName_setAlignment, meth_QGraphicsLinearLayout_setAlignment, METH_VARARGS, doc_QGraphicsLinearLayout_setAlignment},
    {sipName_setGeometry, meth_QGraphicsLinearLayout_setGeometry, METH_VARARGS, doc_QGraphicsLinearLayout_setGeometry},
    {sipName_setItemSpacing, meth_QGraphicsLinearLayout_setItemSpacing, METH_VARARGS, doc_QGraphicsLinearLayout_setItemSpacing},
    {sipName_setOrientation, meth_QGraphicsLinearLayout_setOrientation, METH_VARARGS, doc_QGraphicsLinearLayout_setOrientation},
    {sipName_setSpacing, meth_QGraphicsLinearLayout_setSpacing, METH_VARARGS, doc_QGraphicsLinearLayout_setSpacing},
    {sipName_setStretchFactor, meth_QGraphicsLinearLayout_setStretchFactor, METH_VARARGS, doc_QGraphicsLinearLayout_setStretchFactor},
    {sipName_sizeHint, SIP_MLMETH_CAST(meth_QGraphicsLinearLayout_sizeHint), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsLinearLayout_sizeHint},
    {sipName_spacing, meth_QGraphicsLinearLayout_spacing, METH_VARARGS, doc_QGraphicsLinearLayout_spacing},
    {sipName_stretchFactor, meth_QGraphicsLinearLayout_stretchFactor, METH_VARARGS, doc_QGraphicsLinearLayout_stretchFactor}
};

PyDoc_STRVAR(doc_QGraphicsLinearLayout, "\1QGraphicsLinearLayout(parent: QGraphicsLayoutItem = None)\n"
"QGraphicsLinearLayout(Qt.Orientation, parent: QGraphicsLayoutItem = None)");


static pyqt5ClassPluginDef plugin_QGraphicsLinearLayout = {
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtWidgets_QGraphicsLinearLayout = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsLinearLayout,
        SIP_NULLPTR,
        &plugin_QGraphicsLinearLayout
    },
    {
        sipNameNr_QGraphicsLinearLayout,
        {0, 0, 1},
        21, methods_QGraphicsLinearLayout,
        0, SIP_NULLPTR,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QGraphicsLinearLayout,
    -1,
    -1,
    supers_QGraphicsLinearLayout,
    SIP_NULLPTR,
    init_type_QGraphicsLinearLayout,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_QGraphicsLinearLayout,
    SIP_NULLPTR,
    array_QGraphicsLinearLayout,
    SIP_NULLPTR,
    release_QGraphicsLinearLayout,
    cast_QGraphicsLinearLayout,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
