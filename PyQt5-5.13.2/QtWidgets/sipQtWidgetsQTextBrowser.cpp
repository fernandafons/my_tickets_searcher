/*
 * Interface wrapper code.
 *
 * Generated by SIP 5.3.0
 *
 * Copyright (c) 2019 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qtextbrowser.sip"
#include <qtextbrowser.h>
#line 29 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"

#line 28 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 33 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 96 "sip/QtCore/qurl.sip"
#include <qurl.h>
#line 36 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 39 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 389 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 42 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 375 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 45 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 205 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 48 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 354 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 51 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 54 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 57 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 36 "sip/QtCore/qstringlist.sip"
#include <qstringlist.h>
#line 60 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtGui/qcolor.sip"
#include <qcolor.h>
#line 63 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 66 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 500 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 69 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qmimedata.sip"
#include <qmimedata.h>
#line 72 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 253 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 75 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 451 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 78 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 561 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 81 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 583 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 84 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 610 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 87 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 599 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 90 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 473 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 93 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 416 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 96 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 235 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 99 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 261 "sip/QtGui/qtextformat.sip"
#include <qtextformat.h>
#line 102 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 105 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtGui/qfont.sip"
#include <qfont.h>
#line 108 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtGui/qpagedpaintdevice.sip"
#include <qpagedpaintdevice.h>
#line 111 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtGui/qtextcursor.sip"
#include <qtextcursor.h>
#line 114 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 117 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qtextedit.sip"
#include <qtextedit.h>
#line 33 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qtextedit.sip"
#include <qtextedit.h>
#line 122 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 125 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 128 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 131 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qmenu.sip"
#include <qmenu.h>
#line 134 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 36 "sip/QtGui/qtextdocument.sip"
#include <qtextdocument.h>
#line 137 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 140 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtGui/qtextoption.sip"
#include <qtextoption.h>
#line 143 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qtextedit.sip"
#include <qtextedit.h>
#line 146 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qtextedit.sip"
#include <qtextedit.h>
#line 149 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 36 "sip/QtGui/qtextdocument.sip"
#include <qtextdocument.h>
#line 152 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qabstractscrollarea.sip"
#include <qabstractscrollarea.h>
#line 155 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 158 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qscrollbar.sip"
#include <qscrollbar.h>
#line 161 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 28 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 164 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 167 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qmargins.sip"
#include <qmargins.h>
#line 170 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 208 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qstyleoption.sip"
#include <qstyleoption.h>
#line 173 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 176 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qframe.sip"
#include <qframe.h>
#line 179 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtGui/qicon.sip"
#include <qicon.h>
#line 182 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 30 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 185 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtGui/qwindow.sip"
#include <qwindow.h>
#line 188 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 191 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtGui/qpixmap.sip"
#include <qpixmap.h>
#line 194 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 197 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 200 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 203 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsproxywidget.sip"
#include <qgraphicsproxywidget.h>
#line 206 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 189 "sip/QtCore/qglobal.sip"
#include <QtGlobal>
#line 209 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qlocale.sip"
#include <qlocale.h>
#line 212 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtGui/qpaintdevice.sip"
#include <qpaintdevice.h>
#line 215 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtGui/qregion.sip"
#include <qregion.h>
#line 218 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 28 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 221 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtGui/qfontinfo.sip"
#include <qfontinfo.h>
#line 224 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtGui/qfontmetrics.sip"
#include <qfontmetrics.h>
#line 227 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 462 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 230 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 666 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 233 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 296 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 236 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 429 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 239 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 403 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 242 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 52 "sip/QtGui/qpaintengine.sip"
#include <qpaintengine.h>
#line 245 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 248 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qaction.sip"
#include <qaction.h>
#line 251 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qlayout.sip"
#include <qlayout.h>
#line 254 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 257 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 260 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtGui/qkeysequence.sip"
#include <qkeysequence.h>
#line 263 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 266 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtGui/qbitmap.sip"
#include <qbitmap.h>
#line 269 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtGui/qpalette.sip"
#include <qpalette.h>
#line 272 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qstyle.sip"
#include <qstyle.h>
#line 275 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 146 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 280 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 283 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 247 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 286 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 289 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 292 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 295 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 298 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 301 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 304 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQTextBrowser.cpp"


class sipQTextBrowser : public  ::QTextBrowser
{
public:
    sipQTextBrowser( ::QWidget*);
    virtual ~sipQTextBrowser();

    int qt_metacall(QMetaObject::Call, int, void **) SIP_OVERRIDE;
    void *qt_metacast(const char *) SIP_OVERRIDE;
    const QMetaObject *metaObject() const SIP_OVERRIDE;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void reload() SIP_OVERRIDE;
    void home() SIP_OVERRIDE;
    void forward() SIP_OVERRIDE;
    void backward() SIP_OVERRIDE;
    void setSource(const  ::QUrl&) SIP_OVERRIDE;
    void setupViewport( ::QWidget*) SIP_OVERRIDE;
    void scrollContentsBy(int,int) SIP_OVERRIDE;
    bool viewportEvent( ::QEvent*) SIP_OVERRIDE;
     ::QSize viewportSizeHint() const SIP_OVERRIDE;
    void initPainter( ::QPainter*) const SIP_OVERRIDE;
     ::QPainter* sharedPainter() const SIP_OVERRIDE;
    bool nativeEvent(const  ::QByteArray&,void*,long*) SIP_OVERRIDE;
    bool hasHeightForWidth() const SIP_OVERRIDE;
    bool focusNextPrevChild(bool) SIP_OVERRIDE;
     ::QVariant inputMethodQuery( ::Qt::InputMethodQuery) const SIP_OVERRIDE;
    void inputMethodEvent( ::QInputMethodEvent*) SIP_OVERRIDE;
    void changeEvent( ::QEvent*) SIP_OVERRIDE;
    void hideEvent( ::QHideEvent*) SIP_OVERRIDE;
    void showEvent( ::QShowEvent*) SIP_OVERRIDE;
    void dropEvent( ::QDropEvent*) SIP_OVERRIDE;
    void dragLeaveEvent( ::QDragLeaveEvent*) SIP_OVERRIDE;
    void dragMoveEvent( ::QDragMoveEvent*) SIP_OVERRIDE;
    void dragEnterEvent( ::QDragEnterEvent*) SIP_OVERRIDE;
    void actionEvent( ::QActionEvent*) SIP_OVERRIDE;
    void tabletEvent( ::QTabletEvent*) SIP_OVERRIDE;
    void contextMenuEvent( ::QContextMenuEvent*) SIP_OVERRIDE;
    void closeEvent( ::QCloseEvent*) SIP_OVERRIDE;
    void resizeEvent( ::QResizeEvent*) SIP_OVERRIDE;
    void moveEvent( ::QMoveEvent*) SIP_OVERRIDE;
    void paintEvent( ::QPaintEvent*) SIP_OVERRIDE;
    void leaveEvent( ::QEvent*) SIP_OVERRIDE;
    void enterEvent( ::QEvent*) SIP_OVERRIDE;
    void focusOutEvent( ::QFocusEvent*) SIP_OVERRIDE;
    void focusInEvent( ::QFocusEvent*) SIP_OVERRIDE;
    void keyReleaseEvent( ::QKeyEvent*) SIP_OVERRIDE;
    void keyPressEvent( ::QKeyEvent*) SIP_OVERRIDE;
    void wheelEvent( ::QWheelEvent*) SIP_OVERRIDE;
    void mouseMoveEvent( ::QMouseEvent*) SIP_OVERRIDE;
    void mouseDoubleClickEvent( ::QMouseEvent*) SIP_OVERRIDE;
    void mouseReleaseEvent( ::QMouseEvent*) SIP_OVERRIDE;
    void mousePressEvent( ::QMouseEvent*) SIP_OVERRIDE;
    int heightForWidth(int) const SIP_OVERRIDE;
     ::QSize minimumSizeHint() const SIP_OVERRIDE;
     ::QSize sizeHint() const SIP_OVERRIDE;
    void setVisible(bool) SIP_OVERRIDE;
    int devType() const SIP_OVERRIDE;
     ::QPaintEngine* paintEngine() const SIP_OVERRIDE;
    int metric( ::QPaintDevice::PaintDeviceMetric) const SIP_OVERRIDE;
    bool event( ::QEvent*) SIP_OVERRIDE;
    bool eventFilter( ::QObject*, ::QEvent*) SIP_OVERRIDE;
    void timerEvent( ::QTimerEvent*) SIP_OVERRIDE;
    void childEvent( ::QChildEvent*) SIP_OVERRIDE;
    void customEvent( ::QEvent*) SIP_OVERRIDE;
    void connectNotify(const  ::QMetaMethod&) SIP_OVERRIDE;
    void disconnectNotify(const  ::QMetaMethod&) SIP_OVERRIDE;
     ::QVariant loadResource(int,const  ::QUrl&) SIP_OVERRIDE;
     ::QMimeData* createMimeDataFromSelection() const SIP_OVERRIDE;
    bool canInsertFromMimeData(const  ::QMimeData*) const SIP_OVERRIDE;
    void insertFromMimeData(const  ::QMimeData*) SIP_OVERRIDE;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQTextBrowser(const sipQTextBrowser &);
    sipQTextBrowser &operator = (const sipQTextBrowser &);

    char sipPyMethods[59];
};

sipQTextBrowser::sipQTextBrowser( ::QWidget*a0):  ::QTextBrowser(a0), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQTextBrowser::~sipQTextBrowser()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

const QMetaObject *sipQTextBrowser::metaObject() const
{
    if (sipGetInterpreter())
        return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_QtWidgets_qt_metaobject(sipPySelf,sipType_QTextBrowser);

    return  ::QTextBrowser::metaObject();
}

int sipQTextBrowser::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id =  ::QTextBrowser::qt_metacall(_c,_id,_a);

    if (_id >= 0)
    {
        SIP_BLOCK_THREADS
        _id = sip_QtWidgets_qt_metacall(sipPySelf,sipType_QTextBrowser,_c,_id,_a);
        SIP_UNBLOCK_THREADS
    }

    return _id;
}

void *sipQTextBrowser::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_QtWidgets_qt_metacast(sipPySelf, sipType_QTextBrowser, _clname, &sipCpp) ? sipCpp :  ::QTextBrowser::qt_metacast(_clname));
}

void sipQTextBrowser::reload()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[0], &sipPySelf, SIP_NULLPTR, sipName_reload);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[0], sipPySelf, SIP_NULLPTR, sipName_reload);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::reload();
        return;
    }

    extern void sipVH_QtWidgets_37(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_QtWidgets_37(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQTextBrowser::home()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[1], &sipPySelf, SIP_NULLPTR, sipName_home);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[1], sipPySelf, SIP_NULLPTR, sipName_home);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::home();
        return;
    }

    extern void sipVH_QtWidgets_37(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_QtWidgets_37(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQTextBrowser::forward()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[2], &sipPySelf, SIP_NULLPTR, sipName_forward);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[2], sipPySelf, SIP_NULLPTR, sipName_forward);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::forward();
        return;
    }

    extern void sipVH_QtWidgets_37(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_QtWidgets_37(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQTextBrowser::backward()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[3], &sipPySelf, SIP_NULLPTR, sipName_backward);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[3], sipPySelf, SIP_NULLPTR, sipName_backward);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::backward();
        return;
    }

    extern void sipVH_QtWidgets_37(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_QtWidgets_37(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQTextBrowser::setSource(const  ::QUrl& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[4], &sipPySelf, SIP_NULLPTR, sipName_setSource);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[4], sipPySelf, SIP_NULLPTR, sipName_setSource);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::setSource(a0);
        return;
    }

    extern void sipVH_QtWidgets_207(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QUrl&);

    sipVH_QtWidgets_207(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::setupViewport( ::QWidget*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[5], &sipPySelf, SIP_NULLPTR, sipName_setupViewport);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[5], sipPySelf, SIP_NULLPTR, sipName_setupViewport);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::setupViewport(a0);
        return;
    }

    extern void sipVH_QtWidgets_47(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QWidget*);

    sipVH_QtWidgets_47(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::scrollContentsBy(int a0,int a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[6], &sipPySelf, SIP_NULLPTR, sipName_scrollContentsBy);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[6], sipPySelf, SIP_NULLPTR, sipName_scrollContentsBy);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::scrollContentsBy(a0,a1);
        return;
    }

    extern void sipVH_QtWidgets_46(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int,int);

    sipVH_QtWidgets_46(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQTextBrowser::viewportEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[7], &sipPySelf, SIP_NULLPTR, sipName_viewportEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[7], sipPySelf, SIP_NULLPTR, sipName_viewportEvent);
#endif

    if (!sipMeth)
        return  ::QTextBrowser::viewportEvent(a0);

    extern bool sipVH_QtWidgets_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtWidgets_5(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QSize sipQTextBrowser::viewportSizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[8]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_viewportSizeHint);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[8]), sipPySelf, SIP_NULLPTR, sipName_viewportSizeHint);
#endif

    if (!sipMeth)
        return  ::QTextBrowser::viewportSizeHint();

    extern  ::QSize sipVH_QtWidgets_10(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_10(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQTextBrowser::initPainter( ::QPainter*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[9]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_initPainter);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[9]), sipPySelf, SIP_NULLPTR, sipName_initPainter);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::initPainter(a0);
        return;
    }

    extern void sipVH_QtWidgets_35(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPainter*);

    sipVH_QtWidgets_35(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QPainter* sipQTextBrowser::sharedPainter() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[10]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_sharedPainter);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[10]), sipPySelf, SIP_NULLPTR, sipName_sharedPainter);
#endif

    if (!sipMeth)
        return  ::QTextBrowser::sharedPainter();

    extern  ::QPainter* sipVH_QtWidgets_34(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_34(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

bool sipQTextBrowser::nativeEvent(const  ::QByteArray& a0,void*a1,long*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[11], &sipPySelf, SIP_NULLPTR, sipName_nativeEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[11], sipPySelf, SIP_NULLPTR, sipName_nativeEvent);
#endif

    if (!sipMeth)
        return  ::QTextBrowser::nativeEvent(a0,a1,a2);

    extern bool sipVH_QtWidgets_33(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QByteArray&,void*,long*);

    return sipVH_QtWidgets_33(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

bool sipQTextBrowser::hasHeightForWidth() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[12]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_hasHeightForWidth);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[12]), sipPySelf, SIP_NULLPTR, sipName_hasHeightForWidth);
#endif

    if (!sipMeth)
        return  ::QTextBrowser::hasHeightForWidth();

    extern bool sipVH_QtWidgets_32(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_32(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

bool sipQTextBrowser::focusNextPrevChild(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[13], &sipPySelf, SIP_NULLPTR, sipName_focusNextPrevChild);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[13], sipPySelf, SIP_NULLPTR, sipName_focusNextPrevChild);
#endif

    if (!sipMeth)
        return  ::QTextBrowser::focusNextPrevChild(a0);

    extern bool sipVH_QtWidgets_31(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    return sipVH_QtWidgets_31(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QVariant sipQTextBrowser::inputMethodQuery( ::Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[14]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_inputMethodQuery);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[14]), sipPySelf, SIP_NULLPTR, sipName_inputMethodQuery);
#endif

    if (!sipMeth)
        return  ::QTextBrowser::inputMethodQuery(a0);

    extern  ::QVariant sipVH_QtWidgets_30(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::Qt::InputMethodQuery);

    return sipVH_QtWidgets_30(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::inputMethodEvent( ::QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[15], &sipPySelf, SIP_NULLPTR, sipName_inputMethodEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[15], sipPySelf, SIP_NULLPTR, sipName_inputMethodEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_29(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QInputMethodEvent*);

    sipVH_QtWidgets_29(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::changeEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[16], &sipPySelf, SIP_NULLPTR, sipName_changeEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[16], sipPySelf, SIP_NULLPTR, sipName_changeEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::changeEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::hideEvent( ::QHideEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[17], &sipPySelf, SIP_NULLPTR, sipName_hideEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[17], sipPySelf, SIP_NULLPTR, sipName_hideEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::hideEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_28(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QHideEvent*);

    sipVH_QtWidgets_28(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::showEvent( ::QShowEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[18], &sipPySelf, SIP_NULLPTR, sipName_showEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[18], sipPySelf, SIP_NULLPTR, sipName_showEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::showEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_27(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QShowEvent*);

    sipVH_QtWidgets_27(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::dropEvent( ::QDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[19], &sipPySelf, SIP_NULLPTR, sipName_dropEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[19], sipPySelf, SIP_NULLPTR, sipName_dropEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::dropEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_26(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QDropEvent*);

    sipVH_QtWidgets_26(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::dragLeaveEvent( ::QDragLeaveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[20], &sipPySelf, SIP_NULLPTR, sipName_dragLeaveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[20], sipPySelf, SIP_NULLPTR, sipName_dragLeaveEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_25(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QDragLeaveEvent*);

    sipVH_QtWidgets_25(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::dragMoveEvent( ::QDragMoveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[21], &sipPySelf, SIP_NULLPTR, sipName_dragMoveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[21], sipPySelf, SIP_NULLPTR, sipName_dragMoveEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_24(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QDragMoveEvent*);

    sipVH_QtWidgets_24(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::dragEnterEvent( ::QDragEnterEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[22], &sipPySelf, SIP_NULLPTR, sipName_dragEnterEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[22], sipPySelf, SIP_NULLPTR, sipName_dragEnterEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_23(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QDragEnterEvent*);

    sipVH_QtWidgets_23(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::actionEvent( ::QActionEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[23], &sipPySelf, SIP_NULLPTR, sipName_actionEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[23], sipPySelf, SIP_NULLPTR, sipName_actionEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::actionEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_22(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QActionEvent*);

    sipVH_QtWidgets_22(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::tabletEvent( ::QTabletEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[24], &sipPySelf, SIP_NULLPTR, sipName_tabletEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[24], sipPySelf, SIP_NULLPTR, sipName_tabletEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::tabletEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_21(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTabletEvent*);

    sipVH_QtWidgets_21(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::contextMenuEvent( ::QContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[25], &sipPySelf, SIP_NULLPTR, sipName_contextMenuEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[25], sipPySelf, SIP_NULLPTR, sipName_contextMenuEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_20(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QContextMenuEvent*);

    sipVH_QtWidgets_20(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::closeEvent( ::QCloseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[26], &sipPySelf, SIP_NULLPTR, sipName_closeEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[26], sipPySelf, SIP_NULLPTR, sipName_closeEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::closeEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_19(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QCloseEvent*);

    sipVH_QtWidgets_19(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::resizeEvent( ::QResizeEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[27], &sipPySelf, SIP_NULLPTR, sipName_resizeEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[27], sipPySelf, SIP_NULLPTR, sipName_resizeEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::resizeEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_18(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QResizeEvent*);

    sipVH_QtWidgets_18(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::moveEvent( ::QMoveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[28], &sipPySelf, SIP_NULLPTR, sipName_moveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[28], sipPySelf, SIP_NULLPTR, sipName_moveEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::moveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_17(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMoveEvent*);

    sipVH_QtWidgets_17(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::paintEvent( ::QPaintEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[29], &sipPySelf, SIP_NULLPTR, sipName_paintEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[29], sipPySelf, SIP_NULLPTR, sipName_paintEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::paintEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_16(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPaintEvent*);

    sipVH_QtWidgets_16(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::leaveEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[30], &sipPySelf, SIP_NULLPTR, sipName_leaveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[30], sipPySelf, SIP_NULLPTR, sipName_leaveEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::leaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::enterEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[31], &sipPySelf, SIP_NULLPTR, sipName_enterEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[31], sipPySelf, SIP_NULLPTR, sipName_enterEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::enterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::focusOutEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[32], &sipPySelf, SIP_NULLPTR, sipName_focusOutEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[32], sipPySelf, SIP_NULLPTR, sipName_focusOutEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::focusOutEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtWidgets_15(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::focusInEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[33], &sipPySelf, SIP_NULLPTR, sipName_focusInEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[33], sipPySelf, SIP_NULLPTR, sipName_focusInEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::focusInEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtWidgets_15(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::keyReleaseEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[34], &sipPySelf, SIP_NULLPTR, sipName_keyReleaseEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[34], sipPySelf, SIP_NULLPTR, sipName_keyReleaseEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::keyReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtWidgets_14(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::keyPressEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[35], &sipPySelf, SIP_NULLPTR, sipName_keyPressEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[35], sipPySelf, SIP_NULLPTR, sipName_keyPressEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::keyPressEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtWidgets_14(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::wheelEvent( ::QWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[36], &sipPySelf, SIP_NULLPTR, sipName_wheelEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[36], sipPySelf, SIP_NULLPTR, sipName_wheelEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_13(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QWheelEvent*);

    sipVH_QtWidgets_13(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::mouseMoveEvent( ::QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[37], &sipPySelf, SIP_NULLPTR, sipName_mouseMoveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[37], sipPySelf, SIP_NULLPTR, sipName_mouseMoveEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*);

    sipVH_QtWidgets_12(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::mouseDoubleClickEvent( ::QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[38], &sipPySelf, SIP_NULLPTR, sipName_mouseDoubleClickEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[38], sipPySelf, SIP_NULLPTR, sipName_mouseDoubleClickEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*);

    sipVH_QtWidgets_12(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::mouseReleaseEvent( ::QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[39], &sipPySelf, SIP_NULLPTR, sipName_mouseReleaseEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[39], sipPySelf, SIP_NULLPTR, sipName_mouseReleaseEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*);

    sipVH_QtWidgets_12(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::mousePressEvent( ::QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[40], &sipPySelf, SIP_NULLPTR, sipName_mousePressEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[40], sipPySelf, SIP_NULLPTR, sipName_mousePressEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*);

    sipVH_QtWidgets_12(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

int sipQTextBrowser::heightForWidth(int a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[41]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_heightForWidth);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[41]), sipPySelf, SIP_NULLPTR, sipName_heightForWidth);
#endif

    if (!sipMeth)
        return  ::QTextBrowser::heightForWidth(a0);

    extern int sipVH_QtWidgets_11(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    return sipVH_QtWidgets_11(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QSize sipQTextBrowser::minimumSizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[42]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_minimumSizeHint);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[42]), sipPySelf, SIP_NULLPTR, sipName_minimumSizeHint);
#endif

    if (!sipMeth)
        return  ::QTextBrowser::minimumSizeHint();

    extern  ::QSize sipVH_QtWidgets_10(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_10(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

 ::QSize sipQTextBrowser::sizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[43]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_sizeHint);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[43]), sipPySelf, SIP_NULLPTR, sipName_sizeHint);
#endif

    if (!sipMeth)
        return  ::QTextBrowser::sizeHint();

    extern  ::QSize sipVH_QtWidgets_10(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_10(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQTextBrowser::setVisible(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[44], &sipPySelf, SIP_NULLPTR, sipName_setVisible);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[44], sipPySelf, SIP_NULLPTR, sipName_setVisible);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::setVisible(a0);
        return;
    }

    extern void sipVH_QtWidgets_9(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    sipVH_QtWidgets_9(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

int sipQTextBrowser::devType() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[45]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_devType);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[45]), sipPySelf, SIP_NULLPTR, sipName_devType);
#endif

    if (!sipMeth)
        return  ::QTextBrowser::devType();

    extern int sipVH_QtWidgets_8(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_8(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

 ::QPaintEngine* sipQTextBrowser::paintEngine() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[46]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_paintEngine);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[46]), sipPySelf, SIP_NULLPTR, sipName_paintEngine);
#endif

    if (!sipMeth)
        return  ::QTextBrowser::paintEngine();

    extern  ::QPaintEngine* sipVH_QtWidgets_7(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_7(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

int sipQTextBrowser::metric( ::QPaintDevice::PaintDeviceMetric a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[47]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_metric);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[47]), sipPySelf, SIP_NULLPTR, sipName_metric);
#endif

    if (!sipMeth)
        return  ::QTextBrowser::metric(a0);

    extern int sipVH_QtWidgets_6(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPaintDevice::PaintDeviceMetric);

    return sipVH_QtWidgets_6(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQTextBrowser::event( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[48], &sipPySelf, SIP_NULLPTR, sipName_event);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[48], sipPySelf, SIP_NULLPTR, sipName_event);
#endif

    if (!sipMeth)
        return  ::QTextBrowser::event(a0);

    extern bool sipVH_QtWidgets_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtWidgets_5(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQTextBrowser::eventFilter( ::QObject*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[49], &sipPySelf, SIP_NULLPTR, sipName_eventFilter);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[49], sipPySelf, SIP_NULLPTR, sipName_eventFilter);
#endif

    if (!sipMeth)
        return  ::QTextBrowser::eventFilter(a0,a1);

    extern bool sipVH_QtWidgets_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QObject*, ::QEvent*);

    return sipVH_QtWidgets_4(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQTextBrowser::timerEvent( ::QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[50], &sipPySelf, SIP_NULLPTR, sipName_timerEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[50], sipPySelf, SIP_NULLPTR, sipName_timerEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::timerEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTimerEvent*);

    sipVH_QtWidgets_3(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::childEvent( ::QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[51], &sipPySelf, SIP_NULLPTR, sipName_childEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[51], sipPySelf, SIP_NULLPTR, sipName_childEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::childEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_2(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QChildEvent*);

    sipVH_QtWidgets_2(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::customEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[52], &sipPySelf, SIP_NULLPTR, sipName_customEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[52], sipPySelf, SIP_NULLPTR, sipName_customEvent);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::customEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::connectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[53], &sipPySelf, SIP_NULLPTR, sipName_connectNotify);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[53], sipPySelf, SIP_NULLPTR, sipName_connectNotify);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::connectNotify(a0);
        return;
    }

    extern void sipVH_QtWidgets_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtWidgets_0(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::disconnectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[54], &sipPySelf, SIP_NULLPTR, sipName_disconnectNotify);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[54], sipPySelf, SIP_NULLPTR, sipName_disconnectNotify);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::disconnectNotify(a0);
        return;
    }

    extern void sipVH_QtWidgets_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtWidgets_0(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QVariant sipQTextBrowser::loadResource(int a0,const  ::QUrl& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[55], &sipPySelf, SIP_NULLPTR, sipName_loadResource);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[55], sipPySelf, SIP_NULLPTR, sipName_loadResource);
#endif

    if (!sipMeth)
        return  ::QTextBrowser::loadResource(a0,a1);

    extern  ::QVariant sipVH_QtWidgets_183(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int,const  ::QUrl&);

    return sipVH_QtWidgets_183(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

 ::QMimeData* sipQTextBrowser::createMimeDataFromSelection() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[56]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_createMimeDataFromSelection);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[56]), sipPySelf, SIP_NULLPTR, sipName_createMimeDataFromSelection);
#endif

    if (!sipMeth)
        return  ::QTextBrowser::createMimeDataFromSelection();

    extern  ::QMimeData* sipVH_QtWidgets_184(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_184(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

bool sipQTextBrowser::canInsertFromMimeData(const  ::QMimeData*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[57]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_canInsertFromMimeData);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[57]), sipPySelf, SIP_NULLPTR, sipName_canInsertFromMimeData);
#endif

    if (!sipMeth)
        return  ::QTextBrowser::canInsertFromMimeData(a0);

    extern bool sipVH_QtWidgets_185(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMimeData*);

    return sipVH_QtWidgets_185(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQTextBrowser::insertFromMimeData(const  ::QMimeData*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[58], &sipPySelf, SIP_NULLPTR, sipName_insertFromMimeData);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[58], sipPySelf, SIP_NULLPTR, sipName_insertFromMimeData);
#endif

    if (!sipMeth)
    {
         ::QTextBrowser::insertFromMimeData(a0);
        return;
    }

    extern void sipVH_QtWidgets_186(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMimeData*);

    sipVH_QtWidgets_186(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QTextBrowser_source, "source(self) -> QUrl");

extern "C" {static PyObject *meth_QTextBrowser_source(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_source(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QTextBrowser, &sipCpp))
        {
             ::QUrl*sipRes;

            sipRes = new  ::QUrl(sipCpp->source());

            return sipConvertFromNewType(sipRes,sipType_QUrl,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_source, doc_QTextBrowser_source);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_searchPaths, "searchPaths(self) -> List[str]");

extern "C" {static PyObject *meth_QTextBrowser_searchPaths(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_searchPaths(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QTextBrowser, &sipCpp))
        {
             ::QStringList*sipRes;

            sipRes = new  ::QStringList(sipCpp->searchPaths());

            return sipConvertFromNewType(sipRes,sipType_QStringList,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_searchPaths, doc_QTextBrowser_searchPaths);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_setSearchPaths, "setSearchPaths(self, Iterable[str])");

extern "C" {static PyObject *meth_QTextBrowser_setSearchPaths(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_setSearchPaths(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QStringList* a0;
        int a0State = 0;
         ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QTextBrowser, &sipCpp, sipType_QStringList,&a0, &a0State))
        {
            sipCpp->setSearchPaths(*a0);
            sipReleaseType(const_cast< ::QStringList *>(a0),sipType_QStringList,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_setSearchPaths, doc_QTextBrowser_setSearchPaths);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_loadResource, "loadResource(self, int, QUrl) -> Any");

extern "C" {static PyObject *meth_QTextBrowser_loadResource(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_loadResource(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int a0;
        const  ::QUrl* a1;
         ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiJ9", &sipSelf, sipType_QTextBrowser, &sipCpp, &a0, sipType_QUrl, &a1))
        {
             ::QVariant*sipRes;

            sipRes = new  ::QVariant((sipSelfWasArg ? sipCpp-> ::QTextBrowser::loadResource(a0,*a1) : sipCpp->loadResource(a0,*a1)));

            return sipConvertFromNewType(sipRes,sipType_QVariant,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_loadResource, doc_QTextBrowser_loadResource);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_setSource, "setSource(self, QUrl)");

extern "C" {static PyObject *meth_QTextBrowser_setSource(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_setSource(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QUrl* a0;
         ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QTextBrowser, &sipCpp, sipType_QUrl, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QTextBrowser::setSource(*a0) : sipCpp->setSource(*a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_setSource, doc_QTextBrowser_setSource);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_backward, "backward(self)");

extern "C" {static PyObject *meth_QTextBrowser_backward(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_backward(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QTextBrowser, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp-> ::QTextBrowser::backward() : sipCpp->backward());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_backward, doc_QTextBrowser_backward);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_forward, "forward(self)");

extern "C" {static PyObject *meth_QTextBrowser_forward(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_forward(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QTextBrowser, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp-> ::QTextBrowser::forward() : sipCpp->forward());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_forward, doc_QTextBrowser_forward);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_home, "home(self)");

extern "C" {static PyObject *meth_QTextBrowser_home(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_home(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QTextBrowser, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp-> ::QTextBrowser::home() : sipCpp->home());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_home, doc_QTextBrowser_home);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_reload, "reload(self)");

extern "C" {static PyObject *meth_QTextBrowser_reload(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_reload(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QTextBrowser, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp-> ::QTextBrowser::reload() : sipCpp->reload());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_reload, doc_QTextBrowser_reload);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_event, "event(self, QEvent) -> bool");

extern "C" {static PyObject *meth_QTextBrowser_event(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_event(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
         ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QTextBrowser, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QTextBrowser::event(a0) : sipCpp->event(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_event, doc_QTextBrowser_event);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_keyPressEvent, "keyPressEvent(self, QKeyEvent)");

extern "C" {static PyObject *meth_QTextBrowser_keyPressEvent(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_keyPressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QKeyEvent* a0;
         ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QTextBrowser, &sipCpp, sipType_QKeyEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QTextBrowser::keyPressEvent(a0) : sipCpp->keyPressEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_keyPressEvent, doc_QTextBrowser_keyPressEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_mouseMoveEvent, "mouseMoveEvent(self, QMouseEvent)");

extern "C" {static PyObject *meth_QTextBrowser_mouseMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
         ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QTextBrowser, &sipCpp, sipType_QMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QTextBrowser::mouseMoveEvent(a0) : sipCpp->mouseMoveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_mouseMoveEvent, doc_QTextBrowser_mouseMoveEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_mousePressEvent, "mousePressEvent(self, QMouseEvent)");

extern "C" {static PyObject *meth_QTextBrowser_mousePressEvent(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
         ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QTextBrowser, &sipCpp, sipType_QMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QTextBrowser::mousePressEvent(a0) : sipCpp->mousePressEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_mousePressEvent, doc_QTextBrowser_mousePressEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_mouseReleaseEvent, "mouseReleaseEvent(self, QMouseEvent)");

extern "C" {static PyObject *meth_QTextBrowser_mouseReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
         ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QTextBrowser, &sipCpp, sipType_QMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QTextBrowser::mouseReleaseEvent(a0) : sipCpp->mouseReleaseEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_mouseReleaseEvent, doc_QTextBrowser_mouseReleaseEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_focusOutEvent, "focusOutEvent(self, QFocusEvent)");

extern "C" {static PyObject *meth_QTextBrowser_focusOutEvent(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_focusOutEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QFocusEvent* a0;
         ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QTextBrowser, &sipCpp, sipType_QFocusEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QTextBrowser::focusOutEvent(a0) : sipCpp->focusOutEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_focusOutEvent, doc_QTextBrowser_focusOutEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_focusNextPrevChild, "focusNextPrevChild(self, bool) -> bool");

extern "C" {static PyObject *meth_QTextBrowser_focusNextPrevChild(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_focusNextPrevChild(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        bool a0;
         ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pb", &sipSelf, sipType_QTextBrowser, &sipCpp, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QTextBrowser::focusNextPrevChild(a0) : sipCpp->focusNextPrevChild(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_focusNextPrevChild, doc_QTextBrowser_focusNextPrevChild);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_paintEvent, "paintEvent(self, QPaintEvent)");

extern "C" {static PyObject *meth_QTextBrowser_paintEvent(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_paintEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QPaintEvent* a0;
         ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QTextBrowser, &sipCpp, sipType_QPaintEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QTextBrowser::paintEvent(a0) : sipCpp->paintEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_paintEvent, doc_QTextBrowser_paintEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_isBackwardAvailable, "isBackwardAvailable(self) -> bool");

extern "C" {static PyObject *meth_QTextBrowser_isBackwardAvailable(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_isBackwardAvailable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QTextBrowser, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isBackwardAvailable();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_isBackwardAvailable, doc_QTextBrowser_isBackwardAvailable);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_isForwardAvailable, "isForwardAvailable(self) -> bool");

extern "C" {static PyObject *meth_QTextBrowser_isForwardAvailable(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_isForwardAvailable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QTextBrowser, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isForwardAvailable();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_isForwardAvailable, doc_QTextBrowser_isForwardAvailable);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_clearHistory, "clearHistory(self)");

extern "C" {static PyObject *meth_QTextBrowser_clearHistory(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_clearHistory(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QTextBrowser, &sipCpp))
        {
            sipCpp->clearHistory();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_clearHistory, doc_QTextBrowser_clearHistory);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_openExternalLinks, "openExternalLinks(self) -> bool");

extern "C" {static PyObject *meth_QTextBrowser_openExternalLinks(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_openExternalLinks(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QTextBrowser, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->openExternalLinks();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_openExternalLinks, doc_QTextBrowser_openExternalLinks);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_setOpenExternalLinks, "setOpenExternalLinks(self, bool)");

extern "C" {static PyObject *meth_QTextBrowser_setOpenExternalLinks(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_setOpenExternalLinks(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QTextBrowser, &sipCpp, &a0))
        {
            sipCpp->setOpenExternalLinks(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_setOpenExternalLinks, doc_QTextBrowser_setOpenExternalLinks);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_openLinks, "openLinks(self) -> bool");

extern "C" {static PyObject *meth_QTextBrowser_openLinks(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_openLinks(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QTextBrowser, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->openLinks();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_openLinks, doc_QTextBrowser_openLinks);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_setOpenLinks, "setOpenLinks(self, bool)");

extern "C" {static PyObject *meth_QTextBrowser_setOpenLinks(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_setOpenLinks(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QTextBrowser, &sipCpp, &a0))
        {
            sipCpp->setOpenLinks(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_setOpenLinks, doc_QTextBrowser_setOpenLinks);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_historyTitle, "historyTitle(self, int) -> str");

extern "C" {static PyObject *meth_QTextBrowser_historyTitle(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_historyTitle(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        const  ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QTextBrowser, &sipCpp, &a0))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->historyTitle(a0));

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_historyTitle, doc_QTextBrowser_historyTitle);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_historyUrl, "historyUrl(self, int) -> QUrl");

extern "C" {static PyObject *meth_QTextBrowser_historyUrl(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_historyUrl(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        const  ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QTextBrowser, &sipCpp, &a0))
        {
             ::QUrl*sipRes;

            sipRes = new  ::QUrl(sipCpp->historyUrl(a0));

            return sipConvertFromNewType(sipRes,sipType_QUrl,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_historyUrl, doc_QTextBrowser_historyUrl);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_backwardHistoryCount, "backwardHistoryCount(self) -> int");

extern "C" {static PyObject *meth_QTextBrowser_backwardHistoryCount(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_backwardHistoryCount(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QTextBrowser, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->backwardHistoryCount();

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_backwardHistoryCount, doc_QTextBrowser_backwardHistoryCount);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QTextBrowser_forwardHistoryCount, "forwardHistoryCount(self) -> int");

extern "C" {static PyObject *meth_QTextBrowser_forwardHistoryCount(PyObject *, PyObject *);}
static PyObject *meth_QTextBrowser_forwardHistoryCount(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QTextBrowser *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QTextBrowser, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->forwardHistoryCount();

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QTextBrowser, sipName_forwardHistoryCount, doc_QTextBrowser_forwardHistoryCount);

    return SIP_NULLPTR;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QTextBrowser(void *, const sipTypeDef *);}
static void *cast_QTextBrowser(void *sipCppV, const sipTypeDef *targetType)
{
     ::QTextBrowser *sipCpp = reinterpret_cast< ::QTextBrowser *>(sipCppV);

    if (targetType == sipType_QTextEdit)
        return static_cast< ::QTextEdit *>(sipCpp);

    if (targetType == sipType_QAbstractScrollArea)
        return static_cast< ::QAbstractScrollArea *>(sipCpp);

    if (targetType == sipType_QFrame)
        return static_cast< ::QFrame *>(sipCpp);

    if (targetType == sipType_QWidget)
        return static_cast< ::QWidget *>(sipCpp);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    if (targetType == sipType_QPaintDevice)
        return static_cast< ::QPaintDevice *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QTextBrowser(void *, int);}
static void release_QTextBrowser(void *sipCppV, int)
{
     ::QTextBrowser *sipCpp = reinterpret_cast< ::QTextBrowser *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void *array_QTextBrowser(Py_ssize_t);}
static void *array_QTextBrowser(Py_ssize_t sipNrElem)
{
    return new  ::QTextBrowser[sipNrElem];
}


extern "C" {static void dealloc_QTextBrowser(sipSimpleWrapper *);}
static void dealloc_QTextBrowser(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQTextBrowser *>(sipGetAddress(sipSelf))->sipPySelf = SIP_NULLPTR;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QTextBrowser(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QTextBrowser(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QTextBrowser(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQTextBrowser *sipCpp = SIP_NULLPTR;

    {
         ::QWidget* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QWidget, &a0, sipOwner))
        {
            sipCpp = new sipQTextBrowser(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QTextBrowser[] = {{433, 255, 1}};


static PyMethodDef methods_QTextBrowser[] = {
    {sipName_backward, meth_QTextBrowser_backward, METH_VARARGS, doc_QTextBrowser_backward},
    {sipName_backwardHistoryCount, meth_QTextBrowser_backwardHistoryCount, METH_VARARGS, doc_QTextBrowser_backwardHistoryCount},
    {sipName_clearHistory, meth_QTextBrowser_clearHistory, METH_VARARGS, doc_QTextBrowser_clearHistory},
    {sipName_event, meth_QTextBrowser_event, METH_VARARGS, doc_QTextBrowser_event},
    {sipName_focusNextPrevChild, meth_QTextBrowser_focusNextPrevChild, METH_VARARGS, doc_QTextBrowser_focusNextPrevChild},
    {sipName_focusOutEvent, meth_QTextBrowser_focusOutEvent, METH_VARARGS, doc_QTextBrowser_focusOutEvent},
    {sipName_forward, meth_QTextBrowser_forward, METH_VARARGS, doc_QTextBrowser_forward},
    {sipName_forwardHistoryCount, meth_QTextBrowser_forwardHistoryCount, METH_VARARGS, doc_QTextBrowser_forwardHistoryCount},
    {sipName_historyTitle, meth_QTextBrowser_historyTitle, METH_VARARGS, doc_QTextBrowser_historyTitle},
    {sipName_historyUrl, meth_QTextBrowser_historyUrl, METH_VARARGS, doc_QTextBrowser_historyUrl},
    {sipName_home, meth_QTextBrowser_home, METH_VARARGS, doc_QTextBrowser_home},
    {sipName_isBackwardAvailable, meth_QTextBrowser_isBackwardAvailable, METH_VARARGS, doc_QTextBrowser_isBackwardAvailable},
    {sipName_isForwardAvailable, meth_QTextBrowser_isForwardAvailable, METH_VARARGS, doc_QTextBrowser_isForwardAvailable},
    {sipName_keyPressEvent, meth_QTextBrowser_keyPressEvent, METH_VARARGS, doc_QTextBrowser_keyPressEvent},
    {sipName_loadResource, meth_QTextBrowser_loadResource, METH_VARARGS, doc_QTextBrowser_loadResource},
    {sipName_mouseMoveEvent, meth_QTextBrowser_mouseMoveEvent, METH_VARARGS, doc_QTextBrowser_mouseMoveEvent},
    {sipName_mousePressEvent, meth_QTextBrowser_mousePressEvent, METH_VARARGS, doc_QTextBrowser_mousePressEvent},
    {sipName_mouseReleaseEvent, meth_QTextBrowser_mouseReleaseEvent, METH_VARARGS, doc_QTextBrowser_mouseReleaseEvent},
    {sipName_openExternalLinks, meth_QTextBrowser_openExternalLinks, METH_VARARGS, doc_QTextBrowser_openExternalLinks},
    {sipName_openLinks, meth_QTextBrowser_openLinks, METH_VARARGS, doc_QTextBrowser_openLinks},
    {sipName_paintEvent, meth_QTextBrowser_paintEvent, METH_VARARGS, doc_QTextBrowser_paintEvent},
    {sipName_reload, meth_QTextBrowser_reload, METH_VARARGS, doc_QTextBrowser_reload},
    {sipName_searchPaths, meth_QTextBrowser_searchPaths, METH_VARARGS, doc_QTextBrowser_searchPaths},
    {sipName_setOpenExternalLinks, meth_QTextBrowser_setOpenExternalLinks, METH_VARARGS, doc_QTextBrowser_setOpenExternalLinks},
    {sipName_setOpenLinks, meth_QTextBrowser_setOpenLinks, METH_VARARGS, doc_QTextBrowser_setOpenLinks},
    {sipName_setSearchPaths, meth_QTextBrowser_setSearchPaths, METH_VARARGS, doc_QTextBrowser_setSearchPaths},
    {sipName_setSource, meth_QTextBrowser_setSource, METH_VARARGS, doc_QTextBrowser_setSource},
    {sipName_source, meth_QTextBrowser_source, METH_VARARGS, doc_QTextBrowser_source}
};

PyDoc_STRVAR(doc_QTextBrowser, "\1QTextBrowser(parent: QWidget = None)");


/* Define this type's signals. */
static const pyqt5QtSignal signals_QTextBrowser[] = {
    {"historyChanged()", "\1historyChanged(self)", SIP_NULLPTR, SIP_NULLPTR},
    {"anchorClicked(QUrl)", "\1anchorClicked(self, QUrl)", SIP_NULLPTR, SIP_NULLPTR},
    {"highlighted(QUrl)", "\1highlighted(self, QUrl)", SIP_NULLPTR, SIP_NULLPTR},
    {"highlighted(QString)", "\1highlighted(self, str)", SIP_NULLPTR, SIP_NULLPTR},
    {"sourceChanged(QUrl)", "\1sourceChanged(self, QUrl)", SIP_NULLPTR, SIP_NULLPTR},
    {"forwardAvailable(bool)", "\1forwardAvailable(self, bool)", SIP_NULLPTR, SIP_NULLPTR},
    {"backwardAvailable(bool)", "\1backwardAvailable(self, bool)", SIP_NULLPTR, SIP_NULLPTR},
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
};


static pyqt5ClassPluginDef plugin_QTextBrowser = {
    & ::QTextBrowser::staticMetaObject,
    0,
    signals_QTextBrowser,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtWidgets_QTextBrowser = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QTextBrowser,
        SIP_NULLPTR,
        &plugin_QTextBrowser
    },
    {
        sipNameNr_QTextBrowser,
        {0, 0, 1},
        28, methods_QTextBrowser,
        0, SIP_NULLPTR,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QTextBrowser,
    -1,
    -1,
    supers_QTextBrowser,
    SIP_NULLPTR,
    init_type_QTextBrowser,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_QTextBrowser,
    SIP_NULLPTR,
    array_QTextBrowser,
    SIP_NULLPTR,
    release_QTextBrowser,
    cast_QTextBrowser,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
