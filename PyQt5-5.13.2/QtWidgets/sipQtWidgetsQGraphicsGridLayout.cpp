/*
 * Interface wrapper code.
 *
 * Generated by SIP 5.3.0
 *
 * Copyright (c) 2019 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsgridlayout.sip"
#include <qgraphicsgridlayout.h>
#line 29 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsGridLayout.cpp"

#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicslayoutitem.sip"
#include <qgraphicslayoutitem.h>
#line 33 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsGridLayout.cpp"
#line 97 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 36 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsGridLayout.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 39 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsGridLayout.cpp"
#line 164 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 42 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsGridLayout.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 45 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsGridLayout.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 48 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsGridLayout.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 51 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsGridLayout.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 54 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsGridLayout.cpp"


class sipQGraphicsGridLayout : public  ::QGraphicsGridLayout
{
public:
    sipQGraphicsGridLayout( ::QGraphicsLayoutItem*);
    virtual ~sipQGraphicsGridLayout();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
     ::QSizeF sizeHint( ::Qt::SizeHint,const  ::QSizeF&) const SIP_OVERRIDE;
    void updateGeometry() SIP_OVERRIDE;
    void getContentsMargins( ::qreal*, ::qreal*, ::qreal*, ::qreal*) const SIP_OVERRIDE;
    void setGeometry(const  ::QRectF&) SIP_OVERRIDE;
    void invalidate() SIP_OVERRIDE;
    void widgetEvent( ::QEvent*) SIP_OVERRIDE;
    int count() const SIP_OVERRIDE;
     ::QGraphicsLayoutItem* itemAt(int) const SIP_OVERRIDE;
    void removeAt(int) SIP_OVERRIDE;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsGridLayout(const sipQGraphicsGridLayout &);
    sipQGraphicsGridLayout &operator = (const sipQGraphicsGridLayout &);

    char sipPyMethods[9];
};

sipQGraphicsGridLayout::sipQGraphicsGridLayout( ::QGraphicsLayoutItem*a0):  ::QGraphicsGridLayout(a0), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsGridLayout::~sipQGraphicsGridLayout()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

 ::QSizeF sipQGraphicsGridLayout::sizeHint( ::Qt::SizeHint a0,const  ::QSizeF& a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[0]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_sizeHint);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[0]), sipPySelf, SIP_NULLPTR, sipName_sizeHint);
#endif

    if (!sipMeth)
        return  ::QGraphicsGridLayout::sizeHint(a0,a1);

    extern  ::QSizeF sipVH_QtWidgets_140(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::Qt::SizeHint,const  ::QSizeF&);

    return sipVH_QtWidgets_140(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsGridLayout::updateGeometry()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[1], &sipPySelf, SIP_NULLPTR, sipName_updateGeometry);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[1], sipPySelf, SIP_NULLPTR, sipName_updateGeometry);
#endif

    if (!sipMeth)
    {
         ::QGraphicsGridLayout::updateGeometry();
        return;
    }

    extern void sipVH_QtWidgets_37(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_QtWidgets_37(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQGraphicsGridLayout::getContentsMargins( ::qreal*a0, ::qreal*a1, ::qreal*a2, ::qreal*a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[2]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_getContentsMargins);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[2]), sipPySelf, SIP_NULLPTR, sipName_getContentsMargins);
#endif

    if (!sipMeth)
    {
         ::QGraphicsGridLayout::getContentsMargins(a0,a1,a2,a3);
        return;
    }

    extern void sipVH_QtWidgets_139(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::qreal*, ::qreal*, ::qreal*, ::qreal*);

    sipVH_QtWidgets_139(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2, a3);
}

void sipQGraphicsGridLayout::setGeometry(const  ::QRectF& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[3], &sipPySelf, SIP_NULLPTR, sipName_setGeometry);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[3], sipPySelf, SIP_NULLPTR, sipName_setGeometry);
#endif

    if (!sipMeth)
    {
         ::QGraphicsGridLayout::setGeometry(a0);
        return;
    }

    extern void sipVH_QtWidgets_138(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QRectF&);

    sipVH_QtWidgets_138(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsGridLayout::invalidate()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[4], &sipPySelf, SIP_NULLPTR, sipName_invalidate);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[4], sipPySelf, SIP_NULLPTR, sipName_invalidate);
#endif

    if (!sipMeth)
    {
         ::QGraphicsGridLayout::invalidate();
        return;
    }

    extern void sipVH_QtWidgets_37(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_QtWidgets_37(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQGraphicsGridLayout::widgetEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[5], &sipPySelf, SIP_NULLPTR, sipName_widgetEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[5], sipPySelf, SIP_NULLPTR, sipName_widgetEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsGridLayout::widgetEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

int sipQGraphicsGridLayout::count() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[6]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_count);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[6]), sipPySelf, SIP_NULLPTR, sipName_count);
#endif

    if (!sipMeth)
        return  ::QGraphicsGridLayout::count();

    extern int sipVH_QtWidgets_8(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_8(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

 ::QGraphicsLayoutItem* sipQGraphicsGridLayout::itemAt(int a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[7]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_itemAt);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[7]), sipPySelf, SIP_NULLPTR, sipName_itemAt);
#endif

    if (!sipMeth)
        return  ::QGraphicsGridLayout::itemAt(a0);

    extern  ::QGraphicsLayoutItem* sipVH_QtWidgets_141(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    return sipVH_QtWidgets_141(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsGridLayout::removeAt(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[8], &sipPySelf, SIP_NULLPTR, sipName_removeAt);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[8], sipPySelf, SIP_NULLPTR, sipName_removeAt);
#endif

    if (!sipMeth)
    {
         ::QGraphicsGridLayout::removeAt(a0);
        return;
    }

    extern void sipVH_QtWidgets_59(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    sipVH_QtWidgets_59(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_addItem, "addItem(self, QGraphicsLayoutItem, int, int, int, int, alignment: Union[Qt.Alignment, Qt.AlignmentFlag] = Qt.Alignment())\n"
"addItem(self, QGraphicsLayoutItem, int, int, alignment: Union[Qt.Alignment, Qt.AlignmentFlag] = Qt.Alignment())");

extern "C" {static PyObject *meth_QGraphicsGridLayout_addItem(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_addItem(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsLayoutItem* a0;
        int a1;
        int a2;
        int a3;
        int a4;
         ::Qt::Alignment a5def = Qt::Alignment();
         ::Qt::Alignment* a5 = &a5def;
        int a5State = 0;
         ::QGraphicsGridLayout *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_alignment,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ:iiii|J1", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0, &a1, &a2, &a3, &a4, sipType_Qt_Alignment, &a5, &a5State))
        {
            sipCpp->addItem(a0,a1,a2,a3,a4,*a5);
            sipReleaseType(a5,sipType_Qt_Alignment,a5State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
         ::QGraphicsLayoutItem* a0;
        int a1;
        int a2;
         ::Qt::Alignment a3def = Qt::Alignment();
         ::Qt::Alignment* a3 = &a3def;
        int a3State = 0;
         ::QGraphicsGridLayout *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_alignment,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ:ii|J1", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0, &a1, &a2, sipType_Qt_Alignment, &a3, &a3State))
        {
            sipCpp->addItem(a0,a1,a2,*a3);
            sipReleaseType(a3,sipType_Qt_Alignment,a3State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_addItem, doc_QGraphicsGridLayout_addItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_setHorizontalSpacing, "setHorizontalSpacing(self, float)");

extern "C" {static PyObject *meth_QGraphicsGridLayout_setHorizontalSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setHorizontalSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            sipCpp->setHorizontalSpacing(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setHorizontalSpacing, doc_QGraphicsGridLayout_setHorizontalSpacing);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_horizontalSpacing, "horizontalSpacing(self) -> float");

extern "C" {static PyObject *meth_QGraphicsGridLayout_horizontalSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_horizontalSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->horizontalSpacing();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_horizontalSpacing, doc_QGraphicsGridLayout_horizontalSpacing);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_setVerticalSpacing, "setVerticalSpacing(self, float)");

extern "C" {static PyObject *meth_QGraphicsGridLayout_setVerticalSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setVerticalSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            sipCpp->setVerticalSpacing(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setVerticalSpacing, doc_QGraphicsGridLayout_setVerticalSpacing);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_verticalSpacing, "verticalSpacing(self) -> float");

extern "C" {static PyObject *meth_QGraphicsGridLayout_verticalSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_verticalSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->verticalSpacing();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_verticalSpacing, doc_QGraphicsGridLayout_verticalSpacing);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_setSpacing, "setSpacing(self, float)");

extern "C" {static PyObject *meth_QGraphicsGridLayout_setSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            sipCpp->setSpacing(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setSpacing, doc_QGraphicsGridLayout_setSpacing);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_setRowSpacing, "setRowSpacing(self, int, float)");

extern "C" {static PyObject *meth_QGraphicsGridLayout_setRowSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setRowSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::qreal a1;
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            sipCpp->setRowSpacing(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setRowSpacing, doc_QGraphicsGridLayout_setRowSpacing);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_rowSpacing, "rowSpacing(self, int) -> float");

extern "C" {static PyObject *meth_QGraphicsGridLayout_rowSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_rowSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        const  ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
             ::qreal sipRes;

            sipRes = sipCpp->rowSpacing(a0);

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_rowSpacing, doc_QGraphicsGridLayout_rowSpacing);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_setColumnSpacing, "setColumnSpacing(self, int, float)");

extern "C" {static PyObject *meth_QGraphicsGridLayout_setColumnSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setColumnSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::qreal a1;
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            sipCpp->setColumnSpacing(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setColumnSpacing, doc_QGraphicsGridLayout_setColumnSpacing);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_columnSpacing, "columnSpacing(self, int) -> float");

extern "C" {static PyObject *meth_QGraphicsGridLayout_columnSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_columnSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        const  ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
             ::qreal sipRes;

            sipRes = sipCpp->columnSpacing(a0);

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_columnSpacing, doc_QGraphicsGridLayout_columnSpacing);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_setRowStretchFactor, "setRowStretchFactor(self, int, int)");

extern "C" {static PyObject *meth_QGraphicsGridLayout_setRowStretchFactor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setRowStretchFactor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        int a1;
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            sipCpp->setRowStretchFactor(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setRowStretchFactor, doc_QGraphicsGridLayout_setRowStretchFactor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_rowStretchFactor, "rowStretchFactor(self, int) -> int");

extern "C" {static PyObject *meth_QGraphicsGridLayout_rowStretchFactor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_rowStretchFactor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        const  ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            int sipRes;

            sipRes = sipCpp->rowStretchFactor(a0);

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_rowStretchFactor, doc_QGraphicsGridLayout_rowStretchFactor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_setColumnStretchFactor, "setColumnStretchFactor(self, int, int)");

extern "C" {static PyObject *meth_QGraphicsGridLayout_setColumnStretchFactor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setColumnStretchFactor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        int a1;
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            sipCpp->setColumnStretchFactor(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setColumnStretchFactor, doc_QGraphicsGridLayout_setColumnStretchFactor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_columnStretchFactor, "columnStretchFactor(self, int) -> int");

extern "C" {static PyObject *meth_QGraphicsGridLayout_columnStretchFactor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_columnStretchFactor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        const  ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            int sipRes;

            sipRes = sipCpp->columnStretchFactor(a0);

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_columnStretchFactor, doc_QGraphicsGridLayout_columnStretchFactor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_setRowMinimumHeight, "setRowMinimumHeight(self, int, float)");

extern "C" {static PyObject *meth_QGraphicsGridLayout_setRowMinimumHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setRowMinimumHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::qreal a1;
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            sipCpp->setRowMinimumHeight(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setRowMinimumHeight, doc_QGraphicsGridLayout_setRowMinimumHeight);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_rowMinimumHeight, "rowMinimumHeight(self, int) -> float");

extern "C" {static PyObject *meth_QGraphicsGridLayout_rowMinimumHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_rowMinimumHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        const  ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
             ::qreal sipRes;

            sipRes = sipCpp->rowMinimumHeight(a0);

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_rowMinimumHeight, doc_QGraphicsGridLayout_rowMinimumHeight);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_setRowPreferredHeight, "setRowPreferredHeight(self, int, float)");

extern "C" {static PyObject *meth_QGraphicsGridLayout_setRowPreferredHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setRowPreferredHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::qreal a1;
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            sipCpp->setRowPreferredHeight(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setRowPreferredHeight, doc_QGraphicsGridLayout_setRowPreferredHeight);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_rowPreferredHeight, "rowPreferredHeight(self, int) -> float");

extern "C" {static PyObject *meth_QGraphicsGridLayout_rowPreferredHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_rowPreferredHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        const  ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
             ::qreal sipRes;

            sipRes = sipCpp->rowPreferredHeight(a0);

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_rowPreferredHeight, doc_QGraphicsGridLayout_rowPreferredHeight);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_setRowMaximumHeight, "setRowMaximumHeight(self, int, float)");

extern "C" {static PyObject *meth_QGraphicsGridLayout_setRowMaximumHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setRowMaximumHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::qreal a1;
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            sipCpp->setRowMaximumHeight(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setRowMaximumHeight, doc_QGraphicsGridLayout_setRowMaximumHeight);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_rowMaximumHeight, "rowMaximumHeight(self, int) -> float");

extern "C" {static PyObject *meth_QGraphicsGridLayout_rowMaximumHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_rowMaximumHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        const  ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
             ::qreal sipRes;

            sipRes = sipCpp->rowMaximumHeight(a0);

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_rowMaximumHeight, doc_QGraphicsGridLayout_rowMaximumHeight);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_setRowFixedHeight, "setRowFixedHeight(self, int, float)");

extern "C" {static PyObject *meth_QGraphicsGridLayout_setRowFixedHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setRowFixedHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::qreal a1;
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            sipCpp->setRowFixedHeight(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setRowFixedHeight, doc_QGraphicsGridLayout_setRowFixedHeight);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_setColumnMinimumWidth, "setColumnMinimumWidth(self, int, float)");

extern "C" {static PyObject *meth_QGraphicsGridLayout_setColumnMinimumWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setColumnMinimumWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::qreal a1;
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            sipCpp->setColumnMinimumWidth(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setColumnMinimumWidth, doc_QGraphicsGridLayout_setColumnMinimumWidth);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_columnMinimumWidth, "columnMinimumWidth(self, int) -> float");

extern "C" {static PyObject *meth_QGraphicsGridLayout_columnMinimumWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_columnMinimumWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        const  ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
             ::qreal sipRes;

            sipRes = sipCpp->columnMinimumWidth(a0);

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_columnMinimumWidth, doc_QGraphicsGridLayout_columnMinimumWidth);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_setColumnPreferredWidth, "setColumnPreferredWidth(self, int, float)");

extern "C" {static PyObject *meth_QGraphicsGridLayout_setColumnPreferredWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setColumnPreferredWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::qreal a1;
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            sipCpp->setColumnPreferredWidth(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setColumnPreferredWidth, doc_QGraphicsGridLayout_setColumnPreferredWidth);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_columnPreferredWidth, "columnPreferredWidth(self, int) -> float");

extern "C" {static PyObject *meth_QGraphicsGridLayout_columnPreferredWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_columnPreferredWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        const  ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
             ::qreal sipRes;

            sipRes = sipCpp->columnPreferredWidth(a0);

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_columnPreferredWidth, doc_QGraphicsGridLayout_columnPreferredWidth);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_setColumnMaximumWidth, "setColumnMaximumWidth(self, int, float)");

extern "C" {static PyObject *meth_QGraphicsGridLayout_setColumnMaximumWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setColumnMaximumWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::qreal a1;
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            sipCpp->setColumnMaximumWidth(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setColumnMaximumWidth, doc_QGraphicsGridLayout_setColumnMaximumWidth);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_columnMaximumWidth, "columnMaximumWidth(self, int) -> float");

extern "C" {static PyObject *meth_QGraphicsGridLayout_columnMaximumWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_columnMaximumWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        const  ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
             ::qreal sipRes;

            sipRes = sipCpp->columnMaximumWidth(a0);

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_columnMaximumWidth, doc_QGraphicsGridLayout_columnMaximumWidth);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_setColumnFixedWidth, "setColumnFixedWidth(self, int, float)");

extern "C" {static PyObject *meth_QGraphicsGridLayout_setColumnFixedWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setColumnFixedWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::qreal a1;
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            sipCpp->setColumnFixedWidth(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setColumnFixedWidth, doc_QGraphicsGridLayout_setColumnFixedWidth);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_setRowAlignment, "setRowAlignment(self, int, Union[Qt.Alignment, Qt.AlignmentFlag])");

extern "C" {static PyObject *meth_QGraphicsGridLayout_setRowAlignment(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setRowAlignment(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::Qt::Alignment* a1;
        int a1State = 0;
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiJ1", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, sipType_Qt_Alignment, &a1, &a1State))
        {
            sipCpp->setRowAlignment(a0,*a1);
            sipReleaseType(a1,sipType_Qt_Alignment,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setRowAlignment, doc_QGraphicsGridLayout_setRowAlignment);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_rowAlignment, "rowAlignment(self, int) -> Qt.Alignment");

extern "C" {static PyObject *meth_QGraphicsGridLayout_rowAlignment(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_rowAlignment(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        const  ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
             ::Qt::Alignment*sipRes;

            sipRes = new  ::Qt::Alignment(sipCpp->rowAlignment(a0));

            return sipConvertFromNewType(sipRes,sipType_Qt_Alignment,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_rowAlignment, doc_QGraphicsGridLayout_rowAlignment);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_setColumnAlignment, "setColumnAlignment(self, int, Union[Qt.Alignment, Qt.AlignmentFlag])");

extern "C" {static PyObject *meth_QGraphicsGridLayout_setColumnAlignment(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setColumnAlignment(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::Qt::Alignment* a1;
        int a1State = 0;
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiJ1", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, sipType_Qt_Alignment, &a1, &a1State))
        {
            sipCpp->setColumnAlignment(a0,*a1);
            sipReleaseType(a1,sipType_Qt_Alignment,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setColumnAlignment, doc_QGraphicsGridLayout_setColumnAlignment);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_columnAlignment, "columnAlignment(self, int) -> Qt.Alignment");

extern "C" {static PyObject *meth_QGraphicsGridLayout_columnAlignment(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_columnAlignment(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        const  ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
             ::Qt::Alignment*sipRes;

            sipRes = new  ::Qt::Alignment(sipCpp->columnAlignment(a0));

            return sipConvertFromNewType(sipRes,sipType_Qt_Alignment,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_columnAlignment, doc_QGraphicsGridLayout_columnAlignment);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_setAlignment, "setAlignment(self, QGraphicsLayoutItem, Union[Qt.Alignment, Qt.AlignmentFlag])");

extern "C" {static PyObject *meth_QGraphicsGridLayout_setAlignment(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setAlignment(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsLayoutItem* a0;
         ::Qt::Alignment* a1;
        int a1State = 0;
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J1", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0, sipType_Qt_Alignment, &a1, &a1State))
        {
            sipCpp->setAlignment(a0,*a1);
            sipReleaseType(a1,sipType_Qt_Alignment,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setAlignment, doc_QGraphicsGridLayout_setAlignment);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_alignment, "alignment(self, QGraphicsLayoutItem) -> Qt.Alignment");

extern "C" {static PyObject *meth_QGraphicsGridLayout_alignment(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_alignment(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsLayoutItem* a0;
        const  ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0))
        {
             ::Qt::Alignment*sipRes;

            sipRes = new  ::Qt::Alignment(sipCpp->alignment(a0));

            return sipConvertFromNewType(sipRes,sipType_Qt_Alignment,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_alignment, doc_QGraphicsGridLayout_alignment);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_rowCount, "rowCount(self) -> int");

extern "C" {static PyObject *meth_QGraphicsGridLayout_rowCount(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_rowCount(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->rowCount();

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_rowCount, doc_QGraphicsGridLayout_rowCount);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_columnCount, "columnCount(self) -> int");

extern "C" {static PyObject *meth_QGraphicsGridLayout_columnCount(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_columnCount(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->columnCount();

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_columnCount, doc_QGraphicsGridLayout_columnCount);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_itemAt, "itemAt(self, int, int) -> QGraphicsLayoutItem\n"
"itemAt(self, int) -> QGraphicsLayoutItem");

extern "C" {static PyObject *meth_QGraphicsGridLayout_itemAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_itemAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int a0;
        int a1;
        const  ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
             ::QGraphicsLayoutItem*sipRes;

            sipRes = sipCpp->itemAt(a0,a1);

            return sipConvertFromType(sipRes,sipType_QGraphicsLayoutItem,SIP_NULLPTR);
        }
    }

    {
        int a0;
        const  ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
             ::QGraphicsLayoutItem*sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsGridLayout::itemAt(a0) : sipCpp->itemAt(a0));

            return sipConvertFromType(sipRes,sipType_QGraphicsLayoutItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_itemAt, doc_QGraphicsGridLayout_itemAt);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_count, "count(self) -> int");

extern "C" {static PyObject *meth_QGraphicsGridLayout_count(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_count(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp))
        {
            int sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsGridLayout::count() : sipCpp->count());

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_count, doc_QGraphicsGridLayout_count);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_removeAt, "removeAt(self, int)");

extern "C" {static PyObject *meth_QGraphicsGridLayout_removeAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_removeAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int a0;
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
#line 74 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsgridlayout.sip"
        // The ownership of any existing item must be passed back to Python.
        QGraphicsLayoutItem *itm;
        
        if (a0 < sipCpp->count())
            itm = sipCpp->itemAt(a0);
        else
            itm = 0;
        
        Py_BEGIN_ALLOW_THREADS
        sipSelfWasArg ? sipCpp->QGraphicsGridLayout::removeAt(a0)
                      : sipCpp->removeAt(a0);
        Py_END_ALLOW_THREADS
        
        if (itm)
        {
            PyObject *itmo = sipGetPyObject(itm, sipType_QGraphicsLayoutItem);
        
            if (itmo)
                sipTransferBack(itmo);
        }
#line 1458 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsGridLayout.cpp"

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_removeAt, doc_QGraphicsGridLayout_removeAt);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_invalidate, "invalidate(self)");

extern "C" {static PyObject *meth_QGraphicsGridLayout_invalidate(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_invalidate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsGridLayout::invalidate() : sipCpp->invalidate());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_invalidate, doc_QGraphicsGridLayout_invalidate);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_setGeometry, "setGeometry(self, QRectF)");

extern "C" {static PyObject *meth_QGraphicsGridLayout_setGeometry(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setGeometry(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QRectF* a0;
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, sipType_QRectF, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsGridLayout::setGeometry(*a0) : sipCpp->setGeometry(*a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setGeometry, doc_QGraphicsGridLayout_setGeometry);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_sizeHint, "sizeHint(self, Qt.SizeHint, constraint: QSizeF = QSizeF()) -> QSizeF");

extern "C" {static PyObject *meth_QGraphicsGridLayout_sizeHint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_sizeHint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::Qt::SizeHint a0;
        const  ::QSizeF& a1def = QSizeF();
        const  ::QSizeF* a1 = &a1def;
        const  ::QGraphicsGridLayout *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_constraint,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BE|J9", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, sipType_Qt_SizeHint, &a0, sipType_QSizeF, &a1))
        {
             ::QSizeF*sipRes;

            sipRes = new  ::QSizeF((sipSelfWasArg ? sipCpp-> ::QGraphicsGridLayout::sizeHint(a0,*a1) : sipCpp->sizeHint(a0,*a1)));

            return sipConvertFromNewType(sipRes,sipType_QSizeF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_sizeHint, doc_QGraphicsGridLayout_sizeHint);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsGridLayout_removeItem, "removeItem(self, QGraphicsLayoutItem)");

extern "C" {static PyObject *meth_QGraphicsGridLayout_removeItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_removeItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsLayoutItem* a0;
         ::QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ<", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0))
        {
            sipCpp->removeItem(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_removeItem, doc_QGraphicsGridLayout_removeItem);

    return SIP_NULLPTR;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QGraphicsGridLayout(void *, const sipTypeDef *);}
static void *cast_QGraphicsGridLayout(void *sipCppV, const sipTypeDef *targetType)
{
     ::QGraphicsGridLayout *sipCpp = reinterpret_cast< ::QGraphicsGridLayout *>(sipCppV);

    if (targetType == sipType_QGraphicsLayout)
        return static_cast< ::QGraphicsLayout *>(sipCpp);

    if (targetType == sipType_QGraphicsLayoutItem)
        return static_cast< ::QGraphicsLayoutItem *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsGridLayout(void *, int);}
static void release_QGraphicsGridLayout(void *sipCppV, int sipState)
{
    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQGraphicsGridLayout *>(sipCppV);
    else
        delete reinterpret_cast< ::QGraphicsGridLayout *>(sipCppV);
}


extern "C" {static void *array_QGraphicsGridLayout(Py_ssize_t);}
static void *array_QGraphicsGridLayout(Py_ssize_t sipNrElem)
{
    return new  ::QGraphicsGridLayout[sipNrElem];
}


extern "C" {static void dealloc_QGraphicsGridLayout(sipSimpleWrapper *);}
static void dealloc_QGraphicsGridLayout(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQGraphicsGridLayout *>(sipGetAddress(sipSelf))->sipPySelf = SIP_NULLPTR;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QGraphicsGridLayout(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QGraphicsGridLayout(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QGraphicsGridLayout(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsGridLayout *sipCpp = SIP_NULLPTR;

    {
         ::QGraphicsLayoutItem* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QGraphicsLayoutItem, &a0, sipOwner))
        {
            sipCpp = new sipQGraphicsGridLayout(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QGraphicsGridLayout[] = {{130, 255, 1}};


static PyMethodDef methods_QGraphicsGridLayout[] = {
    {sipName_addItem, SIP_MLMETH_CAST(meth_QGraphicsGridLayout_addItem), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsGridLayout_addItem},
    {sipName_alignment, meth_QGraphicsGridLayout_alignment, METH_VARARGS, doc_QGraphicsGridLayout_alignment},
    {sipName_columnAlignment, meth_QGraphicsGridLayout_columnAlignment, METH_VARARGS, doc_QGraphicsGridLayout_columnAlignment},
    {sipName_columnCount, meth_QGraphicsGridLayout_columnCount, METH_VARARGS, doc_QGraphicsGridLayout_columnCount},
    {sipName_columnMaximumWidth, meth_QGraphicsGridLayout_columnMaximumWidth, METH_VARARGS, doc_QGraphicsGridLayout_columnMaximumWidth},
    {sipName_columnMinimumWidth, meth_QGraphicsGridLayout_columnMinimumWidth, METH_VARARGS, doc_QGraphicsGridLayout_columnMinimumWidth},
    {sipName_columnPreferredWidth, meth_QGraphicsGridLayout_columnPreferredWidth, METH_VARARGS, doc_QGraphicsGridLayout_columnPreferredWidth},
    {sipName_columnSpacing, meth_QGraphicsGridLayout_columnSpacing, METH_VARARGS, doc_QGraphicsGridLayout_columnSpacing},
    {sipName_columnStretchFactor, meth_QGraphicsGridLayout_columnStretchFactor, METH_VARARGS, doc_QGraphicsGridLayout_columnStretchFactor},
    {sipName_count, meth_QGraphicsGridLayout_count, METH_VARARGS, doc_QGraphicsGridLayout_count},
    {sipName_horizontalSpacing, meth_QGraphicsGridLayout_horizontalSpacing, METH_VARARGS, doc_QGraphicsGridLayout_horizontalSpacing},
    {sipName_invalidate, meth_QGraphicsGridLayout_invalidate, METH_VARARGS, doc_QGraphicsGridLayout_invalidate},
    {sipName_itemAt, meth_QGraphicsGridLayout_itemAt, METH_VARARGS, doc_QGraphicsGridLayout_itemAt},
    {sipName_removeAt, meth_QGraphicsGridLayout_removeAt, METH_VARARGS, doc_QGraphicsGridLayout_removeAt},
    {sipName_removeItem, meth_QGraphicsGridLayout_removeItem, METH_VARARGS, doc_QGraphicsGridLayout_removeItem},
    {sipName_rowAlignment, meth_QGraphicsGridLayout_rowAlignment, METH_VARARGS, doc_QGraphicsGridLayout_rowAlignment},
    {sipName_rowCount, meth_QGraphicsGridLayout_rowCount, METH_VARARGS, doc_QGraphicsGridLayout_rowCount},
    {sipName_rowMaximumHeight, meth_QGraphicsGridLayout_rowMaximumHeight, METH_VARARGS, doc_QGraphicsGridLayout_rowMaximumHeight},
    {sipName_rowMinimumHeight, meth_QGraphicsGridLayout_rowMinimumHeight, METH_VARARGS, doc_QGraphicsGridLayout_rowMinimumHeight},
    {sipName_rowPreferredHeight, meth_QGraphicsGridLayout_rowPreferredHeight, METH_VARARGS, doc_QGraphicsGridLayout_rowPreferredHeight},
    {sipName_rowSpacing, meth_QGraphicsGridLayout_rowSpacing, METH_VARARGS, doc_QGraphicsGridLayout_rowSpacing},
    {sipName_rowStretchFactor, meth_QGraphicsGridLayout_rowStretchFactor, METH_VARARGS, doc_QGraphicsGridLayout_rowStretchFactor},
    {sipName_setAlignment, meth_QGraphicsGridLayout_setAlignment, METH_VARARGS, doc_QGraphicsGridLayout_setAlignment},
    {sipName_setColumnAlignment, meth_QGraphicsGridLayout_setColumnAlignment, METH_VARARGS, doc_QGraphicsGridLayout_setColumnAlignment},
    {sipName_setColumnFixedWidth, meth_QGraphicsGridLayout_setColumnFixedWidth, METH_VARARGS, doc_QGraphicsGridLayout_setColumnFixedWidth},
    {sipName_setColumnMaximumWidth, meth_QGraphicsGridLayout_setColumnMaximumWidth, METH_VARARGS, doc_QGraphicsGridLayout_setColumnMaximumWidth},
    {sipName_setColumnMinimumWidth, meth_QGraphicsGridLayout_setColumnMinimumWidth, METH_VARARGS, doc_QGraphicsGridLayout_setColumnMinimumWidth},
    {sipName_setColumnPreferredWidth, meth_QGraphicsGridLayout_setColumnPreferredWidth, METH_VARARGS, doc_QGraphicsGridLayout_setColumnPreferredWidth},
    {sipName_setColumnSpacing, meth_QGraphicsGridLayout_setColumnSpacing, METH_VARARGS, doc_QGraphicsGridLayout_setColumnSpacing},
    {sipName_setColumnStretchFactor, meth_QGraphicsGridLayout_setColumnStretchFactor, METH_VARARGS, doc_QGraphicsGridLayout_setColumnStretchFactor},
    {sipName_setGeometry, meth_QGraphicsGridLayout_setGeometry, METH_VARARGS, doc_QGraphicsGridLayout_setGeometry},
    {sipName_setHorizontalSpacing, meth_QGraphicsGridLayout_setHorizontalSpacing, METH_VARARGS, doc_QGraphicsGridLayout_setHorizontalSpacing},
    {sipName_setRowAlignment, meth_QGraphicsGridLayout_setRowAlignment, METH_VARARGS, doc_QGraphicsGridLayout_setRowAlignment},
    {sipName_setRowFixedHeight, meth_QGraphicsGridLayout_setRowFixedHeight, METH_VARARGS, doc_QGraphicsGridLayout_setRowFixedHeight},
    {sipName_setRowMaximumHeight, meth_QGraphicsGridLayout_setRowMaximumHeight, METH_VARARGS, doc_QGraphicsGridLayout_setRowMaximumHeight},
    {sipName_setRowMinimumHeight, meth_QGraphicsGridLayout_setRowMinimumHeight, METH_VARARGS, doc_QGraphicsGridLayout_setRowMinimumHeight},
    {sipName_setRowPreferredHeight, meth_QGraphicsGridLayout_setRowPreferredHeight, METH_VARARGS, doc_QGraphicsGridLayout_setRowPreferredHeight},
    {sipName_setRowSpacing, meth_QGraphicsGridLayout_setRowSpacing, METH_VARARGS, doc_QGraphicsGridLayout_setRowSpacing},
    {sipName_setRowStretchFactor, meth_QGraphicsGridLayout_setRowStretchFactor, METH_VARARGS, doc_QGraphicsGridLayout_setRowStretchFactor},
    {sipName_setSpacing, meth_QGraphicsGridLayout_setSpacing, METH_VARARGS, doc_QGraphicsGridLayout_setSpacing},
    {sipName_setVerticalSpacing, meth_QGraphicsGridLayout_setVerticalSpacing, METH_VARARGS, doc_QGraphicsGridLayout_setVerticalSpacing},
    {sipName_sizeHint, SIP_MLMETH_CAST(meth_QGraphicsGridLayout_sizeHint), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsGridLayout_sizeHint},
    {sipName_verticalSpacing, meth_QGraphicsGridLayout_verticalSpacing, METH_VARARGS, doc_QGraphicsGridLayout_verticalSpacing}
};

PyDoc_STRVAR(doc_QGraphicsGridLayout, "\1QGraphicsGridLayout(parent: QGraphicsLayoutItem = None)");


static pyqt5ClassPluginDef plugin_QGraphicsGridLayout = {
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtWidgets_QGraphicsGridLayout = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsGridLayout,
        SIP_NULLPTR,
        &plugin_QGraphicsGridLayout
    },
    {
        sipNameNr_QGraphicsGridLayout,
        {0, 0, 1},
        43, methods_QGraphicsGridLayout,
        0, SIP_NULLPTR,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QGraphicsGridLayout,
    -1,
    -1,
    supers_QGraphicsGridLayout,
    SIP_NULLPTR,
    init_type_QGraphicsGridLayout,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_QGraphicsGridLayout,
    SIP_NULLPTR,
    array_QGraphicsGridLayout,
    SIP_NULLPTR,
    release_QGraphicsGridLayout,
    cast_QGraphicsGridLayout,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
