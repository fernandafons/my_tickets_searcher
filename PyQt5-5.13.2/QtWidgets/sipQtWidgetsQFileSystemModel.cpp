/*
 * Interface wrapper code.
 *
 * Generated by SIP 5.3.0
 *
 * Copyright (c) 2019 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qfilesystemmodel.sip"
#include <qfilesystemmodel.h>
#line 29 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"

#line 28 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 33 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtCore/qabstractitemmodel.sip"
#include <qabstractitemmodel.h>
#line 36 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 235 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 39 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 42 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 45 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtCore/qfileinfo.sip"
#include <qfileinfo.h>
#line 48 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtGui/qicon.sip"
#include <qicon.h>
#line 51 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtCore/qfiledevice.sip"
#include <qfiledevice.h>
#line 54 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 305 "sip/QtCore/qdatetime.sip"
#include <qdatetime.h>
#line 57 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 36 "sip/QtCore/qstringlist.sip"
#include <qstringlist.h>
#line 60 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtCore/qdir.sip"
#include <qdir.h>
#line 63 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qfileiconprovider.sip"
#include <qfileiconprovider.h>
#line 66 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtCore/qdir.sip"
#include <qdir.h>
#line 69 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 72 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtCore/qmimedata.sip"
#include <qmimedata.h>
#line 75 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 78 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 81 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 84 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 87 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 111 "sip/QtCore/qabstractitemmodel.sip"
#include <qabstractitemmodel.h>
#line 90 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 275 "sip/QtCore/qpycore_qhash.sip"
#include <qhash.h>
#line 93 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 30 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 96 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtCore/qdatastream.sip"
#include <qdatastream.h>
#line 99 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 102 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 76 "sip/QtCore/qabstractitemmodel.sip"
#include <qabstractitemmodel.h>
#line 105 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 111 "sip/QtCore/qabstractitemmodel.sip"
#include <qabstractitemmodel.h>
#line 108 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 328 "sip/QtCore/qpycore_qvector.sip"
#include <qvector.h>
#line 111 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 114 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 117 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 146 "sip/QtCore/qpycore_qmap.sip"
#include <qmap.h>
#line 120 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 146 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 125 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 128 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 247 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 131 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 134 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 137 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 140 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 143 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 146 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 149 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 152 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQFileSystemModel.cpp"


class sipQFileSystemModel : public  ::QFileSystemModel
{
public:
    sipQFileSystemModel( ::QObject*);
    virtual ~sipQFileSystemModel();

    int qt_metacall(QMetaObject::Call, int, void **) SIP_OVERRIDE;
    void *qt_metacast(const char *) SIP_OVERRIDE;
    const QMetaObject *metaObject() const SIP_OVERRIDE;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void disconnectNotify(const  ::QMetaMethod&) SIP_OVERRIDE;
    void connectNotify(const  ::QMetaMethod&) SIP_OVERRIDE;
    void customEvent( ::QEvent*) SIP_OVERRIDE;
    void childEvent( ::QChildEvent*) SIP_OVERRIDE;
    void timerEvent( ::QTimerEvent*) SIP_OVERRIDE;
    bool eventFilter( ::QObject*, ::QEvent*) SIP_OVERRIDE;
    bool event( ::QEvent*) SIP_OVERRIDE;
     ::QModelIndex index(int,int,const  ::QModelIndex&) const SIP_OVERRIDE;
     ::QModelIndex parent(const  ::QModelIndex&) const SIP_OVERRIDE;
     ::QModelIndex sibling(int,int,const  ::QModelIndex&) const SIP_OVERRIDE;
    int rowCount(const  ::QModelIndex&) const SIP_OVERRIDE;
    int columnCount(const  ::QModelIndex&) const SIP_OVERRIDE;
    bool hasChildren(const  ::QModelIndex&) const SIP_OVERRIDE;
     ::QVariant data(const  ::QModelIndex&,int) const SIP_OVERRIDE;
    bool setData(const  ::QModelIndex&,const  ::QVariant&,int) SIP_OVERRIDE;
     ::QVariant headerData(int, ::Qt::Orientation,int) const SIP_OVERRIDE;
    bool setHeaderData(int, ::Qt::Orientation,const  ::QVariant&,int) SIP_OVERRIDE;
    QMap<int, ::QVariant> itemData(const  ::QModelIndex&) const SIP_OVERRIDE;
    bool setItemData(const  ::QModelIndex&,const QMap<int, ::QVariant>&) SIP_OVERRIDE;
     ::QStringList mimeTypes() const SIP_OVERRIDE;
     ::QMimeData* mimeData(const  ::QModelIndexList&) const SIP_OVERRIDE;
    bool dropMimeData(const  ::QMimeData*, ::Qt::DropAction,int,int,const  ::QModelIndex&) SIP_OVERRIDE;
     ::Qt::DropActions supportedDropActions() const SIP_OVERRIDE;
    bool insertRows(int,int,const  ::QModelIndex&) SIP_OVERRIDE;
    bool insertColumns(int,int,const  ::QModelIndex&) SIP_OVERRIDE;
    bool removeRows(int,int,const  ::QModelIndex&) SIP_OVERRIDE;
    bool removeColumns(int,int,const  ::QModelIndex&) SIP_OVERRIDE;
    void fetchMore(const  ::QModelIndex&) SIP_OVERRIDE;
    bool canFetchMore(const  ::QModelIndex&) const SIP_OVERRIDE;
     ::Qt::ItemFlags flags(const  ::QModelIndex&) const SIP_OVERRIDE;
    void sort(int, ::Qt::SortOrder) SIP_OVERRIDE;
     ::QModelIndex buddy(const  ::QModelIndex&) const SIP_OVERRIDE;
     ::QModelIndexList match(const  ::QModelIndex&,int,const  ::QVariant&,int, ::Qt::MatchFlags) const SIP_OVERRIDE;
     ::QSize span(const  ::QModelIndex&) const SIP_OVERRIDE;
    bool submit() SIP_OVERRIDE;
    void revert() SIP_OVERRIDE;
     ::Qt::DropActions supportedDragActions() const SIP_OVERRIDE;
    QHash<int, ::QByteArray> roleNames() const SIP_OVERRIDE;
    bool canDropMimeData(const  ::QMimeData*, ::Qt::DropAction,int,int,const  ::QModelIndex&) const SIP_OVERRIDE;
    bool moveRows(const  ::QModelIndex&,int,int,const  ::QModelIndex&,int) SIP_OVERRIDE;
    bool moveColumns(const  ::QModelIndex&,int,int,const  ::QModelIndex&,int) SIP_OVERRIDE;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQFileSystemModel(const sipQFileSystemModel &);
    sipQFileSystemModel &operator = (const sipQFileSystemModel &);

    char sipPyMethods[41];
};

sipQFileSystemModel::sipQFileSystemModel( ::QObject*a0):  ::QFileSystemModel(a0), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQFileSystemModel::~sipQFileSystemModel()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

const QMetaObject *sipQFileSystemModel::metaObject() const
{
    if (sipGetInterpreter())
        return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_QtWidgets_qt_metaobject(sipPySelf,sipType_QFileSystemModel);

    return  ::QFileSystemModel::metaObject();
}

int sipQFileSystemModel::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id =  ::QFileSystemModel::qt_metacall(_c,_id,_a);

    if (_id >= 0)
    {
        SIP_BLOCK_THREADS
        _id = sip_QtWidgets_qt_metacall(sipPySelf,sipType_QFileSystemModel,_c,_id,_a);
        SIP_UNBLOCK_THREADS
    }

    return _id;
}

void *sipQFileSystemModel::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_QtWidgets_qt_metacast(sipPySelf, sipType_QFileSystemModel, _clname, &sipCpp) ? sipCpp :  ::QFileSystemModel::qt_metacast(_clname));
}

void sipQFileSystemModel::disconnectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[0], &sipPySelf, SIP_NULLPTR, sipName_disconnectNotify);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[0], sipPySelf, SIP_NULLPTR, sipName_disconnectNotify);
#endif

    if (!sipMeth)
    {
         ::QFileSystemModel::disconnectNotify(a0);
        return;
    }

    extern void sipVH_QtWidgets_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtWidgets_0(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQFileSystemModel::connectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[1], &sipPySelf, SIP_NULLPTR, sipName_connectNotify);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[1], sipPySelf, SIP_NULLPTR, sipName_connectNotify);
#endif

    if (!sipMeth)
    {
         ::QFileSystemModel::connectNotify(a0);
        return;
    }

    extern void sipVH_QtWidgets_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtWidgets_0(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQFileSystemModel::customEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[2], &sipPySelf, SIP_NULLPTR, sipName_customEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[2], sipPySelf, SIP_NULLPTR, sipName_customEvent);
#endif

    if (!sipMeth)
    {
         ::QFileSystemModel::customEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQFileSystemModel::childEvent( ::QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[3], &sipPySelf, SIP_NULLPTR, sipName_childEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[3], sipPySelf, SIP_NULLPTR, sipName_childEvent);
#endif

    if (!sipMeth)
    {
         ::QFileSystemModel::childEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_2(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QChildEvent*);

    sipVH_QtWidgets_2(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQFileSystemModel::timerEvent( ::QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[4], &sipPySelf, SIP_NULLPTR, sipName_timerEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[4], sipPySelf, SIP_NULLPTR, sipName_timerEvent);
#endif

    if (!sipMeth)
    {
         ::QFileSystemModel::timerEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTimerEvent*);

    sipVH_QtWidgets_3(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQFileSystemModel::eventFilter( ::QObject*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[5], &sipPySelf, SIP_NULLPTR, sipName_eventFilter);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[5], sipPySelf, SIP_NULLPTR, sipName_eventFilter);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::eventFilter(a0,a1);

    extern bool sipVH_QtWidgets_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QObject*, ::QEvent*);

    return sipVH_QtWidgets_4(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQFileSystemModel::event( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[6], &sipPySelf, SIP_NULLPTR, sipName_event);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[6], sipPySelf, SIP_NULLPTR, sipName_event);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::event(a0);

    extern bool sipVH_QtWidgets_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtWidgets_5(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QModelIndex sipQFileSystemModel::index(int a0,int a1,const  ::QModelIndex& a2) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[7]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_index);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[7]), sipPySelf, SIP_NULLPTR, sipName_index);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::index(a0,a1,a2);

    extern  ::QModelIndex sipVH_QtWidgets_131(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int,int,const  ::QModelIndex&);

    return sipVH_QtWidgets_131(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

 ::QModelIndex sipQFileSystemModel::parent(const  ::QModelIndex& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[8]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_parent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[8]), sipPySelf, SIP_NULLPTR, sipName_parent);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::parent(a0);

    extern  ::QModelIndex sipVH_QtWidgets_118(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&);

    return sipVH_QtWidgets_118(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QModelIndex sipQFileSystemModel::sibling(int a0,int a1,const  ::QModelIndex& a2) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[9]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_sibling);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[9]), sipPySelf, SIP_NULLPTR, sipName_sibling);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::sibling(a0,a1,a2);

    extern  ::QModelIndex sipVH_QtWidgets_131(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int,int,const  ::QModelIndex&);

    return sipVH_QtWidgets_131(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

int sipQFileSystemModel::rowCount(const  ::QModelIndex& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[10]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_rowCount);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[10]), sipPySelf, SIP_NULLPTR, sipName_rowCount);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::rowCount(a0);

    extern int sipVH_QtWidgets_130(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&);

    return sipVH_QtWidgets_130(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

int sipQFileSystemModel::columnCount(const  ::QModelIndex& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[11]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_columnCount);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[11]), sipPySelf, SIP_NULLPTR, sipName_columnCount);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::columnCount(a0);

    extern int sipVH_QtWidgets_130(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&);

    return sipVH_QtWidgets_130(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQFileSystemModel::hasChildren(const  ::QModelIndex& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[12]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_hasChildren);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[12]), sipPySelf, SIP_NULLPTR, sipName_hasChildren);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::hasChildren(a0);

    extern bool sipVH_QtWidgets_63(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&);

    return sipVH_QtWidgets_63(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QVariant sipQFileSystemModel::data(const  ::QModelIndex& a0,int a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[13]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_data);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[13]), sipPySelf, SIP_NULLPTR, sipName_data);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::data(a0,a1);

    extern  ::QVariant sipVH_QtWidgets_129(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&,int);

    return sipVH_QtWidgets_129(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQFileSystemModel::setData(const  ::QModelIndex& a0,const  ::QVariant& a1,int a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[14], &sipPySelf, SIP_NULLPTR, sipName_setData);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[14], sipPySelf, SIP_NULLPTR, sipName_setData);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::setData(a0,a1,a2);

    extern bool sipVH_QtWidgets_128(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&,const  ::QVariant&,int);

    return sipVH_QtWidgets_128(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

 ::QVariant sipQFileSystemModel::headerData(int a0, ::Qt::Orientation a1,int a2) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[15]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_headerData);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[15]), sipPySelf, SIP_NULLPTR, sipName_headerData);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::headerData(a0,a1,a2);

    extern  ::QVariant sipVH_QtWidgets_127(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int, ::Qt::Orientation,int);

    return sipVH_QtWidgets_127(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

bool sipQFileSystemModel::setHeaderData(int a0, ::Qt::Orientation a1,const  ::QVariant& a2,int a3)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[16], &sipPySelf, SIP_NULLPTR, sipName_setHeaderData);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[16], sipPySelf, SIP_NULLPTR, sipName_setHeaderData);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::setHeaderData(a0,a1,a2,a3);

    extern bool sipVH_QtWidgets_126(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int, ::Qt::Orientation,const  ::QVariant&,int);

    return sipVH_QtWidgets_126(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2, a3);
}

QMap<int, ::QVariant> sipQFileSystemModel::itemData(const  ::QModelIndex& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[17]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_itemData);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[17]), sipPySelf, SIP_NULLPTR, sipName_itemData);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::itemData(a0);

    extern QMap<int, ::QVariant> sipVH_QtWidgets_125(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&);

    return sipVH_QtWidgets_125(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQFileSystemModel::setItemData(const  ::QModelIndex& a0,const QMap<int, ::QVariant>& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[18], &sipPySelf, SIP_NULLPTR, sipName_setItemData);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[18], sipPySelf, SIP_NULLPTR, sipName_setItemData);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::setItemData(a0,a1);

    extern bool sipVH_QtWidgets_124(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&,const QMap<int, ::QVariant>&);

    return sipVH_QtWidgets_124(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

 ::QStringList sipQFileSystemModel::mimeTypes() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[19]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_mimeTypes);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[19]), sipPySelf, SIP_NULLPTR, sipName_mimeTypes);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::mimeTypes();

    extern  ::QStringList sipVH_QtWidgets_123(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_123(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

 ::QMimeData* sipQFileSystemModel::mimeData(const  ::QModelIndexList& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[20]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_mimeData);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[20]), sipPySelf, SIP_NULLPTR, sipName_mimeData);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::mimeData(a0);

    extern  ::QMimeData* sipVH_QtWidgets_122(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndexList&);

    return sipVH_QtWidgets_122(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQFileSystemModel::dropMimeData(const  ::QMimeData*a0, ::Qt::DropAction a1,int a2,int a3,const  ::QModelIndex& a4)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[21], &sipPySelf, SIP_NULLPTR, sipName_dropMimeData);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[21], sipPySelf, SIP_NULLPTR, sipName_dropMimeData);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::dropMimeData(a0,a1,a2,a3,a4);

    extern bool sipVH_QtWidgets_113(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMimeData*, ::Qt::DropAction,int,int,const  ::QModelIndex&);

    return sipVH_QtWidgets_113(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2, a3, a4);
}

 ::Qt::DropActions sipQFileSystemModel::supportedDropActions() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[22]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_supportedDropActions);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[22]), sipPySelf, SIP_NULLPTR, sipName_supportedDropActions);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::supportedDropActions();

    extern  ::Qt::DropActions sipVH_QtWidgets_115(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_115(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

bool sipQFileSystemModel::insertRows(int a0,int a1,const  ::QModelIndex& a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[23], &sipPySelf, SIP_NULLPTR, sipName_insertRows);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[23], sipPySelf, SIP_NULLPTR, sipName_insertRows);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::insertRows(a0,a1,a2);

    extern bool sipVH_QtWidgets_121(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int,int,const  ::QModelIndex&);

    return sipVH_QtWidgets_121(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

bool sipQFileSystemModel::insertColumns(int a0,int a1,const  ::QModelIndex& a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[24], &sipPySelf, SIP_NULLPTR, sipName_insertColumns);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[24], sipPySelf, SIP_NULLPTR, sipName_insertColumns);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::insertColumns(a0,a1,a2);

    extern bool sipVH_QtWidgets_121(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int,int,const  ::QModelIndex&);

    return sipVH_QtWidgets_121(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

bool sipQFileSystemModel::removeRows(int a0,int a1,const  ::QModelIndex& a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[25], &sipPySelf, SIP_NULLPTR, sipName_removeRows);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[25], sipPySelf, SIP_NULLPTR, sipName_removeRows);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::removeRows(a0,a1,a2);

    extern bool sipVH_QtWidgets_121(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int,int,const  ::QModelIndex&);

    return sipVH_QtWidgets_121(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

bool sipQFileSystemModel::removeColumns(int a0,int a1,const  ::QModelIndex& a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[26], &sipPySelf, SIP_NULLPTR, sipName_removeColumns);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[26], sipPySelf, SIP_NULLPTR, sipName_removeColumns);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::removeColumns(a0,a1,a2);

    extern bool sipVH_QtWidgets_121(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int,int,const  ::QModelIndex&);

    return sipVH_QtWidgets_121(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

void sipQFileSystemModel::fetchMore(const  ::QModelIndex& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[27], &sipPySelf, SIP_NULLPTR, sipName_fetchMore);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[27], sipPySelf, SIP_NULLPTR, sipName_fetchMore);
#endif

    if (!sipMeth)
    {
         ::QFileSystemModel::fetchMore(a0);
        return;
    }

    extern void sipVH_QtWidgets_54(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&);

    sipVH_QtWidgets_54(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQFileSystemModel::canFetchMore(const  ::QModelIndex& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[28]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_canFetchMore);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[28]), sipPySelf, SIP_NULLPTR, sipName_canFetchMore);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::canFetchMore(a0);

    extern bool sipVH_QtWidgets_63(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&);

    return sipVH_QtWidgets_63(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::Qt::ItemFlags sipQFileSystemModel::flags(const  ::QModelIndex& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[29]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_flags);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[29]), sipPySelf, SIP_NULLPTR, sipName_flags);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::flags(a0);

    extern  ::Qt::ItemFlags sipVH_QtWidgets_120(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&);

    return sipVH_QtWidgets_120(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQFileSystemModel::sort(int a0, ::Qt::SortOrder a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[30], &sipPySelf, SIP_NULLPTR, sipName_sort);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[30], sipPySelf, SIP_NULLPTR, sipName_sort);
#endif

    if (!sipMeth)
    {
         ::QFileSystemModel::sort(a0,a1);
        return;
    }

    extern void sipVH_QtWidgets_119(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int, ::Qt::SortOrder);

    sipVH_QtWidgets_119(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

 ::QModelIndex sipQFileSystemModel::buddy(const  ::QModelIndex& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[31]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_buddy);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[31]), sipPySelf, SIP_NULLPTR, sipName_buddy);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::buddy(a0);

    extern  ::QModelIndex sipVH_QtWidgets_118(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&);

    return sipVH_QtWidgets_118(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QModelIndexList sipQFileSystemModel::match(const  ::QModelIndex& a0,int a1,const  ::QVariant& a2,int a3, ::Qt::MatchFlags a4) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[32]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_match);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[32]), sipPySelf, SIP_NULLPTR, sipName_match);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::match(a0,a1,a2,a3,a4);

    extern  ::QModelIndexList sipVH_QtWidgets_117(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&,int,const  ::QVariant&,int, ::Qt::MatchFlags);

    return sipVH_QtWidgets_117(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2, a3, a4);
}

 ::QSize sipQFileSystemModel::span(const  ::QModelIndex& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[33]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_span);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[33]), sipPySelf, SIP_NULLPTR, sipName_span);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::span(a0);

    extern  ::QSize sipVH_QtWidgets_116(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&);

    return sipVH_QtWidgets_116(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQFileSystemModel::submit()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[34], &sipPySelf, SIP_NULLPTR, sipName_submit);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[34], sipPySelf, SIP_NULLPTR, sipName_submit);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::submit();

    extern bool sipVH_QtWidgets_32(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_32(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQFileSystemModel::revert()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[35], &sipPySelf, SIP_NULLPTR, sipName_revert);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[35], sipPySelf, SIP_NULLPTR, sipName_revert);
#endif

    if (!sipMeth)
    {
         ::QFileSystemModel::revert();
        return;
    }

    extern void sipVH_QtWidgets_37(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_QtWidgets_37(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

 ::Qt::DropActions sipQFileSystemModel::supportedDragActions() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[36]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_supportedDragActions);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[36]), sipPySelf, SIP_NULLPTR, sipName_supportedDragActions);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::supportedDragActions();

    extern  ::Qt::DropActions sipVH_QtWidgets_115(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_115(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

QHash<int, ::QByteArray> sipQFileSystemModel::roleNames() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[37]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_roleNames);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[37]), sipPySelf, SIP_NULLPTR, sipName_roleNames);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::roleNames();

    extern QHash<int, ::QByteArray> sipVH_QtWidgets_114(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_114(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

bool sipQFileSystemModel::canDropMimeData(const  ::QMimeData*a0, ::Qt::DropAction a1,int a2,int a3,const  ::QModelIndex& a4) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[38]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_canDropMimeData);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[38]), sipPySelf, SIP_NULLPTR, sipName_canDropMimeData);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::canDropMimeData(a0,a1,a2,a3,a4);

    extern bool sipVH_QtWidgets_113(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMimeData*, ::Qt::DropAction,int,int,const  ::QModelIndex&);

    return sipVH_QtWidgets_113(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2, a3, a4);
}

bool sipQFileSystemModel::moveRows(const  ::QModelIndex& a0,int a1,int a2,const  ::QModelIndex& a3,int a4)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[39], &sipPySelf, SIP_NULLPTR, sipName_moveRows);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[39], sipPySelf, SIP_NULLPTR, sipName_moveRows);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::moveRows(a0,a1,a2,a3,a4);

    extern bool sipVH_QtWidgets_112(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&,int,int,const  ::QModelIndex&,int);

    return sipVH_QtWidgets_112(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2, a3, a4);
}

bool sipQFileSystemModel::moveColumns(const  ::QModelIndex& a0,int a1,int a2,const  ::QModelIndex& a3,int a4)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[40], &sipPySelf, SIP_NULLPTR, sipName_moveColumns);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[40], sipPySelf, SIP_NULLPTR, sipName_moveColumns);
#endif

    if (!sipMeth)
        return  ::QFileSystemModel::moveColumns(a0,a1,a2,a3,a4);

    extern bool sipVH_QtWidgets_112(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QModelIndex&,int,int,const  ::QModelIndex&,int);

    return sipVH_QtWidgets_112(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2, a3, a4);
}


PyDoc_STRVAR(doc_QFileSystemModel_index, "index(self, int, int, parent: QModelIndex = QModelIndex()) -> QModelIndex\n"
"index(self, str, column: int = 0) -> QModelIndex");

extern "C" {static PyObject *meth_QFileSystemModel_index(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_index(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int a0;
        int a1;
        const  ::QModelIndex& a2def = QModelIndex();
        const  ::QModelIndex* a2 = &a2def;
        const  ::QFileSystemModel *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_parent,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bii|J9", &sipSelf, sipType_QFileSystemModel, &sipCpp, &a0, &a1, sipType_QModelIndex, &a2))
        {
             ::QModelIndex*sipRes;

            sipRes = new  ::QModelIndex((sipSelfWasArg ? sipCpp-> ::QFileSystemModel::index(a0,a1,*a2) : sipCpp->index(a0,a1,*a2)));

            return sipConvertFromNewType(sipRes,sipType_QModelIndex,SIP_NULLPTR);
        }
    }

    {
        const  ::QString* a0;
        int a0State = 0;
        int a1 = 0;
        const  ::QFileSystemModel *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_column,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1|i", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QString,&a0, &a0State, &a1))
        {
             ::QModelIndex*sipRes;

            sipRes = new  ::QModelIndex(sipCpp->index(*a0,a1));
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipConvertFromNewType(sipRes,sipType_QModelIndex,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_index, doc_QFileSystemModel_index);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_parent, "parent(self, QModelIndex) -> QModelIndex");

extern "C" {static PyObject *meth_QFileSystemModel_parent(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_parent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QModelIndex* a0;
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QModelIndex, &a0))
        {
             ::QModelIndex*sipRes;

            sipRes = new  ::QModelIndex((sipSelfWasArg ? sipCpp-> ::QFileSystemModel::parent(*a0) : sipCpp->parent(*a0)));

            return sipConvertFromNewType(sipRes,sipType_QModelIndex,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_parent, doc_QFileSystemModel_parent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_hasChildren, "hasChildren(self, parent: QModelIndex = QModelIndex()) -> bool");

extern "C" {static PyObject *meth_QFileSystemModel_hasChildren(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_hasChildren(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QModelIndex& a0def = QModelIndex();
        const  ::QModelIndex* a0 = &a0def;
        const  ::QFileSystemModel *sipCpp;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|J9", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QModelIndex, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QFileSystemModel::hasChildren(*a0) : sipCpp->hasChildren(*a0));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_hasChildren, doc_QFileSystemModel_hasChildren);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_canFetchMore, "canFetchMore(self, QModelIndex) -> bool");

extern "C" {static PyObject *meth_QFileSystemModel_canFetchMore(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_canFetchMore(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QModelIndex* a0;
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QModelIndex, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QFileSystemModel::canFetchMore(*a0) : sipCpp->canFetchMore(*a0));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_canFetchMore, doc_QFileSystemModel_canFetchMore);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_fetchMore, "fetchMore(self, QModelIndex)");

extern "C" {static PyObject *meth_QFileSystemModel_fetchMore(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_fetchMore(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QModelIndex* a0;
         ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QModelIndex, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QFileSystemModel::fetchMore(*a0) : sipCpp->fetchMore(*a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_fetchMore, doc_QFileSystemModel_fetchMore);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_rowCount, "rowCount(self, parent: QModelIndex = QModelIndex()) -> int");

extern "C" {static PyObject *meth_QFileSystemModel_rowCount(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_rowCount(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QModelIndex& a0def = QModelIndex();
        const  ::QModelIndex* a0 = &a0def;
        const  ::QFileSystemModel *sipCpp;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|J9", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QModelIndex, &a0))
        {
            int sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QFileSystemModel::rowCount(*a0) : sipCpp->rowCount(*a0));

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_rowCount, doc_QFileSystemModel_rowCount);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_columnCount, "columnCount(self, parent: QModelIndex = QModelIndex()) -> int");

extern "C" {static PyObject *meth_QFileSystemModel_columnCount(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_columnCount(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QModelIndex& a0def = QModelIndex();
        const  ::QModelIndex* a0 = &a0def;
        const  ::QFileSystemModel *sipCpp;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|J9", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QModelIndex, &a0))
        {
            int sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QFileSystemModel::columnCount(*a0) : sipCpp->columnCount(*a0));

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_columnCount, doc_QFileSystemModel_columnCount);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_myComputer, "myComputer(self, role: int = Qt.DisplayRole) -> Any");

extern "C" {static PyObject *meth_QFileSystemModel_myComputer(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_myComputer(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0 = Qt::DisplayRole;
        const  ::QFileSystemModel *sipCpp;

        static const char *sipKwdList[] = {
            sipName_role,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|i", &sipSelf, sipType_QFileSystemModel, &sipCpp, &a0))
        {
             ::QVariant*sipRes;

            sipRes = new  ::QVariant(sipCpp->myComputer(a0));

            return sipConvertFromNewType(sipRes,sipType_QVariant,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_myComputer, doc_QFileSystemModel_myComputer);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_data, "data(self, QModelIndex, role: int = Qt.DisplayRole) -> Any");

extern "C" {static PyObject *meth_QFileSystemModel_data(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_data(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QModelIndex* a0;
        int a1 = Qt::DisplayRole;
        const  ::QFileSystemModel *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_role,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9|i", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QModelIndex, &a0, &a1))
        {
             ::QVariant*sipRes;

            sipRes = new  ::QVariant((sipSelfWasArg ? sipCpp-> ::QFileSystemModel::data(*a0,a1) : sipCpp->data(*a0,a1)));

            return sipConvertFromNewType(sipRes,sipType_QVariant,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_data, doc_QFileSystemModel_data);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_setData, "setData(self, QModelIndex, Any, role: int = Qt.EditRole) -> bool");

extern "C" {static PyObject *meth_QFileSystemModel_setData(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_setData(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QModelIndex* a0;
        const  ::QVariant* a1;
        int a1State = 0;
        int a2 = Qt::EditRole;
         ::QFileSystemModel *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_role,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9J1|i", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QModelIndex, &a0, sipType_QVariant, &a1, &a1State, &a2))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QFileSystemModel::setData(*a0,*a1,a2) : sipCpp->setData(*a0,*a1,a2));
            sipReleaseType(const_cast< ::QVariant *>(a1),sipType_QVariant,a1State);

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_setData, doc_QFileSystemModel_setData);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_headerData, "headerData(self, int, Qt.Orientation, role: int = Qt.DisplayRole) -> Any");

extern "C" {static PyObject *meth_QFileSystemModel_headerData(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_headerData(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int a0;
         ::Qt::Orientation a1;
        int a2 = Qt::DisplayRole;
        const  ::QFileSystemModel *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_role,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BiE|i", &sipSelf, sipType_QFileSystemModel, &sipCpp, &a0, sipType_Qt_Orientation, &a1, &a2))
        {
             ::QVariant*sipRes;

            sipRes = new  ::QVariant((sipSelfWasArg ? sipCpp-> ::QFileSystemModel::headerData(a0,a1,a2) : sipCpp->headerData(a0,a1,a2)));

            return sipConvertFromNewType(sipRes,sipType_QVariant,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_headerData, doc_QFileSystemModel_headerData);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_flags, "flags(self, QModelIndex) -> Qt.ItemFlags");

extern "C" {static PyObject *meth_QFileSystemModel_flags(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_flags(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QModelIndex* a0;
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QModelIndex, &a0))
        {
             ::Qt::ItemFlags*sipRes;

            sipRes = new  ::Qt::ItemFlags((sipSelfWasArg ? sipCpp-> ::QFileSystemModel::flags(*a0) : sipCpp->flags(*a0)));

            return sipConvertFromNewType(sipRes,sipType_Qt_ItemFlags,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_flags, doc_QFileSystemModel_flags);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_sort, "sort(self, int, order: Qt.SortOrder = Qt.AscendingOrder)");

extern "C" {static PyObject *meth_QFileSystemModel_sort(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_sort(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int a0;
         ::Qt::SortOrder a1 = Qt::AscendingOrder;
         ::QFileSystemModel *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_order,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bi|E", &sipSelf, sipType_QFileSystemModel, &sipCpp, &a0, sipType_Qt_SortOrder, &a1))
        {
            (sipSelfWasArg ? sipCpp-> ::QFileSystemModel::sort(a0,a1) : sipCpp->sort(a0,a1));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_sort, doc_QFileSystemModel_sort);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_mimeTypes, "mimeTypes(self) -> List[str]");

extern "C" {static PyObject *meth_QFileSystemModel_mimeTypes(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_mimeTypes(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QFileSystemModel, &sipCpp))
        {
             ::QStringList*sipRes;

            sipRes = new  ::QStringList((sipSelfWasArg ? sipCpp-> ::QFileSystemModel::mimeTypes() : sipCpp->mimeTypes()));

            return sipConvertFromNewType(sipRes,sipType_QStringList,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_mimeTypes, doc_QFileSystemModel_mimeTypes);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_mimeData, "mimeData(self, Iterable[QModelIndex]) -> QMimeData");

extern "C" {static PyObject *meth_QFileSystemModel_mimeData(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_mimeData(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QModelIndexList* a0;
        int a0State = 0;
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QList_0100QModelIndex,&a0, &a0State))
        {
             ::QMimeData*sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QFileSystemModel::mimeData(*a0) : sipCpp->mimeData(*a0));
            sipReleaseType(const_cast< ::QModelIndexList *>(a0),sipType_QList_0100QModelIndex,a0State);

            return sipConvertFromType(sipRes,sipType_QMimeData,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_mimeData, doc_QFileSystemModel_mimeData);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_dropMimeData, "dropMimeData(self, QMimeData, Qt.DropAction, int, int, QModelIndex) -> bool");

extern "C" {static PyObject *meth_QFileSystemModel_dropMimeData(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_dropMimeData(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QMimeData* a0;
         ::Qt::DropAction a1;
        int a2;
        int a3;
        const  ::QModelIndex* a4;
         ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8EiiJ9", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QMimeData, &a0, sipType_Qt_DropAction, &a1, &a2, &a3, sipType_QModelIndex, &a4))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QFileSystemModel::dropMimeData(a0,a1,a2,a3,*a4) : sipCpp->dropMimeData(a0,a1,a2,a3,*a4));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_dropMimeData, doc_QFileSystemModel_dropMimeData);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_supportedDropActions, "supportedDropActions(self) -> Qt.DropActions");

extern "C" {static PyObject *meth_QFileSystemModel_supportedDropActions(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_supportedDropActions(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QFileSystemModel, &sipCpp))
        {
             ::Qt::DropActions*sipRes;

            sipRes = new  ::Qt::DropActions((sipSelfWasArg ? sipCpp-> ::QFileSystemModel::supportedDropActions() : sipCpp->supportedDropActions()));

            return sipConvertFromNewType(sipRes,sipType_Qt_DropActions,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_supportedDropActions, doc_QFileSystemModel_supportedDropActions);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_setRootPath, "setRootPath(self, str) -> QModelIndex");

extern "C" {static PyObject *meth_QFileSystemModel_setRootPath(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_setRootPath(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QString,&a0, &a0State))
        {
             ::QModelIndex*sipRes;

            sipRes = new  ::QModelIndex(sipCpp->setRootPath(*a0));
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipConvertFromNewType(sipRes,sipType_QModelIndex,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_setRootPath, doc_QFileSystemModel_setRootPath);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_rootPath, "rootPath(self) -> str");

extern "C" {static PyObject *meth_QFileSystemModel_rootPath(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_rootPath(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QFileSystemModel, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->rootPath());

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_rootPath, doc_QFileSystemModel_rootPath);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_rootDirectory, "rootDirectory(self) -> QDir");

extern "C" {static PyObject *meth_QFileSystemModel_rootDirectory(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_rootDirectory(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QFileSystemModel, &sipCpp))
        {
             ::QDir*sipRes;

            sipRes = new  ::QDir(sipCpp->rootDirectory());

            return sipConvertFromNewType(sipRes,sipType_QDir,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_rootDirectory, doc_QFileSystemModel_rootDirectory);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_setIconProvider, "setIconProvider(self, QFileIconProvider)");

extern "C" {static PyObject *meth_QFileSystemModel_setIconProvider(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_setIconProvider(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QFileIconProvider* a0;
        PyObject *a0Keep;
         ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QFileSystemModel, &sipCpp, &a0Keep, sipType_QFileIconProvider, &a0))
        {
            sipCpp->setIconProvider(a0);

            sipKeepReference(sipSelf, -21, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_setIconProvider, doc_QFileSystemModel_setIconProvider);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_iconProvider, "iconProvider(self) -> QFileIconProvider");

extern "C" {static PyObject *meth_QFileSystemModel_iconProvider(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_iconProvider(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QFileSystemModel, &sipCpp))
        {
             ::QFileIconProvider*sipRes;

            sipRes = sipCpp->iconProvider();

            return sipConvertFromType(sipRes,sipType_QFileIconProvider,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_iconProvider, doc_QFileSystemModel_iconProvider);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_setFilter, "setFilter(self, Union[QDir.Filters, QDir.Filter])");

extern "C" {static PyObject *meth_QFileSystemModel_setFilter(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_setFilter(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QDir::Filters* a0;
        int a0State = 0;
         ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QDir_Filters, &a0, &a0State))
        {
            sipCpp->setFilter(*a0);
            sipReleaseType(a0,sipType_QDir_Filters,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_setFilter, doc_QFileSystemModel_setFilter);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_filter, "filter(self) -> QDir.Filters");

extern "C" {static PyObject *meth_QFileSystemModel_filter(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_filter(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QFileSystemModel, &sipCpp))
        {
             ::QDir::Filters*sipRes;

            sipRes = new  ::QDir::Filters(sipCpp->filter());

            return sipConvertFromNewType(sipRes,sipType_QDir_Filters,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_filter, doc_QFileSystemModel_filter);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_setResolveSymlinks, "setResolveSymlinks(self, bool)");

extern "C" {static PyObject *meth_QFileSystemModel_setResolveSymlinks(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_setResolveSymlinks(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QFileSystemModel, &sipCpp, &a0))
        {
            sipCpp->setResolveSymlinks(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_setResolveSymlinks, doc_QFileSystemModel_setResolveSymlinks);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_resolveSymlinks, "resolveSymlinks(self) -> bool");

extern "C" {static PyObject *meth_QFileSystemModel_resolveSymlinks(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_resolveSymlinks(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QFileSystemModel, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->resolveSymlinks();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_resolveSymlinks, doc_QFileSystemModel_resolveSymlinks);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_setReadOnly, "setReadOnly(self, bool)");

extern "C" {static PyObject *meth_QFileSystemModel_setReadOnly(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_setReadOnly(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QFileSystemModel, &sipCpp, &a0))
        {
            sipCpp->setReadOnly(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_setReadOnly, doc_QFileSystemModel_setReadOnly);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_isReadOnly, "isReadOnly(self) -> bool");

extern "C" {static PyObject *meth_QFileSystemModel_isReadOnly(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_isReadOnly(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QFileSystemModel, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isReadOnly();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_isReadOnly, doc_QFileSystemModel_isReadOnly);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_setNameFilterDisables, "setNameFilterDisables(self, bool)");

extern "C" {static PyObject *meth_QFileSystemModel_setNameFilterDisables(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_setNameFilterDisables(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QFileSystemModel, &sipCpp, &a0))
        {
            sipCpp->setNameFilterDisables(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_setNameFilterDisables, doc_QFileSystemModel_setNameFilterDisables);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_nameFilterDisables, "nameFilterDisables(self) -> bool");

extern "C" {static PyObject *meth_QFileSystemModel_nameFilterDisables(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_nameFilterDisables(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QFileSystemModel, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->nameFilterDisables();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_nameFilterDisables, doc_QFileSystemModel_nameFilterDisables);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_setNameFilters, "setNameFilters(self, Iterable[str])");

extern "C" {static PyObject *meth_QFileSystemModel_setNameFilters(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_setNameFilters(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QStringList* a0;
        int a0State = 0;
         ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QStringList,&a0, &a0State))
        {
            sipCpp->setNameFilters(*a0);
            sipReleaseType(const_cast< ::QStringList *>(a0),sipType_QStringList,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_setNameFilters, doc_QFileSystemModel_setNameFilters);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_nameFilters, "nameFilters(self) -> List[str]");

extern "C" {static PyObject *meth_QFileSystemModel_nameFilters(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_nameFilters(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QFileSystemModel, &sipCpp))
        {
             ::QStringList*sipRes;

            sipRes = new  ::QStringList(sipCpp->nameFilters());

            return sipConvertFromNewType(sipRes,sipType_QStringList,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_nameFilters, doc_QFileSystemModel_nameFilters);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_filePath, "filePath(self, QModelIndex) -> str");

extern "C" {static PyObject *meth_QFileSystemModel_filePath(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_filePath(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QModelIndex* a0;
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QModelIndex, &a0))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->filePath(*a0));

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_filePath, doc_QFileSystemModel_filePath);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_isDir, "isDir(self, QModelIndex) -> bool");

extern "C" {static PyObject *meth_QFileSystemModel_isDir(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_isDir(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QModelIndex* a0;
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QModelIndex, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->isDir(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_isDir, doc_QFileSystemModel_isDir);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_size, "size(self, QModelIndex) -> int");

extern "C" {static PyObject *meth_QFileSystemModel_size(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_size(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QModelIndex* a0;
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QModelIndex, &a0))
        {
             ::qint64 sipRes;

            sipRes = sipCpp->size(*a0);

            return PyLong_FromLongLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_size, doc_QFileSystemModel_size);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_type, "type(self, QModelIndex) -> str");

extern "C" {static PyObject *meth_QFileSystemModel_type(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_type(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QModelIndex* a0;
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QModelIndex, &a0))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->type(*a0));

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_type, doc_QFileSystemModel_type);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_lastModified, "lastModified(self, QModelIndex) -> QDateTime");

extern "C" {static PyObject *meth_QFileSystemModel_lastModified(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_lastModified(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QModelIndex* a0;
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QModelIndex, &a0))
        {
             ::QDateTime*sipRes;

            sipRes = new  ::QDateTime(sipCpp->lastModified(*a0));

            return sipConvertFromNewType(sipRes,sipType_QDateTime,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_lastModified, doc_QFileSystemModel_lastModified);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_mkdir, "mkdir(self, QModelIndex, str) -> QModelIndex");

extern "C" {static PyObject *meth_QFileSystemModel_mkdir(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_mkdir(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QModelIndex* a0;
        const  ::QString* a1;
        int a1State = 0;
         ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9J1", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QModelIndex, &a0, sipType_QString,&a1, &a1State))
        {
             ::QModelIndex*sipRes;

            sipRes = new  ::QModelIndex(sipCpp->mkdir(*a0,*a1));
            sipReleaseType(const_cast< ::QString *>(a1),sipType_QString,a1State);

            return sipConvertFromNewType(sipRes,sipType_QModelIndex,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_mkdir, doc_QFileSystemModel_mkdir);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_permissions, "permissions(self, QModelIndex) -> QFileDevice.Permissions");

extern "C" {static PyObject *meth_QFileSystemModel_permissions(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_permissions(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QModelIndex* a0;
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QModelIndex, &a0))
        {
             ::QFileDevice::Permissions*sipRes;

            sipRes = new  ::QFileDevice::Permissions(sipCpp->permissions(*a0));

            return sipConvertFromNewType(sipRes,sipType_QFileDevice_Permissions,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_permissions, doc_QFileSystemModel_permissions);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_rmdir, "rmdir(self, QModelIndex) -> bool");

extern "C" {static PyObject *meth_QFileSystemModel_rmdir(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_rmdir(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QModelIndex* a0;
         ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QModelIndex, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->rmdir(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_rmdir, doc_QFileSystemModel_rmdir);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_fileName, "fileName(self, QModelIndex) -> str");

extern "C" {static PyObject *meth_QFileSystemModel_fileName(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_fileName(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QModelIndex* a0;
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QModelIndex, &a0))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->fileName(*a0));

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_fileName, doc_QFileSystemModel_fileName);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_fileIcon, "fileIcon(self, QModelIndex) -> QIcon");

extern "C" {static PyObject *meth_QFileSystemModel_fileIcon(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_fileIcon(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QModelIndex* a0;
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QModelIndex, &a0))
        {
             ::QIcon*sipRes;

            sipRes = new  ::QIcon(sipCpp->fileIcon(*a0));

            return sipConvertFromNewType(sipRes,sipType_QIcon,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_fileIcon, doc_QFileSystemModel_fileIcon);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_fileInfo, "fileInfo(self, QModelIndex) -> QFileInfo");

extern "C" {static PyObject *meth_QFileSystemModel_fileInfo(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_fileInfo(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QModelIndex* a0;
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QModelIndex, &a0))
        {
             ::QFileInfo*sipRes;

            sipRes = new  ::QFileInfo(sipCpp->fileInfo(*a0));

            return sipConvertFromNewType(sipRes,sipType_QFileInfo,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_fileInfo, doc_QFileSystemModel_fileInfo);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_remove, "remove(self, QModelIndex) -> bool");

extern "C" {static PyObject *meth_QFileSystemModel_remove(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_remove(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QModelIndex* a0;
         ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QModelIndex, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->remove(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_remove, doc_QFileSystemModel_remove);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_event, "event(self, QEvent) -> bool");

extern "C" {static PyObject *meth_QFileSystemModel_event(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_event(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
         ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QFileSystemModel::event(a0) : sipCpp->event(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_event, doc_QFileSystemModel_event);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_timerEvent, "timerEvent(self, QTimerEvent)");

extern "C" {static PyObject *meth_QFileSystemModel_timerEvent(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_timerEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QTimerEvent* a0;
         ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QFileSystemModel, &sipCpp, sipType_QTimerEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QFileSystemModel::timerEvent(a0) : sipCpp->timerEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_timerEvent, doc_QFileSystemModel_timerEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QFileSystemModel_sibling, "sibling(self, int, int, QModelIndex) -> QModelIndex");

extern "C" {static PyObject *meth_QFileSystemModel_sibling(PyObject *, PyObject *);}
static PyObject *meth_QFileSystemModel_sibling(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int a0;
        int a1;
        const  ::QModelIndex* a2;
        const  ::QFileSystemModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiJ9", &sipSelf, sipType_QFileSystemModel, &sipCpp, &a0, &a1, sipType_QModelIndex, &a2))
        {
             ::QModelIndex*sipRes;

            sipRes = new  ::QModelIndex((sipSelfWasArg ? sipCpp-> ::QFileSystemModel::sibling(a0,a1,*a2) : sipCpp->sibling(a0,a1,*a2)));

            return sipConvertFromNewType(sipRes,sipType_QModelIndex,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QFileSystemModel, sipName_sibling, doc_QFileSystemModel_sibling);

    return SIP_NULLPTR;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QFileSystemModel(void *, const sipTypeDef *);}
static void *cast_QFileSystemModel(void *sipCppV, const sipTypeDef *targetType)
{
     ::QFileSystemModel *sipCpp = reinterpret_cast< ::QFileSystemModel *>(sipCppV);

    if (targetType == sipType_QAbstractItemModel)
        return static_cast< ::QAbstractItemModel *>(sipCpp);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QFileSystemModel(void *, int);}
static void release_QFileSystemModel(void *sipCppV, int)
{
     ::QFileSystemModel *sipCpp = reinterpret_cast< ::QFileSystemModel *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void *array_QFileSystemModel(Py_ssize_t);}
static void *array_QFileSystemModel(Py_ssize_t sipNrElem)
{
    return new  ::QFileSystemModel[sipNrElem];
}


extern "C" {static void dealloc_QFileSystemModel(sipSimpleWrapper *);}
static void dealloc_QFileSystemModel(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQFileSystemModel *>(sipGetAddress(sipSelf))->sipPySelf = SIP_NULLPTR;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QFileSystemModel(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QFileSystemModel(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QFileSystemModel(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQFileSystemModel *sipCpp = SIP_NULLPTR;

    {
         ::QObject* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QObject, &a0, sipOwner))
        {
            sipCpp = new sipQFileSystemModel(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QFileSystemModel[] = {{0, 0, 1}};


static PyMethodDef methods_QFileSystemModel[] = {
    {sipName_canFetchMore, meth_QFileSystemModel_canFetchMore, METH_VARARGS, doc_QFileSystemModel_canFetchMore},
    {sipName_columnCount, SIP_MLMETH_CAST(meth_QFileSystemModel_columnCount), METH_VARARGS|METH_KEYWORDS, doc_QFileSystemModel_columnCount},
    {sipName_data, SIP_MLMETH_CAST(meth_QFileSystemModel_data), METH_VARARGS|METH_KEYWORDS, doc_QFileSystemModel_data},
    {sipName_dropMimeData, meth_QFileSystemModel_dropMimeData, METH_VARARGS, doc_QFileSystemModel_dropMimeData},
    {sipName_event, meth_QFileSystemModel_event, METH_VARARGS, doc_QFileSystemModel_event},
    {sipName_fetchMore, meth_QFileSystemModel_fetchMore, METH_VARARGS, doc_QFileSystemModel_fetchMore},
    {sipName_fileIcon, meth_QFileSystemModel_fileIcon, METH_VARARGS, doc_QFileSystemModel_fileIcon},
    {sipName_fileInfo, meth_QFileSystemModel_fileInfo, METH_VARARGS, doc_QFileSystemModel_fileInfo},
    {sipName_fileName, meth_QFileSystemModel_fileName, METH_VARARGS, doc_QFileSystemModel_fileName},
    {sipName_filePath, meth_QFileSystemModel_filePath, METH_VARARGS, doc_QFileSystemModel_filePath},
    {sipName_filter, meth_QFileSystemModel_filter, METH_VARARGS, doc_QFileSystemModel_filter},
    {sipName_flags, meth_QFileSystemModel_flags, METH_VARARGS, doc_QFileSystemModel_flags},
    {sipName_hasChildren, SIP_MLMETH_CAST(meth_QFileSystemModel_hasChildren), METH_VARARGS|METH_KEYWORDS, doc_QFileSystemModel_hasChildren},
    {sipName_headerData, SIP_MLMETH_CAST(meth_QFileSystemModel_headerData), METH_VARARGS|METH_KEYWORDS, doc_QFileSystemModel_headerData},
    {sipName_iconProvider, meth_QFileSystemModel_iconProvider, METH_VARARGS, doc_QFileSystemModel_iconProvider},
    {sipName_index, SIP_MLMETH_CAST(meth_QFileSystemModel_index), METH_VARARGS|METH_KEYWORDS, doc_QFileSystemModel_index},
    {sipName_isDir, meth_QFileSystemModel_isDir, METH_VARARGS, doc_QFileSystemModel_isDir},
    {sipName_isReadOnly, meth_QFileSystemModel_isReadOnly, METH_VARARGS, doc_QFileSystemModel_isReadOnly},
    {sipName_lastModified, meth_QFileSystemModel_lastModified, METH_VARARGS, doc_QFileSystemModel_lastModified},
    {sipName_mimeData, meth_QFileSystemModel_mimeData, METH_VARARGS, doc_QFileSystemModel_mimeData},
    {sipName_mimeTypes, meth_QFileSystemModel_mimeTypes, METH_VARARGS, doc_QFileSystemModel_mimeTypes},
    {sipName_mkdir, meth_QFileSystemModel_mkdir, METH_VARARGS, doc_QFileSystemModel_mkdir},
    {sipName_myComputer, SIP_MLMETH_CAST(meth_QFileSystemModel_myComputer), METH_VARARGS|METH_KEYWORDS, doc_QFileSystemModel_myComputer},
    {sipName_nameFilterDisables, meth_QFileSystemModel_nameFilterDisables, METH_VARARGS, doc_QFileSystemModel_nameFilterDisables},
    {sipName_nameFilters, meth_QFileSystemModel_nameFilters, METH_VARARGS, doc_QFileSystemModel_nameFilters},
    {sipName_parent, meth_QFileSystemModel_parent, METH_VARARGS, doc_QFileSystemModel_parent},
    {sipName_permissions, meth_QFileSystemModel_permissions, METH_VARARGS, doc_QFileSystemModel_permissions},
    {sipName_remove, meth_QFileSystemModel_remove, METH_VARARGS, doc_QFileSystemModel_remove},
    {sipName_resolveSymlinks, meth_QFileSystemModel_resolveSymlinks, METH_VARARGS, doc_QFileSystemModel_resolveSymlinks},
    {sipName_rmdir, meth_QFileSystemModel_rmdir, METH_VARARGS, doc_QFileSystemModel_rmdir},
    {sipName_rootDirectory, meth_QFileSystemModel_rootDirectory, METH_VARARGS, doc_QFileSystemModel_rootDirectory},
    {sipName_rootPath, meth_QFileSystemModel_rootPath, METH_VARARGS, doc_QFileSystemModel_rootPath},
    {sipName_rowCount, SIP_MLMETH_CAST(meth_QFileSystemModel_rowCount), METH_VARARGS|METH_KEYWORDS, doc_QFileSystemModel_rowCount},
    {sipName_setData, SIP_MLMETH_CAST(meth_QFileSystemModel_setData), METH_VARARGS|METH_KEYWORDS, doc_QFileSystemModel_setData},
    {sipName_setFilter, meth_QFileSystemModel_setFilter, METH_VARARGS, doc_QFileSystemModel_setFilter},
    {sipName_setIconProvider, meth_QFileSystemModel_setIconProvider, METH_VARARGS, doc_QFileSystemModel_setIconProvider},
    {sipName_setNameFilterDisables, meth_QFileSystemModel_setNameFilterDisables, METH_VARARGS, doc_QFileSystemModel_setNameFilterDisables},
    {sipName_setNameFilters, meth_QFileSystemModel_setNameFilters, METH_VARARGS, doc_QFileSystemModel_setNameFilters},
    {sipName_setReadOnly, meth_QFileSystemModel_setReadOnly, METH_VARARGS, doc_QFileSystemModel_setReadOnly},
    {sipName_setResolveSymlinks, meth_QFileSystemModel_setResolveSymlinks, METH_VARARGS, doc_QFileSystemModel_setResolveSymlinks},
    {sipName_setRootPath, meth_QFileSystemModel_setRootPath, METH_VARARGS, doc_QFileSystemModel_setRootPath},
    {sipName_sibling, meth_QFileSystemModel_sibling, METH_VARARGS, doc_QFileSystemModel_sibling},
    {sipName_size, meth_QFileSystemModel_size, METH_VARARGS, doc_QFileSystemModel_size},
    {sipName_sort, SIP_MLMETH_CAST(meth_QFileSystemModel_sort), METH_VARARGS|METH_KEYWORDS, doc_QFileSystemModel_sort},
    {sipName_supportedDropActions, meth_QFileSystemModel_supportedDropActions, METH_VARARGS, doc_QFileSystemModel_supportedDropActions},
    {sipName_timerEvent, meth_QFileSystemModel_timerEvent, METH_VARARGS, doc_QFileSystemModel_timerEvent},
    {sipName_type, meth_QFileSystemModel_type, METH_VARARGS, doc_QFileSystemModel_type}
};

static sipEnumMemberDef enummembers_QFileSystemModel[] = {
    {sipName_FileIconRole, static_cast<int>( ::QFileSystemModel::FileIconRole), 87},
    {sipName_FileNameRole, static_cast<int>( ::QFileSystemModel::FileNameRole), 87},
    {sipName_FilePathRole, static_cast<int>( ::QFileSystemModel::FilePathRole), 87},
    {sipName_FilePermissions, static_cast<int>( ::QFileSystemModel::FilePermissions), 87},
};

PyDoc_STRVAR(doc_QFileSystemModel, "\1QFileSystemModel(parent: QObject = None)");


/* Define this type's signals. */
static const pyqt5QtSignal signals_QFileSystemModel[] = {
    {"directoryLoaded(QString)", "\1directoryLoaded(self, str)", SIP_NULLPTR, SIP_NULLPTR},
    {"rootPathChanged(QString)", "\1rootPathChanged(self, str)", SIP_NULLPTR, SIP_NULLPTR},
    {"fileRenamed(QString,QString,QString)", "\1fileRenamed(self, str, str, str)", SIP_NULLPTR, SIP_NULLPTR},
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
};


static pyqt5ClassPluginDef plugin_QFileSystemModel = {
    & ::QFileSystemModel::staticMetaObject,
    0,
    signals_QFileSystemModel,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtWidgets_QFileSystemModel = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QFileSystemModel,
        SIP_NULLPTR,
        &plugin_QFileSystemModel
    },
    {
        sipNameNr_QFileSystemModel,
        {0, 0, 1},
        47, methods_QFileSystemModel,
        4, enummembers_QFileSystemModel,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QFileSystemModel,
    -1,
    -1,
    supers_QFileSystemModel,
    SIP_NULLPTR,
    init_type_QFileSystemModel,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_QFileSystemModel,
    SIP_NULLPTR,
    array_QFileSystemModel,
    SIP_NULLPTR,
    release_QFileSystemModel,
    cast_QFileSystemModel,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
