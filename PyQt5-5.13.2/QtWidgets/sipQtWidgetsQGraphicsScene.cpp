/*
 * Interface wrapper code.
 *
 * Generated by SIP 5.3.0
 *
 * Copyright (c) 2019 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 29 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"

#line 28 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 33 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 164 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 36 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 39 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 42 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 45 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 95 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 48 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 30 "sip/QtGui/qtransform.sip"
#include <qtransform.h>
#line 51 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicswidget.sip"
#include <qgraphicswidget.h>
#line 54 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "sip/QtGui/qpalette.sip"
#include <qpalette.h>
#line 57 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "sip/QtGui/qfont.sip"
#include <qfont.h>
#line 60 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qstyle.sip"
#include <qstyle.h>
#line 63 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsproxywidget.sip"
#include <qgraphicsproxywidget.h>
#line 66 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 28 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 69 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 72 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 75 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 78 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 500 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 81 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 119 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 84 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 88 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 87 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 354 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 90 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 184 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 93 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 375 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 96 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 199 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 99 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 139 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 102 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 105 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 108 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 111 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsview.sip"
#include <qgraphicsview.h>
#line 114 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 117 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "sip/QtGui/qbrush.sip"
#include <qbrush.h>
#line 120 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 637 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 123 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 126 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 555 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 129 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 422 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 132 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "sip/QtGui/qpen.sip"
#include <qpen.h>
#line 135 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 472 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 138 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 329 "sip/QtGui/qpolygon.sip"
#include <qpolygon.h>
#line 141 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 520 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 144 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "sip/QtGui/qpixmap.sip"
#include <qpixmap.h>
#line 147 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 401 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 150 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 495 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 153 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 95 "sip/QtCore/qline.sip"
#include <qline.h>
#line 156 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 445 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 159 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 578 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 162 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 165 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 146 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 170 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "sip/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 173 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 247 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 176 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 235 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 179 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 182 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 30 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 185 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 188 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 191 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 194 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 197 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "sip/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 200 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 203 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsScene.cpp"


class sipQGraphicsScene : public  ::QGraphicsScene
{
public:
    sipQGraphicsScene( ::QObject*);
    sipQGraphicsScene(const  ::QRectF&, ::QObject*);
    sipQGraphicsScene( ::qreal, ::qreal, ::qreal, ::qreal, ::QObject*);
    virtual ~sipQGraphicsScene();

    int qt_metacall(QMetaObject::Call, int, void **) SIP_OVERRIDE;
    void *qt_metacast(const char *) SIP_OVERRIDE;
    const QMetaObject *metaObject() const SIP_OVERRIDE;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void drawForeground( ::QPainter*,const  ::QRectF&) SIP_OVERRIDE;
    void drawBackground( ::QPainter*,const  ::QRectF&) SIP_OVERRIDE;
    void inputMethodEvent( ::QInputMethodEvent*) SIP_OVERRIDE;
    void wheelEvent( ::QGraphicsSceneWheelEvent*) SIP_OVERRIDE;
    void mouseDoubleClickEvent( ::QGraphicsSceneMouseEvent*) SIP_OVERRIDE;
    void mouseReleaseEvent( ::QGraphicsSceneMouseEvent*) SIP_OVERRIDE;
    void mouseMoveEvent( ::QGraphicsSceneMouseEvent*) SIP_OVERRIDE;
    void mousePressEvent( ::QGraphicsSceneMouseEvent*) SIP_OVERRIDE;
    void keyReleaseEvent( ::QKeyEvent*) SIP_OVERRIDE;
    void keyPressEvent( ::QKeyEvent*) SIP_OVERRIDE;
    void helpEvent( ::QGraphicsSceneHelpEvent*) SIP_OVERRIDE;
    void focusOutEvent( ::QFocusEvent*) SIP_OVERRIDE;
    void focusInEvent( ::QFocusEvent*) SIP_OVERRIDE;
    void dropEvent( ::QGraphicsSceneDragDropEvent*) SIP_OVERRIDE;
    void dragLeaveEvent( ::QGraphicsSceneDragDropEvent*) SIP_OVERRIDE;
    void dragMoveEvent( ::QGraphicsSceneDragDropEvent*) SIP_OVERRIDE;
    void dragEnterEvent( ::QGraphicsSceneDragDropEvent*) SIP_OVERRIDE;
    void contextMenuEvent( ::QGraphicsSceneContextMenuEvent*) SIP_OVERRIDE;
     ::QVariant inputMethodQuery( ::Qt::InputMethodQuery) const SIP_OVERRIDE;
    bool event( ::QEvent*) SIP_OVERRIDE;
    bool eventFilter( ::QObject*, ::QEvent*) SIP_OVERRIDE;
    void timerEvent( ::QTimerEvent*) SIP_OVERRIDE;
    void childEvent( ::QChildEvent*) SIP_OVERRIDE;
    void customEvent( ::QEvent*) SIP_OVERRIDE;
    void connectNotify(const  ::QMetaMethod&) SIP_OVERRIDE;
    void disconnectNotify(const  ::QMetaMethod&) SIP_OVERRIDE;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsScene(const sipQGraphicsScene &);
    sipQGraphicsScene &operator = (const sipQGraphicsScene &);

    char sipPyMethods[26];
};

sipQGraphicsScene::sipQGraphicsScene( ::QObject*a0):  ::QGraphicsScene(a0), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsScene::sipQGraphicsScene(const  ::QRectF& a0, ::QObject*a1):  ::QGraphicsScene(a0,a1), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsScene::sipQGraphicsScene( ::qreal a0, ::qreal a1, ::qreal a2, ::qreal a3, ::QObject*a4):  ::QGraphicsScene(a0,a1,a2,a3,a4), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsScene::~sipQGraphicsScene()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

const QMetaObject *sipQGraphicsScene::metaObject() const
{
    if (sipGetInterpreter())
        return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_QtWidgets_qt_metaobject(sipPySelf,sipType_QGraphicsScene);

    return  ::QGraphicsScene::metaObject();
}

int sipQGraphicsScene::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id =  ::QGraphicsScene::qt_metacall(_c,_id,_a);

    if (_id >= 0)
    {
        SIP_BLOCK_THREADS
        _id = sip_QtWidgets_qt_metacall(sipPySelf,sipType_QGraphicsScene,_c,_id,_a);
        SIP_UNBLOCK_THREADS
    }

    return _id;
}

void *sipQGraphicsScene::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_QtWidgets_qt_metacast(sipPySelf, sipType_QGraphicsScene, _clname, &sipCpp) ? sipCpp :  ::QGraphicsScene::qt_metacast(_clname));
}

void sipQGraphicsScene::drawForeground( ::QPainter*a0,const  ::QRectF& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[0], &sipPySelf, SIP_NULLPTR, sipName_drawForeground);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[0], sipPySelf, SIP_NULLPTR, sipName_drawForeground);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::drawForeground(a0,a1);
        return;
    }

    extern void sipVH_QtWidgets_163(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPainter*,const  ::QRectF&);

    sipVH_QtWidgets_163(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsScene::drawBackground( ::QPainter*a0,const  ::QRectF& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[1], &sipPySelf, SIP_NULLPTR, sipName_drawBackground);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[1], sipPySelf, SIP_NULLPTR, sipName_drawBackground);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::drawBackground(a0,a1);
        return;
    }

    extern void sipVH_QtWidgets_163(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPainter*,const  ::QRectF&);

    sipVH_QtWidgets_163(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsScene::inputMethodEvent( ::QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[2], &sipPySelf, SIP_NULLPTR, sipName_inputMethodEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[2], sipPySelf, SIP_NULLPTR, sipName_inputMethodEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_29(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QInputMethodEvent*);

    sipVH_QtWidgets_29(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsScene::wheelEvent( ::QGraphicsSceneWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[3], &sipPySelf, SIP_NULLPTR, sipName_wheelEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[3], sipPySelf, SIP_NULLPTR, sipName_wheelEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_157(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneWheelEvent*);

    sipVH_QtWidgets_157(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsScene::mouseDoubleClickEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[4], &sipPySelf, SIP_NULLPTR, sipName_mouseDoubleClickEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[4], sipPySelf, SIP_NULLPTR, sipName_mouseDoubleClickEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsScene::mouseReleaseEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[5], &sipPySelf, SIP_NULLPTR, sipName_mouseReleaseEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[5], sipPySelf, SIP_NULLPTR, sipName_mouseReleaseEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsScene::mouseMoveEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[6], &sipPySelf, SIP_NULLPTR, sipName_mouseMoveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[6], sipPySelf, SIP_NULLPTR, sipName_mouseMoveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsScene::mousePressEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[7], &sipPySelf, SIP_NULLPTR, sipName_mousePressEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[7], sipPySelf, SIP_NULLPTR, sipName_mousePressEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsScene::keyReleaseEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[8], &sipPySelf, SIP_NULLPTR, sipName_keyReleaseEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[8], sipPySelf, SIP_NULLPTR, sipName_keyReleaseEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::keyReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtWidgets_14(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsScene::keyPressEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[9], &sipPySelf, SIP_NULLPTR, sipName_keyPressEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[9], sipPySelf, SIP_NULLPTR, sipName_keyPressEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::keyPressEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtWidgets_14(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsScene::helpEvent( ::QGraphicsSceneHelpEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[10], &sipPySelf, SIP_NULLPTR, sipName_helpEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[10], sipPySelf, SIP_NULLPTR, sipName_helpEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::helpEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_162(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHelpEvent*);

    sipVH_QtWidgets_162(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsScene::focusOutEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[11], &sipPySelf, SIP_NULLPTR, sipName_focusOutEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[11], sipPySelf, SIP_NULLPTR, sipName_focusOutEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::focusOutEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtWidgets_15(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsScene::focusInEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[12], &sipPySelf, SIP_NULLPTR, sipName_focusInEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[12], sipPySelf, SIP_NULLPTR, sipName_focusInEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::focusInEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtWidgets_15(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsScene::dropEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[13], &sipPySelf, SIP_NULLPTR, sipName_dropEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[13], sipPySelf, SIP_NULLPTR, sipName_dropEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::dropEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsScene::dragLeaveEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[14], &sipPySelf, SIP_NULLPTR, sipName_dragLeaveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[14], sipPySelf, SIP_NULLPTR, sipName_dragLeaveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsScene::dragMoveEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[15], &sipPySelf, SIP_NULLPTR, sipName_dragMoveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[15], sipPySelf, SIP_NULLPTR, sipName_dragMoveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsScene::dragEnterEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[16], &sipPySelf, SIP_NULLPTR, sipName_dragEnterEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[16], sipPySelf, SIP_NULLPTR, sipName_dragEnterEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsScene::contextMenuEvent( ::QGraphicsSceneContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[17], &sipPySelf, SIP_NULLPTR, sipName_contextMenuEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[17], sipPySelf, SIP_NULLPTR, sipName_contextMenuEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_151(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneContextMenuEvent*);

    sipVH_QtWidgets_151(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QVariant sipQGraphicsScene::inputMethodQuery( ::Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[18]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_inputMethodQuery);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[18]), sipPySelf, SIP_NULLPTR, sipName_inputMethodQuery);
#endif

    if (!sipMeth)
        return  ::QGraphicsScene::inputMethodQuery(a0);

    extern  ::QVariant sipVH_QtWidgets_30(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::Qt::InputMethodQuery);

    return sipVH_QtWidgets_30(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsScene::event( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[19], &sipPySelf, SIP_NULLPTR, sipName_event);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[19], sipPySelf, SIP_NULLPTR, sipName_event);
#endif

    if (!sipMeth)
        return  ::QGraphicsScene::event(a0);

    extern bool sipVH_QtWidgets_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtWidgets_5(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsScene::eventFilter( ::QObject*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[20], &sipPySelf, SIP_NULLPTR, sipName_eventFilter);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[20], sipPySelf, SIP_NULLPTR, sipName_eventFilter);
#endif

    if (!sipMeth)
        return  ::QGraphicsScene::eventFilter(a0,a1);

    extern bool sipVH_QtWidgets_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QObject*, ::QEvent*);

    return sipVH_QtWidgets_4(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsScene::timerEvent( ::QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[21], &sipPySelf, SIP_NULLPTR, sipName_timerEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[21], sipPySelf, SIP_NULLPTR, sipName_timerEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::timerEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTimerEvent*);

    sipVH_QtWidgets_3(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsScene::childEvent( ::QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[22], &sipPySelf, SIP_NULLPTR, sipName_childEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[22], sipPySelf, SIP_NULLPTR, sipName_childEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::childEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_2(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QChildEvent*);

    sipVH_QtWidgets_2(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsScene::customEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[23], &sipPySelf, SIP_NULLPTR, sipName_customEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[23], sipPySelf, SIP_NULLPTR, sipName_customEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::customEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsScene::connectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[24], &sipPySelf, SIP_NULLPTR, sipName_connectNotify);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[24], sipPySelf, SIP_NULLPTR, sipName_connectNotify);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::connectNotify(a0);
        return;
    }

    extern void sipVH_QtWidgets_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtWidgets_0(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsScene::disconnectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[25], &sipPySelf, SIP_NULLPTR, sipName_disconnectNotify);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[25], sipPySelf, SIP_NULLPTR, sipName_disconnectNotify);
#endif

    if (!sipMeth)
    {
         ::QGraphicsScene::disconnectNotify(a0);
        return;
    }

    extern void sipVH_QtWidgets_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtWidgets_0(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QGraphicsScene_sceneRect, "sceneRect(self) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsScene_sceneRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_sceneRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->sceneRect());

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_sceneRect, doc_QGraphicsScene_sceneRect);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_width, "width(self) -> float");

extern "C" {static PyObject *meth_QGraphicsScene_width(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_width(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->width();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_width, doc_QGraphicsScene_width);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_height, "height(self) -> float");

extern "C" {static PyObject *meth_QGraphicsScene_height(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_height(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->height();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_height, doc_QGraphicsScene_height);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_setSceneRect, "setSceneRect(self, QRectF)\n"
"setSceneRect(self, float, float, float, float)");

extern "C" {static PyObject *meth_QGraphicsScene_setSceneRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setSceneRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QRectF* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QRectF, &a0))
        {
            sipCpp->setSceneRect(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->setSceneRect(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setSceneRect, doc_QGraphicsScene_setSceneRect);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_render, "render(self, QPainter, target: QRectF = QRectF(), source: QRectF = QRectF(), mode: Qt.AspectRatioMode = Qt.KeepAspectRatio)");

extern "C" {static PyObject *meth_QGraphicsScene_render(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_render(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QPainter* a0;
        const  ::QRectF& a1def = QRectF();
        const  ::QRectF* a1 = &a1def;
        const  ::QRectF& a2def = QRectF();
        const  ::QRectF* a2 = &a2def;
         ::Qt::AspectRatioMode a3 = Qt::KeepAspectRatio;
         ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_target,
            sipName_source,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ8|J9J9E", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPainter, &a0, sipType_QRectF, &a1, sipType_QRectF, &a2, sipType_Qt_AspectRatioMode, &a3))
        {
            sipCpp->render(a0,*a1,*a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_render, doc_QGraphicsScene_render);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_itemIndexMethod, "itemIndexMethod(self) -> QGraphicsScene.ItemIndexMethod");

extern "C" {static PyObject *meth_QGraphicsScene_itemIndexMethod(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_itemIndexMethod(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
             ::QGraphicsScene::ItemIndexMethod sipRes;

            sipRes = sipCpp->itemIndexMethod();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QGraphicsScene_ItemIndexMethod);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_itemIndexMethod, doc_QGraphicsScene_itemIndexMethod);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_setItemIndexMethod, "setItemIndexMethod(self, QGraphicsScene.ItemIndexMethod)");

extern "C" {static PyObject *meth_QGraphicsScene_setItemIndexMethod(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setItemIndexMethod(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsScene::ItemIndexMethod a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsScene_ItemIndexMethod, &a0))
        {
            sipCpp->setItemIndexMethod(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setItemIndexMethod, doc_QGraphicsScene_setItemIndexMethod);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_itemsBoundingRect, "itemsBoundingRect(self) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsScene_itemsBoundingRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_itemsBoundingRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->itemsBoundingRect());

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_itemsBoundingRect, doc_QGraphicsScene_itemsBoundingRect);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_items, "items(self, order: Qt.SortOrder = Qt.DescendingOrder) -> List[QGraphicsItem]\n"
"items(self, Union[QPointF, QPoint], mode: Qt.ItemSelectionMode = Qt.IntersectsItemShape, order: Qt.SortOrder = Qt.DescendingOrder, deviceTransform: QTransform = QTransform()) -> List[QGraphicsItem]\n"
"items(self, QRectF, mode: Qt.ItemSelectionMode = Qt.IntersectsItemShape, order: Qt.SortOrder = Qt.DescendingOrder, deviceTransform: QTransform = QTransform()) -> List[QGraphicsItem]\n"
"items(self, QPolygonF, mode: Qt.ItemSelectionMode = Qt.IntersectsItemShape, order: Qt.SortOrder = Qt.DescendingOrder, deviceTransform: QTransform = QTransform()) -> List[QGraphicsItem]\n"
"items(self, QPainterPath, mode: Qt.ItemSelectionMode = Qt.IntersectsItemShape, order: Qt.SortOrder = Qt.DescendingOrder, deviceTransform: QTransform = QTransform()) -> List[QGraphicsItem]\n"
"items(self, float, float, float, float, Qt.ItemSelectionMode, Qt.SortOrder, deviceTransform: QTransform = QTransform()) -> List[QGraphicsItem]");

extern "C" {static PyObject *meth_QGraphicsScene_items(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_items(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::Qt::SortOrder a0 = Qt::DescendingOrder;
        const  ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            sipName_order,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|E", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_Qt_SortOrder, &a0))
        {
            QList< ::QGraphicsItem*>*sipRes;

            sipRes = new QList< ::QGraphicsItem*>(sipCpp->items(a0));

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,SIP_NULLPTR);
        }
    }

    {
        const  ::QPointF* a0;
        int a0State = 0;
         ::Qt::ItemSelectionMode a1 = Qt::IntersectsItemShape;
         ::Qt::SortOrder a2 = Qt::DescendingOrder;
        const  ::QTransform& a3def = QTransform();
        const  ::QTransform* a3 = &a3def;
        const  ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_mode,
            sipName_order,
            sipName_deviceTransform,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1|EEJ9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPointF, &a0, &a0State, sipType_Qt_ItemSelectionMode, &a1, sipType_Qt_SortOrder, &a2, sipType_QTransform, &a3))
        {
            QList< ::QGraphicsItem*>*sipRes;

            sipRes = new QList< ::QGraphicsItem*>(sipCpp->items(*a0,a1,a2,*a3));
            sipReleaseType(const_cast< ::QPointF *>(a0),sipType_QPointF,a0State);

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,SIP_NULLPTR);
        }
    }

    {
        const  ::QRectF* a0;
         ::Qt::ItemSelectionMode a1 = Qt::IntersectsItemShape;
         ::Qt::SortOrder a2 = Qt::DescendingOrder;
        const  ::QTransform& a3def = QTransform();
        const  ::QTransform* a3 = &a3def;
        const  ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_mode,
            sipName_order,
            sipName_deviceTransform,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9|EEJ9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QRectF, &a0, sipType_Qt_ItemSelectionMode, &a1, sipType_Qt_SortOrder, &a2, sipType_QTransform, &a3))
        {
            QList< ::QGraphicsItem*>*sipRes;

            sipRes = new QList< ::QGraphicsItem*>(sipCpp->items(*a0,a1,a2,*a3));

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,SIP_NULLPTR);
        }
    }

    {
        const  ::QPolygonF* a0;
         ::Qt::ItemSelectionMode a1 = Qt::IntersectsItemShape;
         ::Qt::SortOrder a2 = Qt::DescendingOrder;
        const  ::QTransform& a3def = QTransform();
        const  ::QTransform* a3 = &a3def;
        const  ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_mode,
            sipName_order,
            sipName_deviceTransform,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9|EEJ9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPolygonF, &a0, sipType_Qt_ItemSelectionMode, &a1, sipType_Qt_SortOrder, &a2, sipType_QTransform, &a3))
        {
            QList< ::QGraphicsItem*>*sipRes;

            sipRes = new QList< ::QGraphicsItem*>(sipCpp->items(*a0,a1,a2,*a3));

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,SIP_NULLPTR);
        }
    }

    {
        const  ::QPainterPath* a0;
         ::Qt::ItemSelectionMode a1 = Qt::IntersectsItemShape;
         ::Qt::SortOrder a2 = Qt::DescendingOrder;
        const  ::QTransform& a3def = QTransform();
        const  ::QTransform* a3 = &a3def;
        const  ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_mode,
            sipName_order,
            sipName_deviceTransform,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9|EEJ9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPainterPath, &a0, sipType_Qt_ItemSelectionMode, &a1, sipType_Qt_SortOrder, &a2, sipType_QTransform, &a3))
        {
            QList< ::QGraphicsItem*>*sipRes;

            sipRes = new QList< ::QGraphicsItem*>(sipCpp->items(*a0,a1,a2,*a3));

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,SIP_NULLPTR);
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
         ::Qt::ItemSelectionMode a4;
         ::Qt::SortOrder a5;
        const  ::QTransform& a6def = QTransform();
        const  ::QTransform* a6 = &a6def;
        const  ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_deviceTransform,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BddddEE|J9", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0, &a1, &a2, &a3, sipType_Qt_ItemSelectionMode, &a4, sipType_Qt_SortOrder, &a5, sipType_QTransform, &a6))
        {
            QList< ::QGraphicsItem*>*sipRes;

            sipRes = new QList< ::QGraphicsItem*>(sipCpp->items(a0,a1,a2,a3,a4,a5,*a6));

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_items, doc_QGraphicsScene_items);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_collidingItems, "collidingItems(self, QGraphicsItem, mode: Qt.ItemSelectionMode = Qt.IntersectsItemShape) -> List[QGraphicsItem]");

extern "C" {static PyObject *meth_QGraphicsScene_collidingItems(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_collidingItems(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem* a0;
         ::Qt::ItemSelectionMode a1 = Qt::IntersectsItemShape;
        const  ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ8|E", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsItem, &a0, sipType_Qt_ItemSelectionMode, &a1))
        {
            QList< ::QGraphicsItem*>*sipRes;

            sipRes = new QList< ::QGraphicsItem*>(sipCpp->collidingItems(a0,a1));

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_collidingItems, doc_QGraphicsScene_collidingItems);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_selectedItems, "selectedItems(self) -> List[QGraphicsItem]");

extern "C" {static PyObject *meth_QGraphicsScene_selectedItems(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_selectedItems(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            QList< ::QGraphicsItem*>*sipRes;

            sipRes = new QList< ::QGraphicsItem*>(sipCpp->selectedItems());

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_selectedItems, doc_QGraphicsScene_selectedItems);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_setSelectionArea, "setSelectionArea(self, QPainterPath, QTransform)\n"
"setSelectionArea(self, QPainterPath, mode: Qt.ItemSelectionMode = Qt.IntersectsItemShape, deviceTransform: QTransform = QTransform())\n"
"setSelectionArea(self, QPainterPath, Qt.ItemSelectionOperation, mode: Qt.ItemSelectionMode = Qt.IntersectsItemShape, deviceTransform: QTransform = QTransform())");

extern "C" {static PyObject *meth_QGraphicsScene_setSelectionArea(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setSelectionArea(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QPainterPath* a0;
        const  ::QTransform* a1;
         ::QGraphicsScene *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, "BJ9J9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPainterPath, &a0, sipType_QTransform, &a1))
        {
            sipCpp->setSelectionArea(*a0,*a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const  ::QPainterPath* a0;
         ::Qt::ItemSelectionMode a1 = Qt::IntersectsItemShape;
        const  ::QTransform& a2def = QTransform();
        const  ::QTransform* a2 = &a2def;
         ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_mode,
            sipName_deviceTransform,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9|EJ9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPainterPath, &a0, sipType_Qt_ItemSelectionMode, &a1, sipType_QTransform, &a2))
        {
            sipCpp->setSelectionArea(*a0,a1,*a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const  ::QPainterPath* a0;
         ::Qt::ItemSelectionOperation a1;
         ::Qt::ItemSelectionMode a2 = Qt::IntersectsItemShape;
        const  ::QTransform& a3def = QTransform();
        const  ::QTransform* a3 = &a3def;
         ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_mode,
            sipName_deviceTransform,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9E|EJ9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPainterPath, &a0, sipType_Qt_ItemSelectionOperation, &a1, sipType_Qt_ItemSelectionMode, &a2, sipType_QTransform, &a3))
        {
            sipCpp->setSelectionArea(*a0,a1,a2,*a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setSelectionArea, doc_QGraphicsScene_setSelectionArea);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_clearSelection, "clearSelection(self)");

extern "C" {static PyObject *meth_QGraphicsScene_clearSelection(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_clearSelection(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            sipCpp->clearSelection();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_clearSelection, doc_QGraphicsScene_clearSelection);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_createItemGroup, "createItemGroup(self, Iterable[QGraphicsItem]) -> QGraphicsItemGroup");

extern "C" {static PyObject *meth_QGraphicsScene_createItemGroup(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_createItemGroup(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const QList< ::QGraphicsItem*>* a0;
        int a0State = 0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ3", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QList_0101QGraphicsItem,&a0, &a0State))
        {
             ::QGraphicsItemGroup*sipRes;

            sipRes = sipCpp->createItemGroup(*a0);
            sipReleaseType(const_cast<QList< ::QGraphicsItem*> *>(a0),sipType_QList_0101QGraphicsItem,a0State);

            return sipConvertFromType(sipRes,sipType_QGraphicsItemGroup,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_createItemGroup, doc_QGraphicsScene_createItemGroup);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_destroyItemGroup, "destroyItemGroup(self, QGraphicsItemGroup)");

extern "C" {static PyObject *meth_QGraphicsScene_destroyItemGroup(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_destroyItemGroup(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItemGroup* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsItemGroup, &a0))
        {
            sipCpp->destroyItemGroup(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_destroyItemGroup, doc_QGraphicsScene_destroyItemGroup);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_addItem, "addItem(self, QGraphicsItem)");

extern "C" {static PyObject *meth_QGraphicsScene_addItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_addItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            sipCpp->addItem(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_addItem, doc_QGraphicsScene_addItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_addEllipse, "addEllipse(self, QRectF, pen: Union[QPen, QColor, Qt.GlobalColor, QGradient] = QPen(), brush: Union[QBrush, QColor, Qt.GlobalColor, QGradient] = QBrush()) -> QGraphicsEllipseItem\n"
"addEllipse(self, float, float, float, float, pen: Union[QPen, QColor, Qt.GlobalColor, QGradient] = QPen(), brush: Union[QBrush, QColor, Qt.GlobalColor, QGradient] = QBrush()) -> QGraphicsEllipseItem");

extern "C" {static PyObject *meth_QGraphicsScene_addEllipse(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_addEllipse(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QRectF* a0;
        const  ::QPen& a1def = QPen();
        const  ::QPen* a1 = &a1def;
        int a1State = 0;
        const  ::QBrush& a2def = QBrush();
        const  ::QBrush* a2 = &a2def;
        int a2State = 0;
         ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_pen,
            sipName_brush,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9|J1J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QRectF, &a0, sipType_QPen, &a1, &a1State, sipType_QBrush, &a2, &a2State))
        {
             ::QGraphicsEllipseItem*sipRes;

            sipRes = sipCpp->addEllipse(*a0,*a1,*a2);
            sipReleaseType(const_cast< ::QPen *>(a1),sipType_QPen,a1State);
            sipReleaseType(const_cast< ::QBrush *>(a2),sipType_QBrush,a2State);

            return sipConvertFromType(sipRes,sipType_QGraphicsEllipseItem,SIP_NULLPTR);
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
        const  ::QPen& a4def = QPen();
        const  ::QPen* a4 = &a4def;
        int a4State = 0;
        const  ::QBrush& a5def = QBrush();
        const  ::QBrush* a5 = &a5def;
        int a5State = 0;
         ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_pen,
            sipName_brush,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bdddd|J1J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0, &a1, &a2, &a3, sipType_QPen, &a4, &a4State, sipType_QBrush, &a5, &a5State))
        {
             ::QGraphicsEllipseItem*sipRes;

            sipRes = sipCpp->addEllipse(a0,a1,a2,a3,*a4,*a5);
            sipReleaseType(const_cast< ::QPen *>(a4),sipType_QPen,a4State);
            sipReleaseType(const_cast< ::QBrush *>(a5),sipType_QBrush,a5State);

            return sipConvertFromType(sipRes,sipType_QGraphicsEllipseItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_addEllipse, doc_QGraphicsScene_addEllipse);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_addLine, "addLine(self, QLineF, pen: Union[QPen, QColor, Qt.GlobalColor, QGradient] = QPen()) -> QGraphicsLineItem\n"
"addLine(self, float, float, float, float, pen: Union[QPen, QColor, Qt.GlobalColor, QGradient] = QPen()) -> QGraphicsLineItem");

extern "C" {static PyObject *meth_QGraphicsScene_addLine(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_addLine(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QLineF* a0;
        const  ::QPen& a1def = QPen();
        const  ::QPen* a1 = &a1def;
        int a1State = 0;
         ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_pen,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9|J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QLineF, &a0, sipType_QPen, &a1, &a1State))
        {
             ::QGraphicsLineItem*sipRes;

            sipRes = sipCpp->addLine(*a0,*a1);
            sipReleaseType(const_cast< ::QPen *>(a1),sipType_QPen,a1State);

            return sipConvertFromType(sipRes,sipType_QGraphicsLineItem,SIP_NULLPTR);
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
        const  ::QPen& a4def = QPen();
        const  ::QPen* a4 = &a4def;
        int a4State = 0;
         ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_pen,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bdddd|J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0, &a1, &a2, &a3, sipType_QPen, &a4, &a4State))
        {
             ::QGraphicsLineItem*sipRes;

            sipRes = sipCpp->addLine(a0,a1,a2,a3,*a4);
            sipReleaseType(const_cast< ::QPen *>(a4),sipType_QPen,a4State);

            return sipConvertFromType(sipRes,sipType_QGraphicsLineItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_addLine, doc_QGraphicsScene_addLine);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_addPath, "addPath(self, QPainterPath, pen: Union[QPen, QColor, Qt.GlobalColor, QGradient] = QPen(), brush: Union[QBrush, QColor, Qt.GlobalColor, QGradient] = QBrush()) -> QGraphicsPathItem");

extern "C" {static PyObject *meth_QGraphicsScene_addPath(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_addPath(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QPainterPath* a0;
        const  ::QPen& a1def = QPen();
        const  ::QPen* a1 = &a1def;
        int a1State = 0;
        const  ::QBrush& a2def = QBrush();
        const  ::QBrush* a2 = &a2def;
        int a2State = 0;
         ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_pen,
            sipName_brush,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9|J1J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPainterPath, &a0, sipType_QPen, &a1, &a1State, sipType_QBrush, &a2, &a2State))
        {
             ::QGraphicsPathItem*sipRes;

            sipRes = sipCpp->addPath(*a0,*a1,*a2);
            sipReleaseType(const_cast< ::QPen *>(a1),sipType_QPen,a1State);
            sipReleaseType(const_cast< ::QBrush *>(a2),sipType_QBrush,a2State);

            return sipConvertFromType(sipRes,sipType_QGraphicsPathItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_addPath, doc_QGraphicsScene_addPath);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_addPixmap, "addPixmap(self, QPixmap) -> QGraphicsPixmapItem");

extern "C" {static PyObject *meth_QGraphicsScene_addPixmap(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_addPixmap(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QPixmap* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPixmap, &a0))
        {
             ::QGraphicsPixmapItem*sipRes;

            sipRes = sipCpp->addPixmap(*a0);

            return sipConvertFromType(sipRes,sipType_QGraphicsPixmapItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_addPixmap, doc_QGraphicsScene_addPixmap);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_addPolygon, "addPolygon(self, QPolygonF, pen: Union[QPen, QColor, Qt.GlobalColor, QGradient] = QPen(), brush: Union[QBrush, QColor, Qt.GlobalColor, QGradient] = QBrush()) -> QGraphicsPolygonItem");

extern "C" {static PyObject *meth_QGraphicsScene_addPolygon(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_addPolygon(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QPolygonF* a0;
        const  ::QPen& a1def = QPen();
        const  ::QPen* a1 = &a1def;
        int a1State = 0;
        const  ::QBrush& a2def = QBrush();
        const  ::QBrush* a2 = &a2def;
        int a2State = 0;
         ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_pen,
            sipName_brush,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9|J1J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPolygonF, &a0, sipType_QPen, &a1, &a1State, sipType_QBrush, &a2, &a2State))
        {
             ::QGraphicsPolygonItem*sipRes;

            sipRes = sipCpp->addPolygon(*a0,*a1,*a2);
            sipReleaseType(const_cast< ::QPen *>(a1),sipType_QPen,a1State);
            sipReleaseType(const_cast< ::QBrush *>(a2),sipType_QBrush,a2State);

            return sipConvertFromType(sipRes,sipType_QGraphicsPolygonItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_addPolygon, doc_QGraphicsScene_addPolygon);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_addRect, "addRect(self, QRectF, pen: Union[QPen, QColor, Qt.GlobalColor, QGradient] = QPen(), brush: Union[QBrush, QColor, Qt.GlobalColor, QGradient] = QBrush()) -> QGraphicsRectItem\n"
"addRect(self, float, float, float, float, pen: Union[QPen, QColor, Qt.GlobalColor, QGradient] = QPen(), brush: Union[QBrush, QColor, Qt.GlobalColor, QGradient] = QBrush()) -> QGraphicsRectItem");

extern "C" {static PyObject *meth_QGraphicsScene_addRect(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_addRect(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QRectF* a0;
        const  ::QPen& a1def = QPen();
        const  ::QPen* a1 = &a1def;
        int a1State = 0;
        const  ::QBrush& a2def = QBrush();
        const  ::QBrush* a2 = &a2def;
        int a2State = 0;
         ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_pen,
            sipName_brush,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9|J1J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QRectF, &a0, sipType_QPen, &a1, &a1State, sipType_QBrush, &a2, &a2State))
        {
             ::QGraphicsRectItem*sipRes;

            sipRes = sipCpp->addRect(*a0,*a1,*a2);
            sipReleaseType(const_cast< ::QPen *>(a1),sipType_QPen,a1State);
            sipReleaseType(const_cast< ::QBrush *>(a2),sipType_QBrush,a2State);

            return sipConvertFromType(sipRes,sipType_QGraphicsRectItem,SIP_NULLPTR);
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
        const  ::QPen& a4def = QPen();
        const  ::QPen* a4 = &a4def;
        int a4State = 0;
        const  ::QBrush& a5def = QBrush();
        const  ::QBrush* a5 = &a5def;
        int a5State = 0;
         ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_pen,
            sipName_brush,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bdddd|J1J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0, &a1, &a2, &a3, sipType_QPen, &a4, &a4State, sipType_QBrush, &a5, &a5State))
        {
             ::QGraphicsRectItem*sipRes;

            sipRes = sipCpp->addRect(a0,a1,a2,a3,*a4,*a5);
            sipReleaseType(const_cast< ::QPen *>(a4),sipType_QPen,a4State);
            sipReleaseType(const_cast< ::QBrush *>(a5),sipType_QBrush,a5State);

            return sipConvertFromType(sipRes,sipType_QGraphicsRectItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_addRect, doc_QGraphicsScene_addRect);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_addSimpleText, "addSimpleText(self, str, font: QFont = QFont()) -> QGraphicsSimpleTextItem");

extern "C" {static PyObject *meth_QGraphicsScene_addSimpleText(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_addSimpleText(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
        const  ::QFont& a1def = QFont();
        const  ::QFont* a1 = &a1def;
         ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_font,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1|J9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QString,&a0, &a0State, sipType_QFont, &a1))
        {
             ::QGraphicsSimpleTextItem*sipRes;

            sipRes = sipCpp->addSimpleText(*a0,*a1);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipConvertFromType(sipRes,sipType_QGraphicsSimpleTextItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_addSimpleText, doc_QGraphicsScene_addSimpleText);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_addText, "addText(self, str, font: QFont = QFont()) -> QGraphicsTextItem");

extern "C" {static PyObject *meth_QGraphicsScene_addText(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_addText(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
        const  ::QFont& a1def = QFont();
        const  ::QFont* a1 = &a1def;
         ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_font,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1|J9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QString,&a0, &a0State, sipType_QFont, &a1))
        {
             ::QGraphicsTextItem*sipRes;

            sipRes = sipCpp->addText(*a0,*a1);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipConvertFromType(sipRes,sipType_QGraphicsTextItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_addText, doc_QGraphicsScene_addText);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_removeItem, "removeItem(self, QGraphicsItem)");

extern "C" {static PyObject *meth_QGraphicsScene_removeItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_removeItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ<", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            sipCpp->removeItem(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_removeItem, doc_QGraphicsScene_removeItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_focusItem, "focusItem(self) -> QGraphicsItem");

extern "C" {static PyObject *meth_QGraphicsScene_focusItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_focusItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
             ::QGraphicsItem*sipRes;

            sipRes = sipCpp->focusItem();

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_focusItem, doc_QGraphicsScene_focusItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_setFocusItem, "setFocusItem(self, QGraphicsItem, focusReason: Qt.FocusReason = Qt.OtherFocusReason)");

extern "C" {static PyObject *meth_QGraphicsScene_setFocusItem(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setFocusItem(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem* a0;
         ::Qt::FocusReason a1 = Qt::OtherFocusReason;
         ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_focusReason,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ8|E", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsItem, &a0, sipType_Qt_FocusReason, &a1))
        {
            sipCpp->setFocusItem(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setFocusItem, doc_QGraphicsScene_setFocusItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_hasFocus, "hasFocus(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsScene_hasFocus(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_hasFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->hasFocus();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_hasFocus, doc_QGraphicsScene_hasFocus);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_setFocus, "setFocus(self, focusReason: Qt.FocusReason = Qt.OtherFocusReason)");

extern "C" {static PyObject *meth_QGraphicsScene_setFocus(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setFocus(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::Qt::FocusReason a0 = Qt::OtherFocusReason;
         ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            sipName_focusReason,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|E", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_Qt_FocusReason, &a0))
        {
            sipCpp->setFocus(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setFocus, doc_QGraphicsScene_setFocus);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_clearFocus, "clearFocus(self)");

extern "C" {static PyObject *meth_QGraphicsScene_clearFocus(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_clearFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            sipCpp->clearFocus();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_clearFocus, doc_QGraphicsScene_clearFocus);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_mouseGrabberItem, "mouseGrabberItem(self) -> QGraphicsItem");

extern "C" {static PyObject *meth_QGraphicsScene_mouseGrabberItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_mouseGrabberItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
             ::QGraphicsItem*sipRes;

            sipRes = sipCpp->mouseGrabberItem();

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_mouseGrabberItem, doc_QGraphicsScene_mouseGrabberItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_backgroundBrush, "backgroundBrush(self) -> QBrush");

extern "C" {static PyObject *meth_QGraphicsScene_backgroundBrush(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_backgroundBrush(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
             ::QBrush*sipRes;

            sipRes = new  ::QBrush(sipCpp->backgroundBrush());

            return sipConvertFromNewType(sipRes,sipType_QBrush,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_backgroundBrush, doc_QGraphicsScene_backgroundBrush);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_setBackgroundBrush, "setBackgroundBrush(self, Union[QBrush, QColor, Qt.GlobalColor, QGradient])");

extern "C" {static PyObject *meth_QGraphicsScene_setBackgroundBrush(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setBackgroundBrush(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QBrush* a0;
        int a0State = 0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QBrush, &a0, &a0State))
        {
            sipCpp->setBackgroundBrush(*a0);
            sipReleaseType(const_cast< ::QBrush *>(a0),sipType_QBrush,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setBackgroundBrush, doc_QGraphicsScene_setBackgroundBrush);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_foregroundBrush, "foregroundBrush(self) -> QBrush");

extern "C" {static PyObject *meth_QGraphicsScene_foregroundBrush(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_foregroundBrush(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
             ::QBrush*sipRes;

            sipRes = new  ::QBrush(sipCpp->foregroundBrush());

            return sipConvertFromNewType(sipRes,sipType_QBrush,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_foregroundBrush, doc_QGraphicsScene_foregroundBrush);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_setForegroundBrush, "setForegroundBrush(self, Union[QBrush, QColor, Qt.GlobalColor, QGradient])");

extern "C" {static PyObject *meth_QGraphicsScene_setForegroundBrush(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setForegroundBrush(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QBrush* a0;
        int a0State = 0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QBrush, &a0, &a0State))
        {
            sipCpp->setForegroundBrush(*a0);
            sipReleaseType(const_cast< ::QBrush *>(a0),sipType_QBrush,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setForegroundBrush, doc_QGraphicsScene_setForegroundBrush);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_inputMethodQuery, "inputMethodQuery(self, Qt.InputMethodQuery) -> Any");

extern "C" {static PyObject *meth_QGraphicsScene_inputMethodQuery(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_inputMethodQuery(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::Qt::InputMethodQuery a0;
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_Qt_InputMethodQuery, &a0))
        {
             ::QVariant*sipRes;

            sipRes = new  ::QVariant((sipSelfWasArg ? sipCpp-> ::QGraphicsScene::inputMethodQuery(a0) : sipCpp->inputMethodQuery(a0)));

            return sipConvertFromNewType(sipRes,sipType_QVariant,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_inputMethodQuery, doc_QGraphicsScene_inputMethodQuery);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_views, "views(self) -> List[QGraphicsView]");

extern "C" {static PyObject *meth_QGraphicsScene_views(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_views(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            QList< ::QGraphicsView*>*sipRes;

            sipRes = new QList< ::QGraphicsView*>(sipCpp->views());

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsView,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_views, doc_QGraphicsScene_views);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_advance, "advance(self)");

extern "C" {static PyObject *meth_QGraphicsScene_advance(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_advance(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            sipCpp->advance();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_advance, doc_QGraphicsScene_advance);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_update, "update(self, rect: QRectF = QRectF())\n"
"update(self, float, float, float, float)");

extern "C" {static PyObject *meth_QGraphicsScene_update(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_update(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QRectF& a0def = QRectF();
        const  ::QRectF* a0 = &a0def;
         ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            sipName_rect,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|J9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QRectF, &a0))
        {
            sipCpp->update(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
         ::QGraphicsScene *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, "Bdddd", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->update(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_update, doc_QGraphicsScene_update);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_invalidate, "invalidate(self, rect: QRectF = QRectF(), layers: Union[QGraphicsScene.SceneLayers, QGraphicsScene.SceneLayer] = QGraphicsScene.AllLayers)\n"
"invalidate(self, float, float, float, float, layers: Union[QGraphicsScene.SceneLayers, QGraphicsScene.SceneLayer] = QGraphicsScene.AllLayers)");

extern "C" {static PyObject *meth_QGraphicsScene_invalidate(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_invalidate(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QRectF& a0def = QRectF();
        const  ::QRectF* a0 = &a0def;
         ::QGraphicsScene::SceneLayers a1def = QGraphicsScene::AllLayers;
         ::QGraphicsScene::SceneLayers* a1 = &a1def;
        int a1State = 0;
         ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            sipName_rect,
            sipName_layers,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|J9J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QRectF, &a0, sipType_QGraphicsScene_SceneLayers, &a1, &a1State))
        {
            sipCpp->invalidate(*a0,*a1);
            sipReleaseType(a1,sipType_QGraphicsScene_SceneLayers,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
         ::QGraphicsScene::SceneLayers a4def = QGraphicsScene::AllLayers;
         ::QGraphicsScene::SceneLayers* a4 = &a4def;
        int a4State = 0;
         ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_layers,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bdddd|J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0, &a1, &a2, &a3, sipType_QGraphicsScene_SceneLayers, &a4, &a4State))
        {
            sipCpp->invalidate(a0,a1,a2,a3,*a4);
            sipReleaseType(a4,sipType_QGraphicsScene_SceneLayers,a4State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_invalidate, doc_QGraphicsScene_invalidate);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_clear, "clear(self)");

extern "C" {static PyObject *meth_QGraphicsScene_clear(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_clear(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            sipCpp->clear();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_clear, doc_QGraphicsScene_clear);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_event, "event(self, QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsScene_event(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_event(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsScene::event(a0) : sipCpp->event(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_event, doc_QGraphicsScene_event);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_contextMenuEvent, "contextMenuEvent(self, QGraphicsSceneContextMenuEvent)");

extern "C" {static PyObject *meth_QGraphicsScene_contextMenuEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_contextMenuEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneContextMenuEvent* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneContextMenuEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsScene::contextMenuEvent(a0) : sipCpp->contextMenuEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_contextMenuEvent, doc_QGraphicsScene_contextMenuEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_dragEnterEvent, "dragEnterEvent(self, QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsScene_dragEnterEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_dragEnterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneDragDropEvent* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsScene::dragEnterEvent(a0) : sipCpp->dragEnterEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_dragEnterEvent, doc_QGraphicsScene_dragEnterEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_dragMoveEvent, "dragMoveEvent(self, QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsScene_dragMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_dragMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneDragDropEvent* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsScene::dragMoveEvent(a0) : sipCpp->dragMoveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_dragMoveEvent, doc_QGraphicsScene_dragMoveEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_dragLeaveEvent, "dragLeaveEvent(self, QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsScene_dragLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_dragLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneDragDropEvent* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsScene::dragLeaveEvent(a0) : sipCpp->dragLeaveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_dragLeaveEvent, doc_QGraphicsScene_dragLeaveEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_dropEvent, "dropEvent(self, QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsScene_dropEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_dropEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneDragDropEvent* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsScene::dropEvent(a0) : sipCpp->dropEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_dropEvent, doc_QGraphicsScene_dropEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_focusInEvent, "focusInEvent(self, QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsScene_focusInEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_focusInEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QFocusEvent* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QFocusEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsScene::focusInEvent(a0) : sipCpp->focusInEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_focusInEvent, doc_QGraphicsScene_focusInEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_focusOutEvent, "focusOutEvent(self, QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsScene_focusOutEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_focusOutEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QFocusEvent* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QFocusEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsScene::focusOutEvent(a0) : sipCpp->focusOutEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_focusOutEvent, doc_QGraphicsScene_focusOutEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_helpEvent, "helpEvent(self, QGraphicsSceneHelpEvent)");

extern "C" {static PyObject *meth_QGraphicsScene_helpEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_helpEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneHelpEvent* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneHelpEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsScene::helpEvent(a0) : sipCpp->helpEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_helpEvent, doc_QGraphicsScene_helpEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_keyPressEvent, "keyPressEvent(self, QKeyEvent)");

extern "C" {static PyObject *meth_QGraphicsScene_keyPressEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_keyPressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QKeyEvent* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QKeyEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsScene::keyPressEvent(a0) : sipCpp->keyPressEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_keyPressEvent, doc_QGraphicsScene_keyPressEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_keyReleaseEvent, "keyReleaseEvent(self, QKeyEvent)");

extern "C" {static PyObject *meth_QGraphicsScene_keyReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_keyReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QKeyEvent* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QKeyEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsScene::keyReleaseEvent(a0) : sipCpp->keyReleaseEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_keyReleaseEvent, doc_QGraphicsScene_keyReleaseEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_mousePressEvent, "mousePressEvent(self, QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsScene_mousePressEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneMouseEvent* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsScene::mousePressEvent(a0) : sipCpp->mousePressEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_mousePressEvent, doc_QGraphicsScene_mousePressEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_mouseMoveEvent, "mouseMoveEvent(self, QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsScene_mouseMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneMouseEvent* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsScene::mouseMoveEvent(a0) : sipCpp->mouseMoveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_mouseMoveEvent, doc_QGraphicsScene_mouseMoveEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_mouseReleaseEvent, "mouseReleaseEvent(self, QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsScene_mouseReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneMouseEvent* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsScene::mouseReleaseEvent(a0) : sipCpp->mouseReleaseEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_mouseReleaseEvent, doc_QGraphicsScene_mouseReleaseEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_mouseDoubleClickEvent, "mouseDoubleClickEvent(self, QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsScene_mouseDoubleClickEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_mouseDoubleClickEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneMouseEvent* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsScene::mouseDoubleClickEvent(a0) : sipCpp->mouseDoubleClickEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_mouseDoubleClickEvent, doc_QGraphicsScene_mouseDoubleClickEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_wheelEvent, "wheelEvent(self, QGraphicsSceneWheelEvent)");

extern "C" {static PyObject *meth_QGraphicsScene_wheelEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_wheelEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneWheelEvent* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneWheelEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsScene::wheelEvent(a0) : sipCpp->wheelEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_wheelEvent, doc_QGraphicsScene_wheelEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_inputMethodEvent, "inputMethodEvent(self, QInputMethodEvent)");

extern "C" {static PyObject *meth_QGraphicsScene_inputMethodEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_inputMethodEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QInputMethodEvent* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QInputMethodEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsScene::inputMethodEvent(a0) : sipCpp->inputMethodEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_inputMethodEvent, doc_QGraphicsScene_inputMethodEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_drawBackground, "drawBackground(self, QPainter, QRectF)");

extern "C" {static PyObject *meth_QGraphicsScene_drawBackground(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_drawBackground(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QPainter* a0;
        const  ::QRectF* a1;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8J9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPainter, &a0, sipType_QRectF, &a1))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsScene::drawBackground(a0,*a1) : sipCpp->drawBackground(a0,*a1));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_drawBackground, doc_QGraphicsScene_drawBackground);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_drawForeground, "drawForeground(self, QPainter, QRectF)");

extern "C" {static PyObject *meth_QGraphicsScene_drawForeground(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_drawForeground(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QPainter* a0;
        const  ::QRectF* a1;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8J9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPainter, &a0, sipType_QRectF, &a1))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsScene::drawForeground(a0,*a1) : sipCpp->drawForeground(a0,*a1));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_drawForeground, doc_QGraphicsScene_drawForeground);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_bspTreeDepth, "bspTreeDepth(self) -> int");

extern "C" {static PyObject *meth_QGraphicsScene_bspTreeDepth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_bspTreeDepth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->bspTreeDepth();

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_bspTreeDepth, doc_QGraphicsScene_bspTreeDepth);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_setBspTreeDepth, "setBspTreeDepth(self, int)");

extern "C" {static PyObject *meth_QGraphicsScene_setBspTreeDepth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setBspTreeDepth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0))
        {
            sipCpp->setBspTreeDepth(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setBspTreeDepth, doc_QGraphicsScene_setBspTreeDepth);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_selectionArea, "selectionArea(self) -> QPainterPath");

extern "C" {static PyObject *meth_QGraphicsScene_selectionArea(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_selectionArea(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
             ::QPainterPath*sipRes;

            sipRes = new  ::QPainterPath(sipCpp->selectionArea());

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_selectionArea, doc_QGraphicsScene_selectionArea);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_addWidget, "addWidget(self, QWidget, flags: Union[Qt.WindowFlags, Qt.WindowType] = Qt.WindowFlags()) -> QGraphicsProxyWidget");

extern "C" {static PyObject *meth_QGraphicsScene_addWidget(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_addWidget(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QWidget* a0;
         ::Qt::WindowFlags a1def = Qt::WindowFlags();
         ::Qt::WindowFlags* a1 = &a1def;
        int a1State = 0;
         ::QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_flags,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ:|J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QWidget, &a0, sipType_Qt_WindowFlags, &a1, &a1State))
        {
             ::QGraphicsProxyWidget*sipRes;

            sipRes = sipCpp->addWidget(a0,*a1);
            sipReleaseType(a1,sipType_Qt_WindowFlags,a1State);

            return sipConvertFromType(sipRes,sipType_QGraphicsProxyWidget,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_addWidget, doc_QGraphicsScene_addWidget);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_style, "style(self) -> QStyle");

extern "C" {static PyObject *meth_QGraphicsScene_style(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_style(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
             ::QStyle*sipRes;

            sipRes = sipCpp->style();

            return sipConvertFromType(sipRes,sipType_QStyle,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_style, doc_QGraphicsScene_style);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_setStyle, "setStyle(self, QStyle)");

extern "C" {static PyObject *meth_QGraphicsScene_setStyle(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setStyle(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QStyle* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QStyle, &a0))
        {
            sipCpp->setStyle(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setStyle, doc_QGraphicsScene_setStyle);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_font, "font(self) -> QFont");

extern "C" {static PyObject *meth_QGraphicsScene_font(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_font(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
             ::QFont*sipRes;

            sipRes = new  ::QFont(sipCpp->font());

            return sipConvertFromNewType(sipRes,sipType_QFont,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_font, doc_QGraphicsScene_font);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_setFont, "setFont(self, QFont)");

extern "C" {static PyObject *meth_QGraphicsScene_setFont(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setFont(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QFont* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QFont, &a0))
        {
            sipCpp->setFont(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setFont, doc_QGraphicsScene_setFont);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_palette, "palette(self) -> QPalette");

extern "C" {static PyObject *meth_QGraphicsScene_palette(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_palette(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
             ::QPalette*sipRes;

            sipRes = new  ::QPalette(sipCpp->palette());

            return sipConvertFromNewType(sipRes,sipType_QPalette,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_palette, doc_QGraphicsScene_palette);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_setPalette, "setPalette(self, QPalette)");

extern "C" {static PyObject *meth_QGraphicsScene_setPalette(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setPalette(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QPalette* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPalette, &a0))
        {
            sipCpp->setPalette(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setPalette, doc_QGraphicsScene_setPalette);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_activeWindow, "activeWindow(self) -> QGraphicsWidget");

extern "C" {static PyObject *meth_QGraphicsScene_activeWindow(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_activeWindow(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
             ::QGraphicsWidget*sipRes;

            sipRes = sipCpp->activeWindow();

            return sipConvertFromType(sipRes,sipType_QGraphicsWidget,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_activeWindow, doc_QGraphicsScene_activeWindow);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_setActiveWindow, "setActiveWindow(self, QGraphicsWidget)");

extern "C" {static PyObject *meth_QGraphicsScene_setActiveWindow(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setActiveWindow(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsWidget* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsWidget, &a0))
        {
            sipCpp->setActiveWindow(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setActiveWindow, doc_QGraphicsScene_setActiveWindow);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_eventFilter, "eventFilter(self, QObject, QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsScene_eventFilter(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_eventFilter(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QObject* a0;
         ::QEvent* a1;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8J8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QObject, &a0, sipType_QEvent, &a1))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsScene::eventFilter(a0,a1) : sipCpp->eventFilter(a0,a1));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_eventFilter, doc_QGraphicsScene_eventFilter);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_focusNextPrevChild, "focusNextPrevChild(self, bool) -> bool");

extern "C" {static PyObject *meth_QGraphicsScene_focusNextPrevChild(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_focusNextPrevChild(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pb", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->focusNextPrevChild(a0);

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_focusNextPrevChild, doc_QGraphicsScene_focusNextPrevChild);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_setStickyFocus, "setStickyFocus(self, bool)");

extern "C" {static PyObject *meth_QGraphicsScene_setStickyFocus(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setStickyFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0))
        {
            sipCpp->setStickyFocus(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setStickyFocus, doc_QGraphicsScene_setStickyFocus);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_stickyFocus, "stickyFocus(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsScene_stickyFocus(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_stickyFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->stickyFocus();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_stickyFocus, doc_QGraphicsScene_stickyFocus);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_itemAt, "itemAt(self, Union[QPointF, QPoint], QTransform) -> QGraphicsItem\n"
"itemAt(self, float, float, QTransform) -> QGraphicsItem");

extern "C" {static PyObject *meth_QGraphicsScene_itemAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_itemAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QPointF* a0;
        int a0State = 0;
        const  ::QTransform* a1;
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1J9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPointF, &a0, &a0State, sipType_QTransform, &a1))
        {
             ::QGraphicsItem*sipRes;

            sipRes = sipCpp->itemAt(*a0,*a1);
            sipReleaseType(const_cast< ::QPointF *>(a0),sipType_QPointF,a0State);

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,SIP_NULLPTR);
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
        const  ::QTransform* a2;
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BddJ9", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0, &a1, sipType_QTransform, &a2))
        {
             ::QGraphicsItem*sipRes;

            sipRes = sipCpp->itemAt(a0,a1,*a2);

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_itemAt, doc_QGraphicsScene_itemAt);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_isActive, "isActive(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsScene_isActive(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_isActive(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isActive();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_isActive, doc_QGraphicsScene_isActive);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_activePanel, "activePanel(self) -> QGraphicsItem");

extern "C" {static PyObject *meth_QGraphicsScene_activePanel(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_activePanel(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
             ::QGraphicsItem*sipRes;

            sipRes = sipCpp->activePanel();

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_activePanel, doc_QGraphicsScene_activePanel);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_setActivePanel, "setActivePanel(self, QGraphicsItem)");

extern "C" {static PyObject *meth_QGraphicsScene_setActivePanel(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setActivePanel(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem* a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            sipCpp->setActivePanel(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setActivePanel, doc_QGraphicsScene_setActivePanel);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_sendEvent, "sendEvent(self, QGraphicsItem, QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsScene_sendEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_sendEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem* a0;
         ::QEvent* a1;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QEvent, &a1))
        {
            bool sipRes;

            sipRes = sipCpp->sendEvent(a0,a1);

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_sendEvent, doc_QGraphicsScene_sendEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_minimumRenderSize, "minimumRenderSize(self) -> float");

extern "C" {static PyObject *meth_QGraphicsScene_minimumRenderSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_minimumRenderSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->minimumRenderSize();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_minimumRenderSize, doc_QGraphicsScene_minimumRenderSize);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_setMinimumRenderSize, "setMinimumRenderSize(self, float)");

extern "C" {static PyObject *meth_QGraphicsScene_setMinimumRenderSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setMinimumRenderSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0))
        {
            sipCpp->setMinimumRenderSize(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setMinimumRenderSize, doc_QGraphicsScene_setMinimumRenderSize);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_focusOnTouch, "focusOnTouch(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsScene_focusOnTouch(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_focusOnTouch(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->focusOnTouch();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_focusOnTouch, doc_QGraphicsScene_focusOnTouch);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsScene_setFocusOnTouch, "setFocusOnTouch(self, bool)");

extern "C" {static PyObject *meth_QGraphicsScene_setFocusOnTouch(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setFocusOnTouch(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0))
        {
            sipCpp->setFocusOnTouch(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setFocusOnTouch, doc_QGraphicsScene_setFocusOnTouch);

    return SIP_NULLPTR;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QGraphicsScene(void *, const sipTypeDef *);}
static void *cast_QGraphicsScene(void *sipCppV, const sipTypeDef *targetType)
{
     ::QGraphicsScene *sipCpp = reinterpret_cast< ::QGraphicsScene *>(sipCppV);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsScene(void *, int);}
static void release_QGraphicsScene(void *sipCppV, int)
{
     ::QGraphicsScene *sipCpp = reinterpret_cast< ::QGraphicsScene *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void *array_QGraphicsScene(Py_ssize_t);}
static void *array_QGraphicsScene(Py_ssize_t sipNrElem)
{
    return new  ::QGraphicsScene[sipNrElem];
}


extern "C" {static void dealloc_QGraphicsScene(sipSimpleWrapper *);}
static void dealloc_QGraphicsScene(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQGraphicsScene *>(sipGetAddress(sipSelf))->sipPySelf = SIP_NULLPTR;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QGraphicsScene(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QGraphicsScene(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QGraphicsScene(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsScene *sipCpp = SIP_NULLPTR;

    {
         ::QObject* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QObject, &a0, sipOwner))
        {
            sipCpp = new sipQGraphicsScene(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        const  ::QRectF* a0;
         ::QObject* a1 = 0;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "J9|JH", sipType_QRectF, &a0, sipType_QObject, &a1, sipOwner))
        {
            sipCpp = new sipQGraphicsScene(*a0,a1);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
         ::QObject* a4 = 0;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "dddd|JH", &a0, &a1, &a2, &a3, sipType_QObject, &a4, sipOwner))
        {
            sipCpp = new sipQGraphicsScene(a0,a1,a2,a3,a4);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QGraphicsScene[] = {{32, 0, 1}};


static PyMethodDef methods_QGraphicsScene[] = {
    {sipName_activePanel, meth_QGraphicsScene_activePanel, METH_VARARGS, doc_QGraphicsScene_activePanel},
    {sipName_activeWindow, meth_QGraphicsScene_activeWindow, METH_VARARGS, doc_QGraphicsScene_activeWindow},
    {sipName_addEllipse, SIP_MLMETH_CAST(meth_QGraphicsScene_addEllipse), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsScene_addEllipse},
    {sipName_addItem, meth_QGraphicsScene_addItem, METH_VARARGS, doc_QGraphicsScene_addItem},
    {sipName_addLine, SIP_MLMETH_CAST(meth_QGraphicsScene_addLine), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsScene_addLine},
    {sipName_addPath, SIP_MLMETH_CAST(meth_QGraphicsScene_addPath), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsScene_addPath},
    {sipName_addPixmap, meth_QGraphicsScene_addPixmap, METH_VARARGS, doc_QGraphicsScene_addPixmap},
    {sipName_addPolygon, SIP_MLMETH_CAST(meth_QGraphicsScene_addPolygon), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsScene_addPolygon},
    {sipName_addRect, SIP_MLMETH_CAST(meth_QGraphicsScene_addRect), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsScene_addRect},
    {sipName_addSimpleText, SIP_MLMETH_CAST(meth_QGraphicsScene_addSimpleText), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsScene_addSimpleText},
    {sipName_addText, SIP_MLMETH_CAST(meth_QGraphicsScene_addText), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsScene_addText},
    {sipName_addWidget, SIP_MLMETH_CAST(meth_QGraphicsScene_addWidget), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsScene_addWidget},
    {sipName_advance, meth_QGraphicsScene_advance, METH_VARARGS, doc_QGraphicsScene_advance},
    {sipName_backgroundBrush, meth_QGraphicsScene_backgroundBrush, METH_VARARGS, doc_QGraphicsScene_backgroundBrush},
    {sipName_bspTreeDepth, meth_QGraphicsScene_bspTreeDepth, METH_VARARGS, doc_QGraphicsScene_bspTreeDepth},
    {sipName_clear, meth_QGraphicsScene_clear, METH_VARARGS, doc_QGraphicsScene_clear},
    {sipName_clearFocus, meth_QGraphicsScene_clearFocus, METH_VARARGS, doc_QGraphicsScene_clearFocus},
    {sipName_clearSelection, meth_QGraphicsScene_clearSelection, METH_VARARGS, doc_QGraphicsScene_clearSelection},
    {sipName_collidingItems, SIP_MLMETH_CAST(meth_QGraphicsScene_collidingItems), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsScene_collidingItems},
    {sipName_contextMenuEvent, meth_QGraphicsScene_contextMenuEvent, METH_VARARGS, doc_QGraphicsScene_contextMenuEvent},
    {sipName_createItemGroup, meth_QGraphicsScene_createItemGroup, METH_VARARGS, doc_QGraphicsScene_createItemGroup},
    {sipName_destroyItemGroup, meth_QGraphicsScene_destroyItemGroup, METH_VARARGS, doc_QGraphicsScene_destroyItemGroup},
    {sipName_dragEnterEvent, meth_QGraphicsScene_dragEnterEvent, METH_VARARGS, doc_QGraphicsScene_dragEnterEvent},
    {sipName_dragLeaveEvent, meth_QGraphicsScene_dragLeaveEvent, METH_VARARGS, doc_QGraphicsScene_dragLeaveEvent},
    {sipName_dragMoveEvent, meth_QGraphicsScene_dragMoveEvent, METH_VARARGS, doc_QGraphicsScene_dragMoveEvent},
    {sipName_drawBackground, meth_QGraphicsScene_drawBackground, METH_VARARGS, doc_QGraphicsScene_drawBackground},
    {sipName_drawForeground, meth_QGraphicsScene_drawForeground, METH_VARARGS, doc_QGraphicsScene_drawForeground},
    {sipName_dropEvent, meth_QGraphicsScene_dropEvent, METH_VARARGS, doc_QGraphicsScene_dropEvent},
    {sipName_event, meth_QGraphicsScene_event, METH_VARARGS, doc_QGraphicsScene_event},
    {sipName_eventFilter, meth_QGraphicsScene_eventFilter, METH_VARARGS, doc_QGraphicsScene_eventFilter},
    {sipName_focusInEvent, meth_QGraphicsScene_focusInEvent, METH_VARARGS, doc_QGraphicsScene_focusInEvent},
    {sipName_focusItem, meth_QGraphicsScene_focusItem, METH_VARARGS, doc_QGraphicsScene_focusItem},
    {sipName_focusNextPrevChild, meth_QGraphicsScene_focusNextPrevChild, METH_VARARGS, doc_QGraphicsScene_focusNextPrevChild},
    {sipName_focusOnTouch, meth_QGraphicsScene_focusOnTouch, METH_VARARGS, doc_QGraphicsScene_focusOnTouch},
    {sipName_focusOutEvent, meth_QGraphicsScene_focusOutEvent, METH_VARARGS, doc_QGraphicsScene_focusOutEvent},
    {sipName_font, meth_QGraphicsScene_font, METH_VARARGS, doc_QGraphicsScene_font},
    {sipName_foregroundBrush, meth_QGraphicsScene_foregroundBrush, METH_VARARGS, doc_QGraphicsScene_foregroundBrush},
    {sipName_hasFocus, meth_QGraphicsScene_hasFocus, METH_VARARGS, doc_QGraphicsScene_hasFocus},
    {sipName_height, meth_QGraphicsScene_height, METH_VARARGS, doc_QGraphicsScene_height},
    {sipName_helpEvent, meth_QGraphicsScene_helpEvent, METH_VARARGS, doc_QGraphicsScene_helpEvent},
    {sipName_inputMethodEvent, meth_QGraphicsScene_inputMethodEvent, METH_VARARGS, doc_QGraphicsScene_inputMethodEvent},
    {sipName_inputMethodQuery, meth_QGraphicsScene_inputMethodQuery, METH_VARARGS, doc_QGraphicsScene_inputMethodQuery},
    {sipName_invalidate, SIP_MLMETH_CAST(meth_QGraphicsScene_invalidate), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsScene_invalidate},
    {sipName_isActive, meth_QGraphicsScene_isActive, METH_VARARGS, doc_QGraphicsScene_isActive},
    {sipName_itemAt, meth_QGraphicsScene_itemAt, METH_VARARGS, doc_QGraphicsScene_itemAt},
    {sipName_itemIndexMethod, meth_QGraphicsScene_itemIndexMethod, METH_VARARGS, doc_QGraphicsScene_itemIndexMethod},
    {sipName_items, SIP_MLMETH_CAST(meth_QGraphicsScene_items), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsScene_items},
    {sipName_itemsBoundingRect, meth_QGraphicsScene_itemsBoundingRect, METH_VARARGS, doc_QGraphicsScene_itemsBoundingRect},
    {sipName_keyPressEvent, meth_QGraphicsScene_keyPressEvent, METH_VARARGS, doc_QGraphicsScene_keyPressEvent},
    {sipName_keyReleaseEvent, meth_QGraphicsScene_keyReleaseEvent, METH_VARARGS, doc_QGraphicsScene_keyReleaseEvent},
    {sipName_minimumRenderSize, meth_QGraphicsScene_minimumRenderSize, METH_VARARGS, doc_QGraphicsScene_minimumRenderSize},
    {sipName_mouseDoubleClickEvent, meth_QGraphicsScene_mouseDoubleClickEvent, METH_VARARGS, doc_QGraphicsScene_mouseDoubleClickEvent},
    {sipName_mouseGrabberItem, meth_QGraphicsScene_mouseGrabberItem, METH_VARARGS, doc_QGraphicsScene_mouseGrabberItem},
    {sipName_mouseMoveEvent, meth_QGraphicsScene_mouseMoveEvent, METH_VARARGS, doc_QGraphicsScene_mouseMoveEvent},
    {sipName_mousePressEvent, meth_QGraphicsScene_mousePressEvent, METH_VARARGS, doc_QGraphicsScene_mousePressEvent},
    {sipName_mouseReleaseEvent, meth_QGraphicsScene_mouseReleaseEvent, METH_VARARGS, doc_QGraphicsScene_mouseReleaseEvent},
    {sipName_palette, meth_QGraphicsScene_palette, METH_VARARGS, doc_QGraphicsScene_palette},
    {sipName_removeItem, meth_QGraphicsScene_removeItem, METH_VARARGS, doc_QGraphicsScene_removeItem},
    {sipName_render, SIP_MLMETH_CAST(meth_QGraphicsScene_render), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsScene_render},
    {sipName_sceneRect, meth_QGraphicsScene_sceneRect, METH_VARARGS, doc_QGraphicsScene_sceneRect},
    {sipName_selectedItems, meth_QGraphicsScene_selectedItems, METH_VARARGS, doc_QGraphicsScene_selectedItems},
    {sipName_selectionArea, meth_QGraphicsScene_selectionArea, METH_VARARGS, doc_QGraphicsScene_selectionArea},
    {sipName_sendEvent, meth_QGraphicsScene_sendEvent, METH_VARARGS, doc_QGraphicsScene_sendEvent},
    {sipName_setActivePanel, meth_QGraphicsScene_setActivePanel, METH_VARARGS, doc_QGraphicsScene_setActivePanel},
    {sipName_setActiveWindow, meth_QGraphicsScene_setActiveWindow, METH_VARARGS, doc_QGraphicsScene_setActiveWindow},
    {sipName_setBackgroundBrush, meth_QGraphicsScene_setBackgroundBrush, METH_VARARGS, doc_QGraphicsScene_setBackgroundBrush},
    {sipName_setBspTreeDepth, meth_QGraphicsScene_setBspTreeDepth, METH_VARARGS, doc_QGraphicsScene_setBspTreeDepth},
    {sipName_setFocus, SIP_MLMETH_CAST(meth_QGraphicsScene_setFocus), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsScene_setFocus},
    {sipName_setFocusItem, SIP_MLMETH_CAST(meth_QGraphicsScene_setFocusItem), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsScene_setFocusItem},
    {sipName_setFocusOnTouch, meth_QGraphicsScene_setFocusOnTouch, METH_VARARGS, doc_QGraphicsScene_setFocusOnTouch},
    {sipName_setFont, meth_QGraphicsScene_setFont, METH_VARARGS, doc_QGraphicsScene_setFont},
    {sipName_setForegroundBrush, meth_QGraphicsScene_setForegroundBrush, METH_VARARGS, doc_QGraphicsScene_setForegroundBrush},
    {sipName_setItemIndexMethod, meth_QGraphicsScene_setItemIndexMethod, METH_VARARGS, doc_QGraphicsScene_setItemIndexMethod},
    {sipName_setMinimumRenderSize, meth_QGraphicsScene_setMinimumRenderSize, METH_VARARGS, doc_QGraphicsScene_setMinimumRenderSize},
    {sipName_setPalette, meth_QGraphicsScene_setPalette, METH_VARARGS, doc_QGraphicsScene_setPalette},
    {sipName_setSceneRect, meth_QGraphicsScene_setSceneRect, METH_VARARGS, doc_QGraphicsScene_setSceneRect},
    {sipName_setSelectionArea, SIP_MLMETH_CAST(meth_QGraphicsScene_setSelectionArea), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsScene_setSelectionArea},
    {sipName_setStickyFocus, meth_QGraphicsScene_setStickyFocus, METH_VARARGS, doc_QGraphicsScene_setStickyFocus},
    {sipName_setStyle, meth_QGraphicsScene_setStyle, METH_VARARGS, doc_QGraphicsScene_setStyle},
    {sipName_stickyFocus, meth_QGraphicsScene_stickyFocus, METH_VARARGS, doc_QGraphicsScene_stickyFocus},
    {sipName_style, meth_QGraphicsScene_style, METH_VARARGS, doc_QGraphicsScene_style},
    {sipName_update, SIP_MLMETH_CAST(meth_QGraphicsScene_update), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsScene_update},
    {sipName_views, meth_QGraphicsScene_views, METH_VARARGS, doc_QGraphicsScene_views},
    {sipName_wheelEvent, meth_QGraphicsScene_wheelEvent, METH_VARARGS, doc_QGraphicsScene_wheelEvent},
    {sipName_width, meth_QGraphicsScene_width, METH_VARARGS, doc_QGraphicsScene_width}
};

static sipEnumMemberDef enummembers_QGraphicsScene[] = {
    {sipName_AllLayers, static_cast<int>( ::QGraphicsScene::AllLayers), 146},
    {sipName_BackgroundLayer, static_cast<int>( ::QGraphicsScene::BackgroundLayer), 146},
    {sipName_BspTreeIndex, static_cast<int>( ::QGraphicsScene::BspTreeIndex), 145},
    {sipName_ForegroundLayer, static_cast<int>( ::QGraphicsScene::ForegroundLayer), 146},
    {sipName_ItemLayer, static_cast<int>( ::QGraphicsScene::ItemLayer), 146},
    {sipName_NoIndex, static_cast<int>( ::QGraphicsScene::NoIndex), 145},
};

PyDoc_STRVAR(doc_QGraphicsScene, "\1QGraphicsScene(parent: QObject = None)\n"
"QGraphicsScene(QRectF, parent: QObject = None)\n"
"QGraphicsScene(float, float, float, float, parent: QObject = None)");


/* Define this type's signals. */
static const pyqt5QtSignal signals_QGraphicsScene[] = {
    {"focusItemChanged(QGraphicsItem*,QGraphicsItem*,Qt::FocusReason)", "\1focusItemChanged(self, QGraphicsItem, QGraphicsItem, Qt.FocusReason)", SIP_NULLPTR, SIP_NULLPTR},
    {"selectionChanged()", "\1selectionChanged(self)", SIP_NULLPTR, SIP_NULLPTR},
    {"sceneRectChanged(QRectF)", "\1sceneRectChanged(self, QRectF)", SIP_NULLPTR, SIP_NULLPTR},
    {"changed(QList<QRectF>)", "\1changed(self, Iterable[QRectF])", SIP_NULLPTR, SIP_NULLPTR},
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
};


static pyqt5ClassPluginDef plugin_QGraphicsScene = {
    & ::QGraphicsScene::staticMetaObject,
    0,
    signals_QGraphicsScene,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtWidgets_QGraphicsScene = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsScene,
        SIP_NULLPTR,
        &plugin_QGraphicsScene
    },
    {
        sipNameNr_QGraphicsScene,
        {0, 0, 1},
        85, methods_QGraphicsScene,
        6, enummembers_QGraphicsScene,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QGraphicsScene,
    -1,
    -1,
    supers_QGraphicsScene,
    SIP_NULLPTR,
    init_type_QGraphicsScene,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_QGraphicsScene,
    SIP_NULLPTR,
    array_QGraphicsScene,
    SIP_NULLPTR,
    release_QGraphicsScene,
    cast_QGraphicsScene,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
