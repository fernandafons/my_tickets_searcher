/*
 * Interface wrapper code.
 *
 * Generated by SIP 5.3.0
 *
 * Copyright (c) 2019 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicswidget.sip"
#include <qgraphicswidget.h>
#line 29 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"

#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 33 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 36 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 39 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 164 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 42 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 451 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 45 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 224 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 48 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 240 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 51 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 462 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 54 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 375 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 57 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 429 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 60 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 63 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 95 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 66 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 69 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 97 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 72 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qstyleoption.sip"
#include <qstyleoption.h>
#line 75 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 78 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 164 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 81 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 84 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 1012 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qstyleoption.sip"
#include <qstyleoption.h>
#line 87 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 28 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 90 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 93 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qaction.sip"
#include <qaction.h>
#line 96 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtGui/qkeysequence.sip"
#include <qkeysequence.h>
#line 99 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 102 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtGui/qpalette.sip"
#include <qpalette.h>
#line 105 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtGui/qfont.sip"
#include <qfont.h>
#line 108 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qstyle.sip"
#include <qstyle.h>
#line 111 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicslayout.sip"
#include <qgraphicslayout.h>
#line 114 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 117 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 146 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 122 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 125 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 247 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 128 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 235 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 131 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 28 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 134 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 137 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 140 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 143 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 146 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 149 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 152 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 155 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 158 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 161 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 164 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicstransform.sip"
#include <qgraphicstransform.h>
#line 167 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 170 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 607 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 173 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "sip/QtGui/qtransform.sip"
#include <qtransform.h>
#line 176 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtGui/qregion.sip"
#include <qregion.h>
#line 179 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 182 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 185 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 119 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 188 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 88 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 191 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 354 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 194 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 500 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 197 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 199 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 200 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 139 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 203 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 329 "sip/QtGui/qpolygon.sip"
#include <qpolygon.h>
#line 206 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 209 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 212 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 215 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 578 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 218 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 221 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicslayoutitem.sip"
#include <qgraphicslayoutitem.h>
#line 224 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 227 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"


class sipQGraphicsWidget : public  ::QGraphicsWidget
{
public:
    sipQGraphicsWidget( ::QGraphicsItem*, ::Qt::WindowFlags);
    virtual ~sipQGraphicsWidget();

    int qt_metacall(QMetaObject::Call, int, void **) SIP_OVERRIDE;
    void *qt_metacast(const char *) SIP_OVERRIDE;
    const QMetaObject *metaObject() const SIP_OVERRIDE;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void ungrabKeyboardEvent( ::QEvent*) SIP_OVERRIDE;
    void grabKeyboardEvent( ::QEvent*) SIP_OVERRIDE;
    void ungrabMouseEvent( ::QEvent*) SIP_OVERRIDE;
    void grabMouseEvent( ::QEvent*) SIP_OVERRIDE;
    void showEvent( ::QShowEvent*) SIP_OVERRIDE;
    void resizeEvent( ::QGraphicsSceneResizeEvent*) SIP_OVERRIDE;
    void polishEvent() SIP_OVERRIDE;
    void moveEvent( ::QGraphicsSceneMoveEvent*) SIP_OVERRIDE;
    void hideEvent( ::QHideEvent*) SIP_OVERRIDE;
    bool focusNextPrevChild(bool) SIP_OVERRIDE;
    void closeEvent( ::QCloseEvent*) SIP_OVERRIDE;
    void changeEvent( ::QEvent*) SIP_OVERRIDE;
     ::Qt::WindowFrameSection windowFrameSectionAt(const  ::QPointF&) const SIP_OVERRIDE;
    bool windowFrameEvent( ::QEvent*) SIP_OVERRIDE;
    void initStyleOption( ::QStyleOption*) const SIP_OVERRIDE;
    void paintWindowFrame( ::QPainter*,const  ::QStyleOptionGraphicsItem*, ::QWidget*) SIP_OVERRIDE;
    void setGeometry(const  ::QRectF&) SIP_OVERRIDE;
    void getContentsMargins( ::qreal*, ::qreal*, ::qreal*, ::qreal*) const SIP_OVERRIDE;
    void updateGeometry() SIP_OVERRIDE;
     ::QSizeF sizeHint( ::Qt::SizeHint,const  ::QSizeF&) const SIP_OVERRIDE;
    void disconnectNotify(const  ::QMetaMethod&) SIP_OVERRIDE;
    void connectNotify(const  ::QMetaMethod&) SIP_OVERRIDE;
    void customEvent( ::QEvent*) SIP_OVERRIDE;
    void childEvent( ::QChildEvent*) SIP_OVERRIDE;
    void timerEvent( ::QTimerEvent*) SIP_OVERRIDE;
    bool eventFilter( ::QObject*, ::QEvent*) SIP_OVERRIDE;
    bool event( ::QEvent*) SIP_OVERRIDE;
    void wheelEvent( ::QGraphicsSceneWheelEvent*) SIP_OVERRIDE;
    bool sceneEventFilter( ::QGraphicsItem*, ::QEvent*) SIP_OVERRIDE;
    bool sceneEvent( ::QEvent*) SIP_OVERRIDE;
    void mouseReleaseEvent( ::QGraphicsSceneMouseEvent*) SIP_OVERRIDE;
    void mousePressEvent( ::QGraphicsSceneMouseEvent*) SIP_OVERRIDE;
    void mouseMoveEvent( ::QGraphicsSceneMouseEvent*) SIP_OVERRIDE;
    void mouseDoubleClickEvent( ::QGraphicsSceneMouseEvent*) SIP_OVERRIDE;
    void keyReleaseEvent( ::QKeyEvent*) SIP_OVERRIDE;
    void keyPressEvent( ::QKeyEvent*) SIP_OVERRIDE;
     ::QVariant itemChange( ::QGraphicsItem::GraphicsItemChange,const  ::QVariant&) SIP_OVERRIDE;
     ::QVariant inputMethodQuery( ::Qt::InputMethodQuery) const SIP_OVERRIDE;
    void inputMethodEvent( ::QInputMethodEvent*) SIP_OVERRIDE;
    void hoverMoveEvent( ::QGraphicsSceneHoverEvent*) SIP_OVERRIDE;
    void hoverLeaveEvent( ::QGraphicsSceneHoverEvent*) SIP_OVERRIDE;
    void hoverEnterEvent( ::QGraphicsSceneHoverEvent*) SIP_OVERRIDE;
    void focusOutEvent( ::QFocusEvent*) SIP_OVERRIDE;
    void focusInEvent( ::QFocusEvent*) SIP_OVERRIDE;
    void dropEvent( ::QGraphicsSceneDragDropEvent*) SIP_OVERRIDE;
    void dragMoveEvent( ::QGraphicsSceneDragDropEvent*) SIP_OVERRIDE;
    void dragLeaveEvent( ::QGraphicsSceneDragDropEvent*) SIP_OVERRIDE;
    void dragEnterEvent( ::QGraphicsSceneDragDropEvent*) SIP_OVERRIDE;
    void contextMenuEvent( ::QGraphicsSceneContextMenuEvent*) SIP_OVERRIDE;
    int type() const SIP_OVERRIDE;
    void paint( ::QPainter*,const  ::QStyleOptionGraphicsItem*, ::QWidget*) SIP_OVERRIDE;
     ::QPainterPath opaqueArea() const SIP_OVERRIDE;
    bool isObscuredBy(const  ::QGraphicsItem*) const SIP_OVERRIDE;
    bool collidesWithPath(const  ::QPainterPath&, ::Qt::ItemSelectionMode) const SIP_OVERRIDE;
    bool collidesWithItem(const  ::QGraphicsItem*, ::Qt::ItemSelectionMode) const SIP_OVERRIDE;
    bool contains(const  ::QPointF&) const SIP_OVERRIDE;
     ::QPainterPath shape() const SIP_OVERRIDE;
     ::QRectF boundingRect() const SIP_OVERRIDE;
    void advance(int) SIP_OVERRIDE;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsWidget(const sipQGraphicsWidget &);
    sipQGraphicsWidget &operator = (const sipQGraphicsWidget &);

    char sipPyMethods[59];
};

sipQGraphicsWidget::sipQGraphicsWidget( ::QGraphicsItem*a0, ::Qt::WindowFlags a1):  ::QGraphicsWidget(a0,a1), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsWidget::~sipQGraphicsWidget()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

const QMetaObject *sipQGraphicsWidget::metaObject() const
{
    if (sipGetInterpreter())
        return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_QtWidgets_qt_metaobject(sipPySelf,sipType_QGraphicsWidget);

    return  ::QGraphicsWidget::metaObject();
}

int sipQGraphicsWidget::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id =  ::QGraphicsWidget::qt_metacall(_c,_id,_a);

    if (_id >= 0)
    {
        SIP_BLOCK_THREADS
        _id = sip_QtWidgets_qt_metacall(sipPySelf,sipType_QGraphicsWidget,_c,_id,_a);
        SIP_UNBLOCK_THREADS
    }

    return _id;
}

void *sipQGraphicsWidget::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_QtWidgets_qt_metacast(sipPySelf, sipType_QGraphicsWidget, _clname, &sipCpp) ? sipCpp :  ::QGraphicsWidget::qt_metacast(_clname));
}

void sipQGraphicsWidget::ungrabKeyboardEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[0], &sipPySelf, SIP_NULLPTR, sipName_ungrabKeyboardEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[0], sipPySelf, SIP_NULLPTR, sipName_ungrabKeyboardEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::ungrabKeyboardEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::grabKeyboardEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[1], &sipPySelf, SIP_NULLPTR, sipName_grabKeyboardEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[1], sipPySelf, SIP_NULLPTR, sipName_grabKeyboardEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::grabKeyboardEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::ungrabMouseEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[2], &sipPySelf, SIP_NULLPTR, sipName_ungrabMouseEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[2], sipPySelf, SIP_NULLPTR, sipName_ungrabMouseEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::ungrabMouseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::grabMouseEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[3], &sipPySelf, SIP_NULLPTR, sipName_grabMouseEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[3], sipPySelf, SIP_NULLPTR, sipName_grabMouseEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::grabMouseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::showEvent( ::QShowEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[4], &sipPySelf, SIP_NULLPTR, sipName_showEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[4], sipPySelf, SIP_NULLPTR, sipName_showEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::showEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_27(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QShowEvent*);

    sipVH_QtWidgets_27(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::resizeEvent( ::QGraphicsSceneResizeEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[5], &sipPySelf, SIP_NULLPTR, sipName_resizeEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[5], sipPySelf, SIP_NULLPTR, sipName_resizeEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::resizeEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_161(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneResizeEvent*);

    sipVH_QtWidgets_161(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::polishEvent()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[6], &sipPySelf, SIP_NULLPTR, sipName_polishEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[6], sipPySelf, SIP_NULLPTR, sipName_polishEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::polishEvent();
        return;
    }

    extern void sipVH_QtWidgets_37(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_QtWidgets_37(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQGraphicsWidget::moveEvent( ::QGraphicsSceneMoveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[7], &sipPySelf, SIP_NULLPTR, sipName_moveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[7], sipPySelf, SIP_NULLPTR, sipName_moveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::moveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_160(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMoveEvent*);

    sipVH_QtWidgets_160(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::hideEvent( ::QHideEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[8], &sipPySelf, SIP_NULLPTR, sipName_hideEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[8], sipPySelf, SIP_NULLPTR, sipName_hideEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::hideEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_28(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QHideEvent*);

    sipVH_QtWidgets_28(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsWidget::focusNextPrevChild(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[9], &sipPySelf, SIP_NULLPTR, sipName_focusNextPrevChild);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[9], sipPySelf, SIP_NULLPTR, sipName_focusNextPrevChild);
#endif

    if (!sipMeth)
        return  ::QGraphicsWidget::focusNextPrevChild(a0);

    extern bool sipVH_QtWidgets_31(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    return sipVH_QtWidgets_31(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::closeEvent( ::QCloseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[10], &sipPySelf, SIP_NULLPTR, sipName_closeEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[10], sipPySelf, SIP_NULLPTR, sipName_closeEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::closeEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_19(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QCloseEvent*);

    sipVH_QtWidgets_19(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::changeEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[11], &sipPySelf, SIP_NULLPTR, sipName_changeEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[11], sipPySelf, SIP_NULLPTR, sipName_changeEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::changeEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::Qt::WindowFrameSection sipQGraphicsWidget::windowFrameSectionAt(const  ::QPointF& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[12]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_windowFrameSectionAt);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[12]), sipPySelf, SIP_NULLPTR, sipName_windowFrameSectionAt);
#endif

    if (!sipMeth)
        return  ::QGraphicsWidget::windowFrameSectionAt(a0);

    extern  ::Qt::WindowFrameSection sipVH_QtWidgets_159(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QPointF&);

    return sipVH_QtWidgets_159(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsWidget::windowFrameEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[13], &sipPySelf, SIP_NULLPTR, sipName_windowFrameEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[13], sipPySelf, SIP_NULLPTR, sipName_windowFrameEvent);
#endif

    if (!sipMeth)
        return  ::QGraphicsWidget::windowFrameEvent(a0);

    extern bool sipVH_QtWidgets_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtWidgets_5(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::initStyleOption( ::QStyleOption*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[14]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_initStyleOption);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[14]), sipPySelf, SIP_NULLPTR, sipName_initStyleOption);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::initStyleOption(a0);
        return;
    }

    extern void sipVH_QtWidgets_158(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QStyleOption*);

    sipVH_QtWidgets_158(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::paintWindowFrame( ::QPainter*a0,const  ::QStyleOptionGraphicsItem*a1, ::QWidget*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[15], &sipPySelf, SIP_NULLPTR, sipName_paintWindowFrame);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[15], sipPySelf, SIP_NULLPTR, sipName_paintWindowFrame);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::paintWindowFrame(a0,a1,a2);
        return;
    }

    extern void sipVH_QtWidgets_150(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPainter*,const  ::QStyleOptionGraphicsItem*, ::QWidget*);

    sipVH_QtWidgets_150(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

void sipQGraphicsWidget::setGeometry(const  ::QRectF& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[16], &sipPySelf, SIP_NULLPTR, sipName_setGeometry);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[16], sipPySelf, SIP_NULLPTR, sipName_setGeometry);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::setGeometry(a0);
        return;
    }

    extern void sipVH_QtWidgets_138(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QRectF&);

    sipVH_QtWidgets_138(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::getContentsMargins( ::qreal*a0, ::qreal*a1, ::qreal*a2, ::qreal*a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[17]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_getContentsMargins);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[17]), sipPySelf, SIP_NULLPTR, sipName_getContentsMargins);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::getContentsMargins(a0,a1,a2,a3);
        return;
    }

    extern void sipVH_QtWidgets_139(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::qreal*, ::qreal*, ::qreal*, ::qreal*);

    sipVH_QtWidgets_139(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2, a3);
}

void sipQGraphicsWidget::updateGeometry()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[18], &sipPySelf, SIP_NULLPTR, sipName_updateGeometry);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[18], sipPySelf, SIP_NULLPTR, sipName_updateGeometry);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::updateGeometry();
        return;
    }

    extern void sipVH_QtWidgets_37(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_QtWidgets_37(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

 ::QSizeF sipQGraphicsWidget::sizeHint( ::Qt::SizeHint a0,const  ::QSizeF& a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[19]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_sizeHint);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[19]), sipPySelf, SIP_NULLPTR, sipName_sizeHint);
#endif

    if (!sipMeth)
        return  ::QGraphicsWidget::sizeHint(a0,a1);

    extern  ::QSizeF sipVH_QtWidgets_140(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::Qt::SizeHint,const  ::QSizeF&);

    return sipVH_QtWidgets_140(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsWidget::disconnectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[20], &sipPySelf, SIP_NULLPTR, sipName_disconnectNotify);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[20], sipPySelf, SIP_NULLPTR, sipName_disconnectNotify);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::disconnectNotify(a0);
        return;
    }

    extern void sipVH_QtWidgets_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtWidgets_0(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::connectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[21], &sipPySelf, SIP_NULLPTR, sipName_connectNotify);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[21], sipPySelf, SIP_NULLPTR, sipName_connectNotify);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::connectNotify(a0);
        return;
    }

    extern void sipVH_QtWidgets_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtWidgets_0(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::customEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[22], &sipPySelf, SIP_NULLPTR, sipName_customEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[22], sipPySelf, SIP_NULLPTR, sipName_customEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::customEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::childEvent( ::QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[23], &sipPySelf, SIP_NULLPTR, sipName_childEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[23], sipPySelf, SIP_NULLPTR, sipName_childEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::childEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_2(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QChildEvent*);

    sipVH_QtWidgets_2(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::timerEvent( ::QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[24], &sipPySelf, SIP_NULLPTR, sipName_timerEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[24], sipPySelf, SIP_NULLPTR, sipName_timerEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::timerEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTimerEvent*);

    sipVH_QtWidgets_3(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsWidget::eventFilter( ::QObject*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[25], &sipPySelf, SIP_NULLPTR, sipName_eventFilter);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[25], sipPySelf, SIP_NULLPTR, sipName_eventFilter);
#endif

    if (!sipMeth)
        return  ::QGraphicsWidget::eventFilter(a0,a1);

    extern bool sipVH_QtWidgets_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QObject*, ::QEvent*);

    return sipVH_QtWidgets_4(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsWidget::event( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[26], &sipPySelf, SIP_NULLPTR, sipName_event);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[26], sipPySelf, SIP_NULLPTR, sipName_event);
#endif

    if (!sipMeth)
        return  ::QGraphicsWidget::event(a0);

    extern bool sipVH_QtWidgets_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtWidgets_5(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::wheelEvent( ::QGraphicsSceneWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[27], &sipPySelf, SIP_NULLPTR, sipName_wheelEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[27], sipPySelf, SIP_NULLPTR, sipName_wheelEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_157(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneWheelEvent*);

    sipVH_QtWidgets_157(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsWidget::sceneEventFilter( ::QGraphicsItem*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[28], &sipPySelf, SIP_NULLPTR, sipName_sceneEventFilter);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[28], sipPySelf, SIP_NULLPTR, sipName_sceneEventFilter);
#endif

    if (!sipMeth)
        return  ::QGraphicsWidget::sceneEventFilter(a0,a1);

    extern bool sipVH_QtWidgets_156(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsItem*, ::QEvent*);

    return sipVH_QtWidgets_156(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsWidget::sceneEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[29], &sipPySelf, SIP_NULLPTR, sipName_sceneEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[29], sipPySelf, SIP_NULLPTR, sipName_sceneEvent);
#endif

    if (!sipMeth)
        return  ::QGraphicsWidget::sceneEvent(a0);

    extern bool sipVH_QtWidgets_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtWidgets_5(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::mouseReleaseEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[30], &sipPySelf, SIP_NULLPTR, sipName_mouseReleaseEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[30], sipPySelf, SIP_NULLPTR, sipName_mouseReleaseEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::mousePressEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[31], &sipPySelf, SIP_NULLPTR, sipName_mousePressEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[31], sipPySelf, SIP_NULLPTR, sipName_mousePressEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::mouseMoveEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[32], &sipPySelf, SIP_NULLPTR, sipName_mouseMoveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[32], sipPySelf, SIP_NULLPTR, sipName_mouseMoveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::mouseDoubleClickEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[33], &sipPySelf, SIP_NULLPTR, sipName_mouseDoubleClickEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[33], sipPySelf, SIP_NULLPTR, sipName_mouseDoubleClickEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::keyReleaseEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[34], &sipPySelf, SIP_NULLPTR, sipName_keyReleaseEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[34], sipPySelf, SIP_NULLPTR, sipName_keyReleaseEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::keyReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtWidgets_14(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::keyPressEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[35], &sipPySelf, SIP_NULLPTR, sipName_keyPressEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[35], sipPySelf, SIP_NULLPTR, sipName_keyPressEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::keyPressEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtWidgets_14(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QVariant sipQGraphicsWidget::itemChange( ::QGraphicsItem::GraphicsItemChange a0,const  ::QVariant& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[36], &sipPySelf, SIP_NULLPTR, sipName_itemChange);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[36], sipPySelf, SIP_NULLPTR, sipName_itemChange);
#endif

    if (!sipMeth)
        return  ::QGraphicsWidget::itemChange(a0,a1);

    extern  ::QVariant sipVH_QtWidgets_154(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsItem::GraphicsItemChange,const  ::QVariant&);

    return sipVH_QtWidgets_154(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

 ::QVariant sipQGraphicsWidget::inputMethodQuery( ::Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[37]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_inputMethodQuery);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[37]), sipPySelf, SIP_NULLPTR, sipName_inputMethodQuery);
#endif

    if (!sipMeth)
        return  ::QGraphicsWidget::inputMethodQuery(a0);

    extern  ::QVariant sipVH_QtWidgets_30(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::Qt::InputMethodQuery);

    return sipVH_QtWidgets_30(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::inputMethodEvent( ::QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[38], &sipPySelf, SIP_NULLPTR, sipName_inputMethodEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[38], sipPySelf, SIP_NULLPTR, sipName_inputMethodEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_29(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QInputMethodEvent*);

    sipVH_QtWidgets_29(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::hoverMoveEvent( ::QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[39], &sipPySelf, SIP_NULLPTR, sipName_hoverMoveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[39], sipPySelf, SIP_NULLPTR, sipName_hoverMoveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::hoverMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_153(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_153(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::hoverLeaveEvent( ::QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[40], &sipPySelf, SIP_NULLPTR, sipName_hoverLeaveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[40], sipPySelf, SIP_NULLPTR, sipName_hoverLeaveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::hoverLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_153(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_153(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::hoverEnterEvent( ::QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[41], &sipPySelf, SIP_NULLPTR, sipName_hoverEnterEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[41], sipPySelf, SIP_NULLPTR, sipName_hoverEnterEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::hoverEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_153(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_153(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::focusOutEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[42], &sipPySelf, SIP_NULLPTR, sipName_focusOutEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[42], sipPySelf, SIP_NULLPTR, sipName_focusOutEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::focusOutEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtWidgets_15(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::focusInEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[43], &sipPySelf, SIP_NULLPTR, sipName_focusInEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[43], sipPySelf, SIP_NULLPTR, sipName_focusInEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::focusInEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtWidgets_15(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::dropEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[44], &sipPySelf, SIP_NULLPTR, sipName_dropEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[44], sipPySelf, SIP_NULLPTR, sipName_dropEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::dropEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::dragMoveEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[45], &sipPySelf, SIP_NULLPTR, sipName_dragMoveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[45], sipPySelf, SIP_NULLPTR, sipName_dragMoveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::dragLeaveEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[46], &sipPySelf, SIP_NULLPTR, sipName_dragLeaveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[46], sipPySelf, SIP_NULLPTR, sipName_dragLeaveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::dragEnterEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[47], &sipPySelf, SIP_NULLPTR, sipName_dragEnterEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[47], sipPySelf, SIP_NULLPTR, sipName_dragEnterEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::contextMenuEvent( ::QGraphicsSceneContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[48], &sipPySelf, SIP_NULLPTR, sipName_contextMenuEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[48], sipPySelf, SIP_NULLPTR, sipName_contextMenuEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_151(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneContextMenuEvent*);

    sipVH_QtWidgets_151(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

int sipQGraphicsWidget::type() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[49]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_type);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[49]), sipPySelf, SIP_NULLPTR, sipName_type);
#endif

    if (!sipMeth)
        return  ::QGraphicsWidget::type();

    extern int sipVH_QtWidgets_8(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_8(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQGraphicsWidget::paint( ::QPainter*a0,const  ::QStyleOptionGraphicsItem*a1, ::QWidget*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[50], &sipPySelf, SIP_NULLPTR, sipName_paint);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[50], sipPySelf, SIP_NULLPTR, sipName_paint);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::paint(a0,a1,a2);
        return;
    }

    extern void sipVH_QtWidgets_150(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPainter*,const  ::QStyleOptionGraphicsItem*, ::QWidget*);

    sipVH_QtWidgets_150(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

 ::QPainterPath sipQGraphicsWidget::opaqueArea() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[51]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_opaqueArea);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[51]), sipPySelf, SIP_NULLPTR, sipName_opaqueArea);
#endif

    if (!sipMeth)
        return  ::QGraphicsWidget::opaqueArea();

    extern  ::QPainterPath sipVH_QtWidgets_145(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_145(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

bool sipQGraphicsWidget::isObscuredBy(const  ::QGraphicsItem*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[52]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_isObscuredBy);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[52]), sipPySelf, SIP_NULLPTR, sipName_isObscuredBy);
#endif

    if (!sipMeth)
        return  ::QGraphicsWidget::isObscuredBy(a0);

    extern bool sipVH_QtWidgets_149(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QGraphicsItem*);

    return sipVH_QtWidgets_149(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsWidget::collidesWithPath(const  ::QPainterPath& a0, ::Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[53]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_collidesWithPath);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[53]), sipPySelf, SIP_NULLPTR, sipName_collidesWithPath);
#endif

    if (!sipMeth)
        return  ::QGraphicsWidget::collidesWithPath(a0,a1);

    extern bool sipVH_QtWidgets_148(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QPainterPath&, ::Qt::ItemSelectionMode);

    return sipVH_QtWidgets_148(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsWidget::collidesWithItem(const  ::QGraphicsItem*a0, ::Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[54]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_collidesWithItem);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[54]), sipPySelf, SIP_NULLPTR, sipName_collidesWithItem);
#endif

    if (!sipMeth)
        return  ::QGraphicsWidget::collidesWithItem(a0,a1);

    extern bool sipVH_QtWidgets_147(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QGraphicsItem*, ::Qt::ItemSelectionMode);

    return sipVH_QtWidgets_147(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsWidget::contains(const  ::QPointF& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[55]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_contains);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[55]), sipPySelf, SIP_NULLPTR, sipName_contains);
#endif

    if (!sipMeth)
        return  ::QGraphicsWidget::contains(a0);

    extern bool sipVH_QtWidgets_146(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QPointF&);

    return sipVH_QtWidgets_146(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QPainterPath sipQGraphicsWidget::shape() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[56]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_shape);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[56]), sipPySelf, SIP_NULLPTR, sipName_shape);
#endif

    if (!sipMeth)
        return  ::QGraphicsWidget::shape();

    extern  ::QPainterPath sipVH_QtWidgets_145(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_145(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

 ::QRectF sipQGraphicsWidget::boundingRect() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[57]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_boundingRect);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[57]), sipPySelf, SIP_NULLPTR, sipName_boundingRect);
#endif

    if (!sipMeth)
        return  ::QGraphicsWidget::boundingRect();

    extern  ::QRectF sipVH_QtWidgets_144(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_144(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQGraphicsWidget::advance(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[58], &sipPySelf, SIP_NULLPTR, sipName_advance);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[58], sipPySelf, SIP_NULLPTR, sipName_advance);
#endif

    if (!sipMeth)
    {
         ::QGraphicsWidget::advance(a0);
        return;
    }

    extern void sipVH_QtWidgets_59(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    sipVH_QtWidgets_59(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QGraphicsWidget_layout, "layout(self) -> QGraphicsLayout");

extern "C" {static PyObject *meth_QGraphicsWidget_layout(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_layout(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
             ::QGraphicsLayout*sipRes;

            sipRes = sipCpp->layout();

            return sipConvertFromType(sipRes,sipType_QGraphicsLayout,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_layout, doc_QGraphicsWidget_layout);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setLayout, "setLayout(self, QGraphicsLayout)");

extern "C" {static PyObject *meth_QGraphicsWidget_setLayout(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setLayout(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsLayout* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsLayout, &a0))
        {
            sipCpp->setLayout(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setLayout, doc_QGraphicsWidget_setLayout);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_adjustSize, "adjustSize(self)");

extern "C" {static PyObject *meth_QGraphicsWidget_adjustSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_adjustSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            sipCpp->adjustSize();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_adjustSize, doc_QGraphicsWidget_adjustSize);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_layoutDirection, "layoutDirection(self) -> Qt.LayoutDirection");

extern "C" {static PyObject *meth_QGraphicsWidget_layoutDirection(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_layoutDirection(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
             ::Qt::LayoutDirection sipRes;

            sipRes = sipCpp->layoutDirection();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_Qt_LayoutDirection);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_layoutDirection, doc_QGraphicsWidget_layoutDirection);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setLayoutDirection, "setLayoutDirection(self, Qt.LayoutDirection)");

extern "C" {static PyObject *meth_QGraphicsWidget_setLayoutDirection(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setLayoutDirection(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::Qt::LayoutDirection a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_Qt_LayoutDirection, &a0))
        {
            sipCpp->setLayoutDirection(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setLayoutDirection, doc_QGraphicsWidget_setLayoutDirection);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_unsetLayoutDirection, "unsetLayoutDirection(self)");

extern "C" {static PyObject *meth_QGraphicsWidget_unsetLayoutDirection(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_unsetLayoutDirection(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            sipCpp->unsetLayoutDirection();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_unsetLayoutDirection, doc_QGraphicsWidget_unsetLayoutDirection);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_style, "style(self) -> QStyle");

extern "C" {static PyObject *meth_QGraphicsWidget_style(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_style(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
             ::QStyle*sipRes;

            sipRes = sipCpp->style();

            return sipConvertFromType(sipRes,sipType_QStyle,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_style, doc_QGraphicsWidget_style);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setStyle, "setStyle(self, QStyle)");

extern "C" {static PyObject *meth_QGraphicsWidget_setStyle(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setStyle(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QStyle* a0;
        PyObject *a0Keep;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0Keep, sipType_QStyle, &a0))
        {
            sipCpp->setStyle(a0);

            sipKeepReference(sipSelf, -28, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setStyle, doc_QGraphicsWidget_setStyle);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_font, "font(self) -> QFont");

extern "C" {static PyObject *meth_QGraphicsWidget_font(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_font(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
             ::QFont*sipRes;

            sipRes = new  ::QFont(sipCpp->font());

            return sipConvertFromNewType(sipRes,sipType_QFont,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_font, doc_QGraphicsWidget_font);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setFont, "setFont(self, QFont)");

extern "C" {static PyObject *meth_QGraphicsWidget_setFont(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setFont(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QFont* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QFont, &a0))
        {
            sipCpp->setFont(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setFont, doc_QGraphicsWidget_setFont);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_palette, "palette(self) -> QPalette");

extern "C" {static PyObject *meth_QGraphicsWidget_palette(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_palette(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
             ::QPalette*sipRes;

            sipRes = new  ::QPalette(sipCpp->palette());

            return sipConvertFromNewType(sipRes,sipType_QPalette,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_palette, doc_QGraphicsWidget_palette);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setPalette, "setPalette(self, QPalette)");

extern "C" {static PyObject *meth_QGraphicsWidget_setPalette(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setPalette(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QPalette* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QPalette, &a0))
        {
            sipCpp->setPalette(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setPalette, doc_QGraphicsWidget_setPalette);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_resize, "resize(self, QSizeF)\n"
"resize(self, float, float)");

extern "C" {static PyObject *meth_QGraphicsWidget_resize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_resize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QSizeF* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QSizeF, &a0))
        {
            sipCpp->resize(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0, &a1))
        {
            sipCpp->resize(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_resize, doc_QGraphicsWidget_resize);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_size, "size(self) -> QSizeF");

extern "C" {static PyObject *meth_QGraphicsWidget_size(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_size(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
             ::QSizeF*sipRes;

            sipRes = new  ::QSizeF(sipCpp->size());

            return sipConvertFromNewType(sipRes,sipType_QSizeF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_size, doc_QGraphicsWidget_size);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setGeometry, "setGeometry(self, QRectF)\n"
"setGeometry(self, float, float, float, float)");

extern "C" {static PyObject *meth_QGraphicsWidget_setGeometry(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setGeometry(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QRectF* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QRectF, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::setGeometry(*a0) : sipCpp->setGeometry(*a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->setGeometry(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setGeometry, doc_QGraphicsWidget_setGeometry);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_rect, "rect(self) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsWidget_rect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_rect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->rect());

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_rect, doc_QGraphicsWidget_rect);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setContentsMargins, "setContentsMargins(self, float, float, float, float)");

extern "C" {static PyObject *meth_QGraphicsWidget_setContentsMargins(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setContentsMargins(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->setContentsMargins(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setContentsMargins, doc_QGraphicsWidget_setContentsMargins);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_getContentsMargins, "getContentsMargins(self) -> Tuple[float, float, float, float]");

extern "C" {static PyObject *meth_QGraphicsWidget_getContentsMargins(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_getContentsMargins(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::getContentsMargins(&a0,&a1,&a2,&a3) : sipCpp->getContentsMargins(&a0,&a1,&a2,&a3));

            return sipBuildResult(0,"(dddd)",a0,a1,a2,a3);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_getContentsMargins, doc_QGraphicsWidget_getContentsMargins);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setWindowFrameMargins, "setWindowFrameMargins(self, float, float, float, float)");

extern "C" {static PyObject *meth_QGraphicsWidget_setWindowFrameMargins(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setWindowFrameMargins(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->setWindowFrameMargins(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setWindowFrameMargins, doc_QGraphicsWidget_setWindowFrameMargins);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_getWindowFrameMargins, "getWindowFrameMargins(self) -> Tuple[float, float, float, float]");

extern "C" {static PyObject *meth_QGraphicsWidget_getWindowFrameMargins(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_getWindowFrameMargins(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            sipCpp->getWindowFrameMargins(&a0,&a1,&a2,&a3);

            return sipBuildResult(0,"(dddd)",a0,a1,a2,a3);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_getWindowFrameMargins, doc_QGraphicsWidget_getWindowFrameMargins);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_unsetWindowFrameMargins, "unsetWindowFrameMargins(self)");

extern "C" {static PyObject *meth_QGraphicsWidget_unsetWindowFrameMargins(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_unsetWindowFrameMargins(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            sipCpp->unsetWindowFrameMargins();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_unsetWindowFrameMargins, doc_QGraphicsWidget_unsetWindowFrameMargins);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_windowFrameGeometry, "windowFrameGeometry(self) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsWidget_windowFrameGeometry(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_windowFrameGeometry(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->windowFrameGeometry());

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_windowFrameGeometry, doc_QGraphicsWidget_windowFrameGeometry);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_windowFrameRect, "windowFrameRect(self) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsWidget_windowFrameRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_windowFrameRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->windowFrameRect());

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_windowFrameRect, doc_QGraphicsWidget_windowFrameRect);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_windowFlags, "windowFlags(self) -> Qt.WindowFlags");

extern "C" {static PyObject *meth_QGraphicsWidget_windowFlags(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_windowFlags(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
             ::Qt::WindowFlags*sipRes;

            sipRes = new  ::Qt::WindowFlags(sipCpp->windowFlags());

            return sipConvertFromNewType(sipRes,sipType_Qt_WindowFlags,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_windowFlags, doc_QGraphicsWidget_windowFlags);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_windowType, "windowType(self) -> Qt.WindowType");

extern "C" {static PyObject *meth_QGraphicsWidget_windowType(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_windowType(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
             ::Qt::WindowType sipRes;

            sipRes = sipCpp->windowType();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_Qt_WindowType);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_windowType, doc_QGraphicsWidget_windowType);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setWindowFlags, "setWindowFlags(self, Union[Qt.WindowFlags, Qt.WindowType])");

extern "C" {static PyObject *meth_QGraphicsWidget_setWindowFlags(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setWindowFlags(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::Qt::WindowFlags* a0;
        int a0State = 0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_Qt_WindowFlags, &a0, &a0State))
        {
            sipCpp->setWindowFlags(*a0);
            sipReleaseType(a0,sipType_Qt_WindowFlags,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setWindowFlags, doc_QGraphicsWidget_setWindowFlags);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_isActiveWindow, "isActiveWindow(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsWidget_isActiveWindow(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_isActiveWindow(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isActiveWindow();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_isActiveWindow, doc_QGraphicsWidget_isActiveWindow);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setWindowTitle, "setWindowTitle(self, str)");

extern "C" {static PyObject *meth_QGraphicsWidget_setWindowTitle(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setWindowTitle(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QString,&a0, &a0State))
        {
            sipCpp->setWindowTitle(*a0);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setWindowTitle, doc_QGraphicsWidget_setWindowTitle);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_windowTitle, "windowTitle(self) -> str");

extern "C" {static PyObject *meth_QGraphicsWidget_windowTitle(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_windowTitle(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->windowTitle());

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_windowTitle, doc_QGraphicsWidget_windowTitle);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_focusPolicy, "focusPolicy(self) -> Qt.FocusPolicy");

extern "C" {static PyObject *meth_QGraphicsWidget_focusPolicy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_focusPolicy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
             ::Qt::FocusPolicy sipRes;

            sipRes = sipCpp->focusPolicy();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_Qt_FocusPolicy);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_focusPolicy, doc_QGraphicsWidget_focusPolicy);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setFocusPolicy, "setFocusPolicy(self, Qt.FocusPolicy)");

extern "C" {static PyObject *meth_QGraphicsWidget_setFocusPolicy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setFocusPolicy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::Qt::FocusPolicy a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_Qt_FocusPolicy, &a0))
        {
            sipCpp->setFocusPolicy(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setFocusPolicy, doc_QGraphicsWidget_setFocusPolicy);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setTabOrder, "setTabOrder(QGraphicsWidget, QGraphicsWidget)");

extern "C" {static PyObject *meth_QGraphicsWidget_setTabOrder(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setTabOrder(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsWidget* a0;
         ::QGraphicsWidget* a1;

        if (sipParseArgs(&sipParseErr, sipArgs, "J8J8", sipType_QGraphicsWidget, &a0, sipType_QGraphicsWidget, &a1))
        {
             ::QGraphicsWidget::setTabOrder(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setTabOrder, doc_QGraphicsWidget_setTabOrder);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_focusWidget, "focusWidget(self) -> QGraphicsWidget");

extern "C" {static PyObject *meth_QGraphicsWidget_focusWidget(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_focusWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
             ::QGraphicsWidget*sipRes;

            sipRes = sipCpp->focusWidget();

            return sipConvertFromType(sipRes,sipType_QGraphicsWidget,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_focusWidget, doc_QGraphicsWidget_focusWidget);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_grabShortcut, "grabShortcut(self, Union[QKeySequence, QKeySequence.StandardKey, str, int], context: Qt.ShortcutContext = Qt.WindowShortcut) -> int");

extern "C" {static PyObject *meth_QGraphicsWidget_grabShortcut(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_grabShortcut(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QKeySequence* a0;
        int a0State = 0;
         ::Qt::ShortcutContext a1 = Qt::WindowShortcut;
         ::QGraphicsWidget *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_context,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1|E", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QKeySequence, &a0, &a0State, sipType_Qt_ShortcutContext, &a1))
        {
            int sipRes;

            sipRes = sipCpp->grabShortcut(*a0,a1);
            sipReleaseType(const_cast< ::QKeySequence *>(a0),sipType_QKeySequence,a0State);

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_grabShortcut, doc_QGraphicsWidget_grabShortcut);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_releaseShortcut, "releaseShortcut(self, int)");

extern "C" {static PyObject *meth_QGraphicsWidget_releaseShortcut(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_releaseShortcut(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0))
        {
            sipCpp->releaseShortcut(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_releaseShortcut, doc_QGraphicsWidget_releaseShortcut);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setShortcutEnabled, "setShortcutEnabled(self, int, enabled: bool = True)");

extern "C" {static PyObject *meth_QGraphicsWidget_setShortcutEnabled(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setShortcutEnabled(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        bool a1 = 1;
         ::QGraphicsWidget *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_enabled,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bi|b", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0, &a1))
        {
            sipCpp->setShortcutEnabled(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setShortcutEnabled, doc_QGraphicsWidget_setShortcutEnabled);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setShortcutAutoRepeat, "setShortcutAutoRepeat(self, int, enabled: bool = True)");

extern "C" {static PyObject *meth_QGraphicsWidget_setShortcutAutoRepeat(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setShortcutAutoRepeat(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        bool a1 = 1;
         ::QGraphicsWidget *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_enabled,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bi|b", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0, &a1))
        {
            sipCpp->setShortcutAutoRepeat(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setShortcutAutoRepeat, doc_QGraphicsWidget_setShortcutAutoRepeat);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_addAction, "addAction(self, QAction)");

extern "C" {static PyObject *meth_QGraphicsWidget_addAction(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_addAction(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QAction* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QAction, &a0))
        {
            sipCpp->addAction(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_addAction, doc_QGraphicsWidget_addAction);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_addActions, "addActions(self, Iterable[QAction])");

extern "C" {static PyObject *meth_QGraphicsWidget_addActions(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_addActions(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        QList< ::QAction*>* a0;
        int a0State = 0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QList_0101QAction,&a0, &a0State))
        {
            sipCpp->addActions(*a0);
            sipReleaseType(a0,sipType_QList_0101QAction,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_addActions, doc_QGraphicsWidget_addActions);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_insertAction, "insertAction(self, QAction, QAction)");

extern "C" {static PyObject *meth_QGraphicsWidget_insertAction(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_insertAction(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QAction* a0;
         ::QAction* a1;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QAction, &a0, sipType_QAction, &a1))
        {
            sipCpp->insertAction(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_insertAction, doc_QGraphicsWidget_insertAction);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_insertActions, "insertActions(self, QAction, Iterable[QAction])");

extern "C" {static PyObject *meth_QGraphicsWidget_insertActions(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_insertActions(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QAction* a0;
        QList< ::QAction*>* a1;
        int a1State = 0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J1", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QAction, &a0, sipType_QList_0101QAction,&a1, &a1State))
        {
            sipCpp->insertActions(a0,*a1);
            sipReleaseType(a1,sipType_QList_0101QAction,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_insertActions, doc_QGraphicsWidget_insertActions);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_removeAction, "removeAction(self, QAction)");

extern "C" {static PyObject *meth_QGraphicsWidget_removeAction(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_removeAction(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QAction* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QAction, &a0))
        {
            sipCpp->removeAction(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_removeAction, doc_QGraphicsWidget_removeAction);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_actions, "actions(self) -> List[QAction]");

extern "C" {static PyObject *meth_QGraphicsWidget_actions(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_actions(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            QList< ::QAction*>*sipRes;

            sipRes = new QList< ::QAction*>(sipCpp->actions());

            return sipConvertFromNewType(sipRes,sipType_QList_0101QAction,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_actions, doc_QGraphicsWidget_actions);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setAttribute, "setAttribute(self, Qt.WidgetAttribute, on: bool = True)");

extern "C" {static PyObject *meth_QGraphicsWidget_setAttribute(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setAttribute(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::Qt::WidgetAttribute a0;
        bool a1 = 1;
         ::QGraphicsWidget *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_on,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BE|b", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_Qt_WidgetAttribute, &a0, &a1))
        {
            sipCpp->setAttribute(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setAttribute, doc_QGraphicsWidget_setAttribute);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_testAttribute, "testAttribute(self, Qt.WidgetAttribute) -> bool");

extern "C" {static PyObject *meth_QGraphicsWidget_testAttribute(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_testAttribute(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::Qt::WidgetAttribute a0;
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_Qt_WidgetAttribute, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->testAttribute(a0);

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_testAttribute, doc_QGraphicsWidget_testAttribute);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_type, "type(self) -> int");

extern "C" {static PyObject *meth_QGraphicsWidget_type(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_type(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            int sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::type() : sipCpp->type());

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_type, doc_QGraphicsWidget_type);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_paint, "paint(self, QPainter, QStyleOptionGraphicsItem, widget: QWidget = None)");

extern "C" {static PyObject *meth_QGraphicsWidget_paint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_paint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QPainter* a0;
        const  ::QStyleOptionGraphicsItem* a1;
         ::QWidget* a2 = 0;
         ::QGraphicsWidget *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ8J8|J8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QPainter, &a0, sipType_QStyleOptionGraphicsItem, &a1, sipType_QWidget, &a2))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::paint(a0,a1,a2) : sipCpp->paint(a0,a1,a2));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_paint, doc_QGraphicsWidget_paint);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_paintWindowFrame, "paintWindowFrame(self, QPainter, QStyleOptionGraphicsItem, widget: QWidget = None)");

extern "C" {static PyObject *meth_QGraphicsWidget_paintWindowFrame(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_paintWindowFrame(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QPainter* a0;
        const  ::QStyleOptionGraphicsItem* a1;
         ::QWidget* a2 = 0;
         ::QGraphicsWidget *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ8J8|J8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QPainter, &a0, sipType_QStyleOptionGraphicsItem, &a1, sipType_QWidget, &a2))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::paintWindowFrame(a0,a1,a2) : sipCpp->paintWindowFrame(a0,a1,a2));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_paintWindowFrame, doc_QGraphicsWidget_paintWindowFrame);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_boundingRect, "boundingRect(self) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsWidget_boundingRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_boundingRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF((sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::boundingRect() : sipCpp->boundingRect()));

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_boundingRect, doc_QGraphicsWidget_boundingRect);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_shape, "shape(self) -> QPainterPath");

extern "C" {static PyObject *meth_QGraphicsWidget_shape(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_shape(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
             ::QPainterPath*sipRes;

            sipRes = new  ::QPainterPath((sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::shape() : sipCpp->shape()));

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_shape, doc_QGraphicsWidget_shape);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_close, "close(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsWidget_close(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_close(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->close();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_close, doc_QGraphicsWidget_close);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_initStyleOption, "initStyleOption(self, QStyleOption)");

extern "C" {static PyObject *meth_QGraphicsWidget_initStyleOption(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_initStyleOption(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QStyleOption* a0;
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QStyleOption, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::initStyleOption(a0) : sipCpp->initStyleOption(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_initStyleOption, doc_QGraphicsWidget_initStyleOption);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_sizeHint, "sizeHint(self, Qt.SizeHint, constraint: QSizeF = QSizeF()) -> QSizeF");

extern "C" {static PyObject *meth_QGraphicsWidget_sizeHint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_sizeHint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::Qt::SizeHint a0;
        const  ::QSizeF& a1def = QSizeF();
        const  ::QSizeF* a1 = &a1def;
        const  ::QGraphicsWidget *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_constraint,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "pE|J9", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_Qt_SizeHint, &a0, sipType_QSizeF, &a1))
        {
             ::QSizeF*sipRes;

            sipRes = new  ::QSizeF((sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::sizeHint(a0,*a1) : sipCpp->sizeHint(a0,*a1)));

            return sipConvertFromNewType(sipRes,sipType_QSizeF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_sizeHint, doc_QGraphicsWidget_sizeHint);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_updateGeometry, "updateGeometry(self)");

extern "C" {static PyObject *meth_QGraphicsWidget_updateGeometry(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_updateGeometry(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::updateGeometry() : sipCpp->updateGeometry());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_updateGeometry, doc_QGraphicsWidget_updateGeometry);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_itemChange, "itemChange(self, QGraphicsItem.GraphicsItemChange, Any) -> Any");

extern "C" {static PyObject *meth_QGraphicsWidget_itemChange(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_itemChange(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsItem::GraphicsItemChange a0;
        const  ::QVariant* a1;
        int a1State = 0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pEJ1", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsItem_GraphicsItemChange, &a0, sipType_QVariant, &a1, &a1State))
        {
             ::QVariant*sipRes;

            sipRes = new  ::QVariant((sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::itemChange(a0,*a1) : sipCpp->itemChange(a0,*a1)));
            sipReleaseType(const_cast< ::QVariant *>(a1),sipType_QVariant,a1State);

            return sipConvertFromNewType(sipRes,sipType_QVariant,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_itemChange, doc_QGraphicsWidget_itemChange);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_sceneEvent, "sceneEvent(self, QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsWidget_sceneEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_sceneEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::sceneEvent(a0) : sipCpp->sceneEvent(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_sceneEvent, doc_QGraphicsWidget_sceneEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_windowFrameEvent, "windowFrameEvent(self, QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsWidget_windowFrameEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_windowFrameEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::windowFrameEvent(a0) : sipCpp->windowFrameEvent(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_windowFrameEvent, doc_QGraphicsWidget_windowFrameEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_windowFrameSectionAt, "windowFrameSectionAt(self, Union[QPointF, QPoint]) -> Qt.WindowFrameSection");

extern "C" {static PyObject *meth_QGraphicsWidget_windowFrameSectionAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_windowFrameSectionAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QPointF* a0;
        int a0State = 0;
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ1", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
             ::Qt::WindowFrameSection sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::windowFrameSectionAt(*a0) : sipCpp->windowFrameSectionAt(*a0));
            sipReleaseType(const_cast< ::QPointF *>(a0),sipType_QPointF,a0State);

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_Qt_WindowFrameSection);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_windowFrameSectionAt, doc_QGraphicsWidget_windowFrameSectionAt);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_event, "event(self, QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsWidget_event(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_event(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::event(a0) : sipCpp->event(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_event, doc_QGraphicsWidget_event);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_changeEvent, "changeEvent(self, QEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_changeEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_changeEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::changeEvent(a0) : sipCpp->changeEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_changeEvent, doc_QGraphicsWidget_changeEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_closeEvent, "closeEvent(self, QCloseEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_closeEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_closeEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QCloseEvent* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QCloseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::closeEvent(a0) : sipCpp->closeEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_closeEvent, doc_QGraphicsWidget_closeEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_focusInEvent, "focusInEvent(self, QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_focusInEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_focusInEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QFocusEvent* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QFocusEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::focusInEvent(a0) : sipCpp->focusInEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_focusInEvent, doc_QGraphicsWidget_focusInEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_focusNextPrevChild, "focusNextPrevChild(self, bool) -> bool");

extern "C" {static PyObject *meth_QGraphicsWidget_focusNextPrevChild(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_focusNextPrevChild(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        bool a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pb", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::focusNextPrevChild(a0) : sipCpp->focusNextPrevChild(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_focusNextPrevChild, doc_QGraphicsWidget_focusNextPrevChild);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_focusOutEvent, "focusOutEvent(self, QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_focusOutEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_focusOutEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QFocusEvent* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QFocusEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::focusOutEvent(a0) : sipCpp->focusOutEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_focusOutEvent, doc_QGraphicsWidget_focusOutEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_hideEvent, "hideEvent(self, QHideEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_hideEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_hideEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QHideEvent* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QHideEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::hideEvent(a0) : sipCpp->hideEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_hideEvent, doc_QGraphicsWidget_hideEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_moveEvent, "moveEvent(self, QGraphicsSceneMoveEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_moveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_moveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneMoveEvent* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsSceneMoveEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::moveEvent(a0) : sipCpp->moveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_moveEvent, doc_QGraphicsWidget_moveEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_polishEvent, "polishEvent(self)");

extern "C" {static PyObject *meth_QGraphicsWidget_polishEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_polishEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::polishEvent() : sipCpp->polishEvent());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_polishEvent, doc_QGraphicsWidget_polishEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_resizeEvent, "resizeEvent(self, QGraphicsSceneResizeEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_resizeEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_resizeEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneResizeEvent* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsSceneResizeEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::resizeEvent(a0) : sipCpp->resizeEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_resizeEvent, doc_QGraphicsWidget_resizeEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_showEvent, "showEvent(self, QShowEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_showEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_showEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QShowEvent* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QShowEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::showEvent(a0) : sipCpp->showEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_showEvent, doc_QGraphicsWidget_showEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_hoverMoveEvent, "hoverMoveEvent(self, QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_hoverMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_hoverMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneHoverEvent* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::hoverMoveEvent(a0) : sipCpp->hoverMoveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_hoverMoveEvent, doc_QGraphicsWidget_hoverMoveEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_hoverLeaveEvent, "hoverLeaveEvent(self, QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_hoverLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_hoverLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneHoverEvent* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::hoverLeaveEvent(a0) : sipCpp->hoverLeaveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_hoverLeaveEvent, doc_QGraphicsWidget_hoverLeaveEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_grabMouseEvent, "grabMouseEvent(self, QEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_grabMouseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_grabMouseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::grabMouseEvent(a0) : sipCpp->grabMouseEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_grabMouseEvent, doc_QGraphicsWidget_grabMouseEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_ungrabMouseEvent, "ungrabMouseEvent(self, QEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_ungrabMouseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_ungrabMouseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::ungrabMouseEvent(a0) : sipCpp->ungrabMouseEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_ungrabMouseEvent, doc_QGraphicsWidget_ungrabMouseEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_grabKeyboardEvent, "grabKeyboardEvent(self, QEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_grabKeyboardEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_grabKeyboardEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::grabKeyboardEvent(a0) : sipCpp->grabKeyboardEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_grabKeyboardEvent, doc_QGraphicsWidget_grabKeyboardEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_ungrabKeyboardEvent, "ungrabKeyboardEvent(self, QEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_ungrabKeyboardEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_ungrabKeyboardEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsWidget::ungrabKeyboardEvent(a0) : sipCpp->ungrabKeyboardEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_ungrabKeyboardEvent, doc_QGraphicsWidget_ungrabKeyboardEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_autoFillBackground, "autoFillBackground(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsWidget_autoFillBackground(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_autoFillBackground(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->autoFillBackground();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_autoFillBackground, doc_QGraphicsWidget_autoFillBackground);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setAutoFillBackground, "setAutoFillBackground(self, bool)");

extern "C" {static PyObject *meth_QGraphicsWidget_setAutoFillBackground(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setAutoFillBackground(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0))
        {
            sipCpp->setAutoFillBackground(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setAutoFillBackground, doc_QGraphicsWidget_setAutoFillBackground);

    return SIP_NULLPTR;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QGraphicsWidget(void *, const sipTypeDef *);}
static void *cast_QGraphicsWidget(void *sipCppV, const sipTypeDef *targetType)
{
     ::QGraphicsWidget *sipCpp = reinterpret_cast< ::QGraphicsWidget *>(sipCppV);

    if (targetType == sipType_QGraphicsObject)
        return static_cast< ::QGraphicsObject *>(sipCpp);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    if (targetType == sipType_QGraphicsItem)
        return static_cast< ::QGraphicsItem *>(sipCpp);

    if (targetType == sipType_QGraphicsLayoutItem)
        return static_cast< ::QGraphicsLayoutItem *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsWidget(void *, int);}
static void release_QGraphicsWidget(void *sipCppV, int)
{
     ::QGraphicsWidget *sipCpp = reinterpret_cast< ::QGraphicsWidget *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void *array_QGraphicsWidget(Py_ssize_t);}
static void *array_QGraphicsWidget(Py_ssize_t sipNrElem)
{
    return new  ::QGraphicsWidget[sipNrElem];
}


extern "C" {static void dealloc_QGraphicsWidget(sipSimpleWrapper *);}
static void dealloc_QGraphicsWidget(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQGraphicsWidget *>(sipGetAddress(sipSelf))->sipPySelf = SIP_NULLPTR;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QGraphicsWidget(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QGraphicsWidget(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QGraphicsWidget(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsWidget *sipCpp = SIP_NULLPTR;

    {
         ::QGraphicsItem* a0 = 0;
         ::Qt::WindowFlags a1def = Qt::WindowFlags();
         ::Qt::WindowFlags* a1 = &a1def;
        int a1State = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
            sipName_flags,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JHJ1", sipType_QGraphicsItem, &a0, sipOwner, sipType_Qt_WindowFlags, &a1, &a1State))
        {
            sipCpp = new sipQGraphicsWidget(a0,*a1);
            sipReleaseType(a1,sipType_Qt_WindowFlags,a1State);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QGraphicsWidget[] = {{134, 255, 0}, {131, 255, 1}};


static PyMethodDef methods_QGraphicsWidget[] = {
    {sipName_actions, meth_QGraphicsWidget_actions, METH_VARARGS, doc_QGraphicsWidget_actions},
    {sipName_addAction, meth_QGraphicsWidget_addAction, METH_VARARGS, doc_QGraphicsWidget_addAction},
    {sipName_addActions, meth_QGraphicsWidget_addActions, METH_VARARGS, doc_QGraphicsWidget_addActions},
    {sipName_adjustSize, meth_QGraphicsWidget_adjustSize, METH_VARARGS, doc_QGraphicsWidget_adjustSize},
    {sipName_autoFillBackground, meth_QGraphicsWidget_autoFillBackground, METH_VARARGS, doc_QGraphicsWidget_autoFillBackground},
    {sipName_boundingRect, meth_QGraphicsWidget_boundingRect, METH_VARARGS, doc_QGraphicsWidget_boundingRect},
    {sipName_changeEvent, meth_QGraphicsWidget_changeEvent, METH_VARARGS, doc_QGraphicsWidget_changeEvent},
    {sipName_close, meth_QGraphicsWidget_close, METH_VARARGS, doc_QGraphicsWidget_close},
    {sipName_closeEvent, meth_QGraphicsWidget_closeEvent, METH_VARARGS, doc_QGraphicsWidget_closeEvent},
    {sipName_event, meth_QGraphicsWidget_event, METH_VARARGS, doc_QGraphicsWidget_event},
    {sipName_focusInEvent, meth_QGraphicsWidget_focusInEvent, METH_VARARGS, doc_QGraphicsWidget_focusInEvent},
    {sipName_focusNextPrevChild, meth_QGraphicsWidget_focusNextPrevChild, METH_VARARGS, doc_QGraphicsWidget_focusNextPrevChild},
    {sipName_focusOutEvent, meth_QGraphicsWidget_focusOutEvent, METH_VARARGS, doc_QGraphicsWidget_focusOutEvent},
    {sipName_focusPolicy, meth_QGraphicsWidget_focusPolicy, METH_VARARGS, doc_QGraphicsWidget_focusPolicy},
    {sipName_focusWidget, meth_QGraphicsWidget_focusWidget, METH_VARARGS, doc_QGraphicsWidget_focusWidget},
    {sipName_font, meth_QGraphicsWidget_font, METH_VARARGS, doc_QGraphicsWidget_font},
    {sipName_getContentsMargins, meth_QGraphicsWidget_getContentsMargins, METH_VARARGS, doc_QGraphicsWidget_getContentsMargins},
    {sipName_getWindowFrameMargins, meth_QGraphicsWidget_getWindowFrameMargins, METH_VARARGS, doc_QGraphicsWidget_getWindowFrameMargins},
    {sipName_grabKeyboardEvent, meth_QGraphicsWidget_grabKeyboardEvent, METH_VARARGS, doc_QGraphicsWidget_grabKeyboardEvent},
    {sipName_grabMouseEvent, meth_QGraphicsWidget_grabMouseEvent, METH_VARARGS, doc_QGraphicsWidget_grabMouseEvent},
    {sipName_grabShortcut, SIP_MLMETH_CAST(meth_QGraphicsWidget_grabShortcut), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsWidget_grabShortcut},
    {sipName_hideEvent, meth_QGraphicsWidget_hideEvent, METH_VARARGS, doc_QGraphicsWidget_hideEvent},
    {sipName_hoverLeaveEvent, meth_QGraphicsWidget_hoverLeaveEvent, METH_VARARGS, doc_QGraphicsWidget_hoverLeaveEvent},
    {sipName_hoverMoveEvent, meth_QGraphicsWidget_hoverMoveEvent, METH_VARARGS, doc_QGraphicsWidget_hoverMoveEvent},
    {sipName_initStyleOption, meth_QGraphicsWidget_initStyleOption, METH_VARARGS, doc_QGraphicsWidget_initStyleOption},
    {sipName_insertAction, meth_QGraphicsWidget_insertAction, METH_VARARGS, doc_QGraphicsWidget_insertAction},
    {sipName_insertActions, meth_QGraphicsWidget_insertActions, METH_VARARGS, doc_QGraphicsWidget_insertActions},
    {sipName_isActiveWindow, meth_QGraphicsWidget_isActiveWindow, METH_VARARGS, doc_QGraphicsWidget_isActiveWindow},
    {sipName_itemChange, meth_QGraphicsWidget_itemChange, METH_VARARGS, doc_QGraphicsWidget_itemChange},
    {sipName_layout, meth_QGraphicsWidget_layout, METH_VARARGS, doc_QGraphicsWidget_layout},
    {sipName_layoutDirection, meth_QGraphicsWidget_layoutDirection, METH_VARARGS, doc_QGraphicsWidget_layoutDirection},
    {sipName_moveEvent, meth_QGraphicsWidget_moveEvent, METH_VARARGS, doc_QGraphicsWidget_moveEvent},
    {sipName_paint, SIP_MLMETH_CAST(meth_QGraphicsWidget_paint), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsWidget_paint},
    {sipName_paintWindowFrame, SIP_MLMETH_CAST(meth_QGraphicsWidget_paintWindowFrame), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsWidget_paintWindowFrame},
    {sipName_palette, meth_QGraphicsWidget_palette, METH_VARARGS, doc_QGraphicsWidget_palette},
    {sipName_polishEvent, meth_QGraphicsWidget_polishEvent, METH_VARARGS, doc_QGraphicsWidget_polishEvent},
    {sipName_rect, meth_QGraphicsWidget_rect, METH_VARARGS, doc_QGraphicsWidget_rect},
    {sipName_releaseShortcut, meth_QGraphicsWidget_releaseShortcut, METH_VARARGS, doc_QGraphicsWidget_releaseShortcut},
    {sipName_removeAction, meth_QGraphicsWidget_removeAction, METH_VARARGS, doc_QGraphicsWidget_removeAction},
    {sipName_resize, meth_QGraphicsWidget_resize, METH_VARARGS, doc_QGraphicsWidget_resize},
    {sipName_resizeEvent, meth_QGraphicsWidget_resizeEvent, METH_VARARGS, doc_QGraphicsWidget_resizeEvent},
    {sipName_sceneEvent, meth_QGraphicsWidget_sceneEvent, METH_VARARGS, doc_QGraphicsWidget_sceneEvent},
    {sipName_setAttribute, SIP_MLMETH_CAST(meth_QGraphicsWidget_setAttribute), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsWidget_setAttribute},
    {sipName_setAutoFillBackground, meth_QGraphicsWidget_setAutoFillBackground, METH_VARARGS, doc_QGraphicsWidget_setAutoFillBackground},
    {sipName_setContentsMargins, meth_QGraphicsWidget_setContentsMargins, METH_VARARGS, doc_QGraphicsWidget_setContentsMargins},
    {sipName_setFocusPolicy, meth_QGraphicsWidget_setFocusPolicy, METH_VARARGS, doc_QGraphicsWidget_setFocusPolicy},
    {sipName_setFont, meth_QGraphicsWidget_setFont, METH_VARARGS, doc_QGraphicsWidget_setFont},
    {sipName_setGeometry, meth_QGraphicsWidget_setGeometry, METH_VARARGS, doc_QGraphicsWidget_setGeometry},
    {sipName_setLayout, meth_QGraphicsWidget_setLayout, METH_VARARGS, doc_QGraphicsWidget_setLayout},
    {sipName_setLayoutDirection, meth_QGraphicsWidget_setLayoutDirection, METH_VARARGS, doc_QGraphicsWidget_setLayoutDirection},
    {sipName_setPalette, meth_QGraphicsWidget_setPalette, METH_VARARGS, doc_QGraphicsWidget_setPalette},
    {sipName_setShortcutAutoRepeat, SIP_MLMETH_CAST(meth_QGraphicsWidget_setShortcutAutoRepeat), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsWidget_setShortcutAutoRepeat},
    {sipName_setShortcutEnabled, SIP_MLMETH_CAST(meth_QGraphicsWidget_setShortcutEnabled), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsWidget_setShortcutEnabled},
    {sipName_setStyle, meth_QGraphicsWidget_setStyle, METH_VARARGS, doc_QGraphicsWidget_setStyle},
    {sipName_setTabOrder, meth_QGraphicsWidget_setTabOrder, METH_VARARGS, doc_QGraphicsWidget_setTabOrder},
    {sipName_setWindowFlags, meth_QGraphicsWidget_setWindowFlags, METH_VARARGS, doc_QGraphicsWidget_setWindowFlags},
    {sipName_setWindowFrameMargins, meth_QGraphicsWidget_setWindowFrameMargins, METH_VARARGS, doc_QGraphicsWidget_setWindowFrameMargins},
    {sipName_setWindowTitle, meth_QGraphicsWidget_setWindowTitle, METH_VARARGS, doc_QGraphicsWidget_setWindowTitle},
    {sipName_shape, meth_QGraphicsWidget_shape, METH_VARARGS, doc_QGraphicsWidget_shape},
    {sipName_showEvent, meth_QGraphicsWidget_showEvent, METH_VARARGS, doc_QGraphicsWidget_showEvent},
    {sipName_size, meth_QGraphicsWidget_size, METH_VARARGS, doc_QGraphicsWidget_size},
    {sipName_sizeHint, SIP_MLMETH_CAST(meth_QGraphicsWidget_sizeHint), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsWidget_sizeHint},
    {sipName_style, meth_QGraphicsWidget_style, METH_VARARGS, doc_QGraphicsWidget_style},
    {sipName_testAttribute, meth_QGraphicsWidget_testAttribute, METH_VARARGS, doc_QGraphicsWidget_testAttribute},
    {sipName_type, meth_QGraphicsWidget_type, METH_VARARGS, doc_QGraphicsWidget_type},
    {sipName_ungrabKeyboardEvent, meth_QGraphicsWidget_ungrabKeyboardEvent, METH_VARARGS, doc_QGraphicsWidget_ungrabKeyboardEvent},
    {sipName_ungrabMouseEvent, meth_QGraphicsWidget_ungrabMouseEvent, METH_VARARGS, doc_QGraphicsWidget_ungrabMouseEvent},
    {sipName_unsetLayoutDirection, meth_QGraphicsWidget_unsetLayoutDirection, METH_VARARGS, doc_QGraphicsWidget_unsetLayoutDirection},
    {sipName_unsetWindowFrameMargins, meth_QGraphicsWidget_unsetWindowFrameMargins, METH_VARARGS, doc_QGraphicsWidget_unsetWindowFrameMargins},
    {sipName_updateGeometry, meth_QGraphicsWidget_updateGeometry, METH_VARARGS, doc_QGraphicsWidget_updateGeometry},
    {sipName_windowFlags, meth_QGraphicsWidget_windowFlags, METH_VARARGS, doc_QGraphicsWidget_windowFlags},
    {sipName_windowFrameEvent, meth_QGraphicsWidget_windowFrameEvent, METH_VARARGS, doc_QGraphicsWidget_windowFrameEvent},
    {sipName_windowFrameGeometry, meth_QGraphicsWidget_windowFrameGeometry, METH_VARARGS, doc_QGraphicsWidget_windowFrameGeometry},
    {sipName_windowFrameRect, meth_QGraphicsWidget_windowFrameRect, METH_VARARGS, doc_QGraphicsWidget_windowFrameRect},
    {sipName_windowFrameSectionAt, meth_QGraphicsWidget_windowFrameSectionAt, METH_VARARGS, doc_QGraphicsWidget_windowFrameSectionAt},
    {sipName_windowTitle, meth_QGraphicsWidget_windowTitle, METH_VARARGS, doc_QGraphicsWidget_windowTitle},
    {sipName_windowType, meth_QGraphicsWidget_windowType, METH_VARARGS, doc_QGraphicsWidget_windowType}
};

PyDoc_STRVAR(doc_QGraphicsWidget, "\1QGraphicsWidget(parent: QGraphicsItem = None, flags: Union[Qt.WindowFlags, Qt.WindowType] = Qt.WindowFlags())");


/* Define this type's signals. */
static const pyqt5QtSignal signals_QGraphicsWidget[] = {
    {"geometryChanged()", "\1geometryChanged(self)", SIP_NULLPTR, SIP_NULLPTR},
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
};


static pyqt5ClassPluginDef plugin_QGraphicsWidget = {
    & ::QGraphicsWidget::staticMetaObject,
    0,
    signals_QGraphicsWidget,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtWidgets_QGraphicsWidget = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsWidget,
        SIP_NULLPTR,
        &plugin_QGraphicsWidget
    },
    {
        sipNameNr_QGraphicsWidget,
        {0, 0, 1},
        77, methods_QGraphicsWidget,
        0, SIP_NULLPTR,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QGraphicsWidget,
    -1,
    -1,
    supers_QGraphicsWidget,
    SIP_NULLPTR,
    init_type_QGraphicsWidget,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_QGraphicsWidget,
    SIP_NULLPTR,
    array_QGraphicsWidget,
    SIP_NULLPTR,
    release_QGraphicsWidget,
    cast_QGraphicsWidget,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
