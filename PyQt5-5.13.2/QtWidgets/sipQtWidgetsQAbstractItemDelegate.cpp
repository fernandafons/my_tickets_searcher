/*
 * Interface wrapper code.
 *
 * Generated by SIP 5.3.0
 *
 * Copyright (c) 2019 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qabstractitemdelegate.sip"
#include <qabstractitemdelegate.h>
#line 29 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"

#line 28 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 33 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 26 "sip/QtCore/qabstractitemmodel.sip"
#include <qabstractitemmodel.h>
#line 36 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 28 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 39 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 621 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 42 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qabstractitemview.sip"
#include <qabstractitemview.h>
#line 45 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 560 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qstyleoption.sip"
#include <qstyleoption.h>
#line 48 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 51 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 111 "sip/QtCore/qabstractitemmodel.sip"
#include <qabstractitemmodel.h>
#line 54 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 26 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 57 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 26 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 60 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 146 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 65 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 26 "sip/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 68 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 247 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 71 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 235 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 74 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 77 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 26 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 80 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 83 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 30 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 86 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 89 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 92 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 95 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 98 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 26 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 101 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 26 "sip/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 104 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 107 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQAbstractItemDelegate.cpp"


class sipQAbstractItemDelegate : public  ::QAbstractItemDelegate
{
public:
    sipQAbstractItemDelegate( ::QObject*);
    virtual ~sipQAbstractItemDelegate();

    int qt_metacall(QMetaObject::Call, int, void **) SIP_OVERRIDE;
    void *qt_metacast(const char *) SIP_OVERRIDE;
    const QMetaObject *metaObject() const SIP_OVERRIDE;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    bool helpEvent( ::QHelpEvent*, ::QAbstractItemView*,const  ::QStyleOptionViewItem&,const  ::QModelIndex&) SIP_OVERRIDE;
    bool editorEvent( ::QEvent*, ::QAbstractItemModel*,const  ::QStyleOptionViewItem&,const  ::QModelIndex&) SIP_OVERRIDE;
    void destroyEditor( ::QWidget*,const  ::QModelIndex&) const SIP_OVERRIDE;
    void updateEditorGeometry( ::QWidget*,const  ::QStyleOptionViewItem&,const  ::QModelIndex&) const SIP_OVERRIDE;
    void setModelData( ::QWidget*, ::QAbstractItemModel*,const  ::QModelIndex&) const SIP_OVERRIDE;
    void setEditorData( ::QWidget*,const  ::QModelIndex&) const SIP_OVERRIDE;
     ::QWidget* createEditor( ::QWidget*,const  ::QStyleOptionViewItem&,const  ::QModelIndex&) const SIP_OVERRIDE;
     ::QSize sizeHint(const  ::QStyleOptionViewItem&,const  ::QModelIndex&) const SIP_OVERRIDE;
    void paint( ::QPainter*,const  ::QStyleOptionViewItem&,const  ::QModelIndex&) const SIP_OVERRIDE;
    bool event( ::QEvent*) SIP_OVERRIDE;
    bool eventFilter( ::QObject*, ::QEvent*) SIP_OVERRIDE;
    void timerEvent( ::QTimerEvent*) SIP_OVERRIDE;
    void childEvent( ::QChildEvent*) SIP_OVERRIDE;
    void customEvent( ::QEvent*) SIP_OVERRIDE;
    void connectNotify(const  ::QMetaMethod&) SIP_OVERRIDE;
    void disconnectNotify(const  ::QMetaMethod&) SIP_OVERRIDE;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQAbstractItemDelegate(const sipQAbstractItemDelegate &);
    sipQAbstractItemDelegate &operator = (const sipQAbstractItemDelegate &);

    char sipPyMethods[16];
};

sipQAbstractItemDelegate::sipQAbstractItemDelegate( ::QObject*a0):  ::QAbstractItemDelegate(a0), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQAbstractItemDelegate::~sipQAbstractItemDelegate()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

const QMetaObject *sipQAbstractItemDelegate::metaObject() const
{
    if (sipGetInterpreter())
        return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_QtWidgets_qt_metaobject(sipPySelf,sipType_QAbstractItemDelegate);

    return  ::QAbstractItemDelegate::metaObject();
}

int sipQAbstractItemDelegate::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id =  ::QAbstractItemDelegate::qt_metacall(_c,_id,_a);

    if (_id >= 0)
    {
        SIP_BLOCK_THREADS
        _id = sip_QtWidgets_qt_metacall(sipPySelf,sipType_QAbstractItemDelegate,_c,_id,_a);
        SIP_UNBLOCK_THREADS
    }

    return _id;
}

void *sipQAbstractItemDelegate::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_QtWidgets_qt_metacast(sipPySelf, sipType_QAbstractItemDelegate, _clname, &sipCpp) ? sipCpp :  ::QAbstractItemDelegate::qt_metacast(_clname));
}

bool sipQAbstractItemDelegate::helpEvent( ::QHelpEvent*a0, ::QAbstractItemView*a1,const  ::QStyleOptionViewItem& a2,const  ::QModelIndex& a3)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[0], &sipPySelf, SIP_NULLPTR, sipName_helpEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[0], sipPySelf, SIP_NULLPTR, sipName_helpEvent);
#endif

    if (!sipMeth)
        return  ::QAbstractItemDelegate::helpEvent(a0,a1,a2,a3);

    extern bool sipVH_QtWidgets_45(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QHelpEvent*, ::QAbstractItemView*,const  ::QStyleOptionViewItem&,const  ::QModelIndex&);

    return sipVH_QtWidgets_45(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2, a3);
}

bool sipQAbstractItemDelegate::editorEvent( ::QEvent*a0, ::QAbstractItemModel*a1,const  ::QStyleOptionViewItem& a2,const  ::QModelIndex& a3)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[1], &sipPySelf, SIP_NULLPTR, sipName_editorEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[1], sipPySelf, SIP_NULLPTR, sipName_editorEvent);
#endif

    if (!sipMeth)
        return  ::QAbstractItemDelegate::editorEvent(a0,a1,a2,a3);

    extern bool sipVH_QtWidgets_44(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*, ::QAbstractItemModel*,const  ::QStyleOptionViewItem&,const  ::QModelIndex&);

    return sipVH_QtWidgets_44(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2, a3);
}

void sipQAbstractItemDelegate::destroyEditor( ::QWidget*a0,const  ::QModelIndex& a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[2]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_destroyEditor);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[2]), sipPySelf, SIP_NULLPTR, sipName_destroyEditor);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemDelegate::destroyEditor(a0,a1);
        return;
    }

    extern void sipVH_QtWidgets_41(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QWidget*,const  ::QModelIndex&);

    sipVH_QtWidgets_41(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQAbstractItemDelegate::updateEditorGeometry( ::QWidget*a0,const  ::QStyleOptionViewItem& a1,const  ::QModelIndex& a2) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[3]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_updateEditorGeometry);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[3]), sipPySelf, SIP_NULLPTR, sipName_updateEditorGeometry);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemDelegate::updateEditorGeometry(a0,a1,a2);
        return;
    }

    extern void sipVH_QtWidgets_43(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QWidget*,const  ::QStyleOptionViewItem&,const  ::QModelIndex&);

    sipVH_QtWidgets_43(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

void sipQAbstractItemDelegate::setModelData( ::QWidget*a0, ::QAbstractItemModel*a1,const  ::QModelIndex& a2) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[4]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_setModelData);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[4]), sipPySelf, SIP_NULLPTR, sipName_setModelData);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemDelegate::setModelData(a0,a1,a2);
        return;
    }

    extern void sipVH_QtWidgets_42(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QWidget*, ::QAbstractItemModel*,const  ::QModelIndex&);

    sipVH_QtWidgets_42(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

void sipQAbstractItemDelegate::setEditorData( ::QWidget*a0,const  ::QModelIndex& a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[5]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_setEditorData);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[5]), sipPySelf, SIP_NULLPTR, sipName_setEditorData);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemDelegate::setEditorData(a0,a1);
        return;
    }

    extern void sipVH_QtWidgets_41(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QWidget*,const  ::QModelIndex&);

    sipVH_QtWidgets_41(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

 ::QWidget* sipQAbstractItemDelegate::createEditor( ::QWidget*a0,const  ::QStyleOptionViewItem& a1,const  ::QModelIndex& a2) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[6]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_createEditor);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[6]), sipPySelf, SIP_NULLPTR, sipName_createEditor);
#endif

    if (!sipMeth)
        return  ::QAbstractItemDelegate::createEditor(a0,a1,a2);

    extern  ::QWidget* sipVH_QtWidgets_40(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QWidget*,const  ::QStyleOptionViewItem&,const  ::QModelIndex&);

    return sipVH_QtWidgets_40(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

 ::QSize sipQAbstractItemDelegate::sizeHint(const  ::QStyleOptionViewItem& a0,const  ::QModelIndex& a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[7]), const_cast<sipSimpleWrapper **>(&sipPySelf), sipName_QAbstractItemDelegate, sipName_sizeHint);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[7]), sipPySelf, sipName_QAbstractItemDelegate, sipName_sizeHint);
#endif

    if (!sipMeth)
        return  ::QSize();

    extern  ::QSize sipVH_QtWidgets_39(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QStyleOptionViewItem&,const  ::QModelIndex&);

    return sipVH_QtWidgets_39(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQAbstractItemDelegate::paint( ::QPainter*a0,const  ::QStyleOptionViewItem& a1,const  ::QModelIndex& a2) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[8]), const_cast<sipSimpleWrapper **>(&sipPySelf), sipName_QAbstractItemDelegate, sipName_paint);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[8]), sipPySelf, sipName_QAbstractItemDelegate, sipName_paint);
#endif

    if (!sipMeth)
        return;

    extern void sipVH_QtWidgets_38(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPainter*,const  ::QStyleOptionViewItem&,const  ::QModelIndex&);

    sipVH_QtWidgets_38(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

bool sipQAbstractItemDelegate::event( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[9], &sipPySelf, SIP_NULLPTR, sipName_event);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[9], sipPySelf, SIP_NULLPTR, sipName_event);
#endif

    if (!sipMeth)
        return  ::QAbstractItemDelegate::event(a0);

    extern bool sipVH_QtWidgets_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtWidgets_5(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQAbstractItemDelegate::eventFilter( ::QObject*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[10], &sipPySelf, SIP_NULLPTR, sipName_eventFilter);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[10], sipPySelf, SIP_NULLPTR, sipName_eventFilter);
#endif

    if (!sipMeth)
        return  ::QAbstractItemDelegate::eventFilter(a0,a1);

    extern bool sipVH_QtWidgets_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QObject*, ::QEvent*);

    return sipVH_QtWidgets_4(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQAbstractItemDelegate::timerEvent( ::QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[11], &sipPySelf, SIP_NULLPTR, sipName_timerEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[11], sipPySelf, SIP_NULLPTR, sipName_timerEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemDelegate::timerEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTimerEvent*);

    sipVH_QtWidgets_3(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemDelegate::childEvent( ::QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[12], &sipPySelf, SIP_NULLPTR, sipName_childEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[12], sipPySelf, SIP_NULLPTR, sipName_childEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemDelegate::childEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_2(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QChildEvent*);

    sipVH_QtWidgets_2(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemDelegate::customEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[13], &sipPySelf, SIP_NULLPTR, sipName_customEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[13], sipPySelf, SIP_NULLPTR, sipName_customEvent);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemDelegate::customEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtWidgets_1(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemDelegate::connectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[14], &sipPySelf, SIP_NULLPTR, sipName_connectNotify);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[14], sipPySelf, SIP_NULLPTR, sipName_connectNotify);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemDelegate::connectNotify(a0);
        return;
    }

    extern void sipVH_QtWidgets_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtWidgets_0(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractItemDelegate::disconnectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[15], &sipPySelf, SIP_NULLPTR, sipName_disconnectNotify);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[15], sipPySelf, SIP_NULLPTR, sipName_disconnectNotify);
#endif

    if (!sipMeth)
    {
         ::QAbstractItemDelegate::disconnectNotify(a0);
        return;
    }

    extern void sipVH_QtWidgets_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtWidgets_0(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QAbstractItemDelegate_paint, "paint(self, QPainter, QStyleOptionViewItem, QModelIndex)");

extern "C" {static PyObject *meth_QAbstractItemDelegate_paint(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemDelegate_paint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    PyObject *sipOrigSelf = sipSelf;

    {
         ::QPainter* a0;
        const  ::QStyleOptionViewItem* a1;
        const  ::QModelIndex* a2;
        const  ::QAbstractItemDelegate *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9J9", &sipSelf, sipType_QAbstractItemDelegate, &sipCpp, sipType_QPainter, &a0, sipType_QStyleOptionViewItem, &a1, sipType_QModelIndex, &a2))
        {
            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QAbstractItemDelegate, sipName_paint);
                return SIP_NULLPTR;
            }

            sipCpp->paint(a0,*a1,*a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemDelegate, sipName_paint, doc_QAbstractItemDelegate_paint);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemDelegate_sizeHint, "sizeHint(self, QStyleOptionViewItem, QModelIndex) -> QSize");

extern "C" {static PyObject *meth_QAbstractItemDelegate_sizeHint(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemDelegate_sizeHint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    PyObject *sipOrigSelf = sipSelf;

    {
        const  ::QStyleOptionViewItem* a0;
        const  ::QModelIndex* a1;
        const  ::QAbstractItemDelegate *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9J9", &sipSelf, sipType_QAbstractItemDelegate, &sipCpp, sipType_QStyleOptionViewItem, &a0, sipType_QModelIndex, &a1))
        {
             ::QSize*sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QAbstractItemDelegate, sipName_sizeHint);
                return SIP_NULLPTR;
            }

            sipRes = new  ::QSize(sipCpp->sizeHint(*a0,*a1));

            return sipConvertFromNewType(sipRes,sipType_QSize,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemDelegate, sipName_sizeHint, doc_QAbstractItemDelegate_sizeHint);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemDelegate_createEditor, "createEditor(self, QWidget, QStyleOptionViewItem, QModelIndex) -> QWidget");

extern "C" {static PyObject *meth_QAbstractItemDelegate_createEditor(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemDelegate_createEditor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QWidget* a0;
        const  ::QStyleOptionViewItem* a1;
        const  ::QModelIndex* a2;
        sipWrapper *sipOwner = SIP_NULLPTR;
        const  ::QAbstractItemDelegate *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJHJ9J9", &sipSelf, sipType_QAbstractItemDelegate, &sipCpp, sipType_QWidget, &a0, &sipOwner, sipType_QStyleOptionViewItem, &a1, sipType_QModelIndex, &a2))
        {
             ::QWidget*sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QAbstractItemDelegate::createEditor(a0,*a1,*a2) : sipCpp->createEditor(a0,*a1,*a2));

            return sipConvertFromNewType(sipRes,sipType_QWidget,(PyObject *)sipOwner);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemDelegate, sipName_createEditor, doc_QAbstractItemDelegate_createEditor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemDelegate_setEditorData, "setEditorData(self, QWidget, QModelIndex)");

extern "C" {static PyObject *meth_QAbstractItemDelegate_setEditorData(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemDelegate_setEditorData(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QWidget* a0;
        const  ::QModelIndex* a1;
        const  ::QAbstractItemDelegate *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QAbstractItemDelegate, &sipCpp, sipType_QWidget, &a0, sipType_QModelIndex, &a1))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemDelegate::setEditorData(a0,*a1) : sipCpp->setEditorData(a0,*a1));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemDelegate, sipName_setEditorData, doc_QAbstractItemDelegate_setEditorData);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemDelegate_setModelData, "setModelData(self, QWidget, QAbstractItemModel, QModelIndex)");

extern "C" {static PyObject *meth_QAbstractItemDelegate_setModelData(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemDelegate_setModelData(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QWidget* a0;
         ::QAbstractItemModel* a1;
        PyObject *a1Keep;
        const  ::QModelIndex* a2;
        const  ::QAbstractItemDelegate *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8@J8J9", &sipSelf, sipType_QAbstractItemDelegate, &sipCpp, sipType_QWidget, &a0, &a1Keep, sipType_QAbstractItemModel, &a1, sipType_QModelIndex, &a2))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemDelegate::setModelData(a0,a1,*a2) : sipCpp->setModelData(a0,a1,*a2));

            sipKeepReference(sipSelf, -1, a1Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemDelegate, sipName_setModelData, doc_QAbstractItemDelegate_setModelData);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemDelegate_updateEditorGeometry, "updateEditorGeometry(self, QWidget, QStyleOptionViewItem, QModelIndex)");

extern "C" {static PyObject *meth_QAbstractItemDelegate_updateEditorGeometry(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemDelegate_updateEditorGeometry(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QWidget* a0;
        const  ::QStyleOptionViewItem* a1;
        const  ::QModelIndex* a2;
        const  ::QAbstractItemDelegate *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9J9", &sipSelf, sipType_QAbstractItemDelegate, &sipCpp, sipType_QWidget, &a0, sipType_QStyleOptionViewItem, &a1, sipType_QModelIndex, &a2))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemDelegate::updateEditorGeometry(a0,*a1,*a2) : sipCpp->updateEditorGeometry(a0,*a1,*a2));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemDelegate, sipName_updateEditorGeometry, doc_QAbstractItemDelegate_updateEditorGeometry);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemDelegate_destroyEditor, "destroyEditor(self, QWidget, QModelIndex)");

extern "C" {static PyObject *meth_QAbstractItemDelegate_destroyEditor(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemDelegate_destroyEditor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QWidget* a0;
        const  ::QModelIndex* a1;
        const  ::QAbstractItemDelegate *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QAbstractItemDelegate, &sipCpp, sipType_QWidget, &a0, sipType_QModelIndex, &a1))
        {
            (sipSelfWasArg ? sipCpp-> ::QAbstractItemDelegate::destroyEditor(a0,*a1) : sipCpp->destroyEditor(a0,*a1));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemDelegate, sipName_destroyEditor, doc_QAbstractItemDelegate_destroyEditor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemDelegate_editorEvent, "editorEvent(self, QEvent, QAbstractItemModel, QStyleOptionViewItem, QModelIndex) -> bool");

extern "C" {static PyObject *meth_QAbstractItemDelegate_editorEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemDelegate_editorEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
         ::QAbstractItemModel* a1;
        const  ::QStyleOptionViewItem* a2;
        const  ::QModelIndex* a3;
         ::QAbstractItemDelegate *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J8J9J9", &sipSelf, sipType_QAbstractItemDelegate, &sipCpp, sipType_QEvent, &a0, sipType_QAbstractItemModel, &a1, sipType_QStyleOptionViewItem, &a2, sipType_QModelIndex, &a3))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QAbstractItemDelegate::editorEvent(a0,a1,*a2,*a3) : sipCpp->editorEvent(a0,a1,*a2,*a3));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemDelegate, sipName_editorEvent, doc_QAbstractItemDelegate_editorEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QAbstractItemDelegate_helpEvent, "helpEvent(self, QHelpEvent, QAbstractItemView, QStyleOptionViewItem, QModelIndex) -> bool");

extern "C" {static PyObject *meth_QAbstractItemDelegate_helpEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractItemDelegate_helpEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QHelpEvent* a0;
         ::QAbstractItemView* a1;
        const  ::QStyleOptionViewItem* a2;
        const  ::QModelIndex* a3;
         ::QAbstractItemDelegate *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J8J9J9", &sipSelf, sipType_QAbstractItemDelegate, &sipCpp, sipType_QHelpEvent, &a0, sipType_QAbstractItemView, &a1, sipType_QStyleOptionViewItem, &a2, sipType_QModelIndex, &a3))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QAbstractItemDelegate::helpEvent(a0,a1,*a2,*a3) : sipCpp->helpEvent(a0,a1,*a2,*a3));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemDelegate, sipName_helpEvent, doc_QAbstractItemDelegate_helpEvent);

    return SIP_NULLPTR;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QAbstractItemDelegate(void *, const sipTypeDef *);}
static void *cast_QAbstractItemDelegate(void *sipCppV, const sipTypeDef *targetType)
{
     ::QAbstractItemDelegate *sipCpp = reinterpret_cast< ::QAbstractItemDelegate *>(sipCppV);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QAbstractItemDelegate(void *, int);}
static void release_QAbstractItemDelegate(void *sipCppV, int)
{
     ::QAbstractItemDelegate *sipCpp = reinterpret_cast< ::QAbstractItemDelegate *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QAbstractItemDelegate(sipSimpleWrapper *);}
static void dealloc_QAbstractItemDelegate(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQAbstractItemDelegate *>(sipGetAddress(sipSelf))->sipPySelf = SIP_NULLPTR;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QAbstractItemDelegate(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QAbstractItemDelegate(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QAbstractItemDelegate(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQAbstractItemDelegate *sipCpp = SIP_NULLPTR;

    {
         ::QObject* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QObject, &a0, sipOwner))
        {
            sipCpp = new sipQAbstractItemDelegate(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QAbstractItemDelegate[] = {{32, 0, 1}};


static PyMethodDef methods_QAbstractItemDelegate[] = {
    {sipName_createEditor, meth_QAbstractItemDelegate_createEditor, METH_VARARGS, doc_QAbstractItemDelegate_createEditor},
    {sipName_destroyEditor, meth_QAbstractItemDelegate_destroyEditor, METH_VARARGS, doc_QAbstractItemDelegate_destroyEditor},
    {sipName_editorEvent, meth_QAbstractItemDelegate_editorEvent, METH_VARARGS, doc_QAbstractItemDelegate_editorEvent},
    {sipName_helpEvent, meth_QAbstractItemDelegate_helpEvent, METH_VARARGS, doc_QAbstractItemDelegate_helpEvent},
    {sipName_paint, meth_QAbstractItemDelegate_paint, METH_VARARGS, doc_QAbstractItemDelegate_paint},
    {sipName_setEditorData, meth_QAbstractItemDelegate_setEditorData, METH_VARARGS, doc_QAbstractItemDelegate_setEditorData},
    {sipName_setModelData, meth_QAbstractItemDelegate_setModelData, METH_VARARGS, doc_QAbstractItemDelegate_setModelData},
    {sipName_sizeHint, meth_QAbstractItemDelegate_sizeHint, METH_VARARGS, doc_QAbstractItemDelegate_sizeHint},
    {sipName_updateEditorGeometry, meth_QAbstractItemDelegate_updateEditorGeometry, METH_VARARGS, doc_QAbstractItemDelegate_updateEditorGeometry}
};

static sipEnumMemberDef enummembers_QAbstractItemDelegate[] = {
    {sipName_EditNextItem, static_cast<int>( ::QAbstractItemDelegate::EditNextItem), 3},
    {sipName_EditPreviousItem, static_cast<int>( ::QAbstractItemDelegate::EditPreviousItem), 3},
    {sipName_NoHint, static_cast<int>( ::QAbstractItemDelegate::NoHint), 3},
    {sipName_RevertModelCache, static_cast<int>( ::QAbstractItemDelegate::RevertModelCache), 3},
    {sipName_SubmitModelCache, static_cast<int>( ::QAbstractItemDelegate::SubmitModelCache), 3},
};

PyDoc_STRVAR(doc_QAbstractItemDelegate, "\1QAbstractItemDelegate(parent: QObject = None)");


extern "C" {static int emit_QAbstractItemDelegate_closeEditor(void *, PyObject *);}

static int emit_QAbstractItemDelegate_closeEditor(void *sipCppV, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    QAbstractItemDelegate *sipCpp = reinterpret_cast<QAbstractItemDelegate *>(sipCppV);

    {
         ::QWidget* a0;
         ::QAbstractItemDelegate::EndEditHint a1 = QAbstractItemDelegate::NoHint;

        if (sipParseArgs(&sipParseErr, sipArgs, "J8|E", sipType_QWidget, &a0, sipType_QAbstractItemDelegate_EndEditHint, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->closeEditor(a0,a1);
            Py_END_ALLOW_THREADS


            return 0;
        }
    }

    sipNoMethod(sipParseErr, sipName_QAbstractItemDelegate, sipName_closeEditor, SIP_NULLPTR);

    return -1;
}


/* Define this type's signals. */
static const pyqt5QtSignal signals_QAbstractItemDelegate[] = {
    {"sizeHintChanged(QModelIndex)", "\1sizeHintChanged(self, QModelIndex)", SIP_NULLPTR, SIP_NULLPTR},
    {"closeEditor(QWidget*,QAbstractItemDelegate::EndEditHint)", "\1closeEditor(self, QWidget, hint: QAbstractItemDelegate.EndEditHint = QAbstractItemDelegate.NoHint)", SIP_NULLPTR, emit_QAbstractItemDelegate_closeEditor},
    {"commitData(QWidget*)", "\1commitData(self, QWidget)", SIP_NULLPTR, SIP_NULLPTR},
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
};


static pyqt5ClassPluginDef plugin_QAbstractItemDelegate = {
    & ::QAbstractItemDelegate::staticMetaObject,
    0,
    signals_QAbstractItemDelegate,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtWidgets_QAbstractItemDelegate = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QAbstractItemDelegate,
        SIP_NULLPTR,
        &plugin_QAbstractItemDelegate
    },
    {
        sipNameNr_QAbstractItemDelegate,
        {0, 0, 1},
        9, methods_QAbstractItemDelegate,
        5, enummembers_QAbstractItemDelegate,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QAbstractItemDelegate,
    -1,
    -1,
    supers_QAbstractItemDelegate,
    SIP_NULLPTR,
    init_type_QAbstractItemDelegate,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_QAbstractItemDelegate,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    release_QAbstractItemDelegate,
    cast_QAbstractItemDelegate,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
