/*
 * Interface wrapper code.
 *
 * Generated by SIP 5.3.0
 *
 * Copyright (c) 2019 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 29 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"

#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 33 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 95 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 36 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 39 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicstransform.sip"
#include <qgraphicstransform.h>
#line 42 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 45 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 607 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 48 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 164 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 51 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 26 "sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 54 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 30 "sip/QtGui/qtransform.sip"
#include <qtransform.h>
#line 57 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 26 "sip/QtGui/qregion.sip"
#include <qregion.h>
#line 60 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 26 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 63 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 66 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicswidget.sip"
#include <qgraphicswidget.h>
#line 69 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 119 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 72 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 75 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 88 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 78 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 354 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 81 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 26 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 84 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 87 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 500 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 90 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 164 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 93 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 375 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 96 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 199 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 99 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 139 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 102 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 329 "sip/QtGui/qpolygon.sip"
#include <qpolygon.h>
#line 105 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 26 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 108 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 1012 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qstyleoption.sip"
#include <qstyleoption.h>
#line 111 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 28 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 114 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 117 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 26 "sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 120 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 123 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 126 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 578 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 129 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"
#line 26 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtWidgets/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 132 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtWidgets/sipQtWidgetsQGraphicsItem.cpp"


class sipQGraphicsItem : public  ::QGraphicsItem
{
public:
    sipQGraphicsItem( ::QGraphicsItem*);
    virtual ~sipQGraphicsItem();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void wheelEvent( ::QGraphicsSceneWheelEvent*) SIP_OVERRIDE;
    bool sceneEventFilter( ::QGraphicsItem*, ::QEvent*) SIP_OVERRIDE;
    bool sceneEvent( ::QEvent*) SIP_OVERRIDE;
    void mouseReleaseEvent( ::QGraphicsSceneMouseEvent*) SIP_OVERRIDE;
    void mousePressEvent( ::QGraphicsSceneMouseEvent*) SIP_OVERRIDE;
    void mouseMoveEvent( ::QGraphicsSceneMouseEvent*) SIP_OVERRIDE;
    void mouseDoubleClickEvent( ::QGraphicsSceneMouseEvent*) SIP_OVERRIDE;
    void keyReleaseEvent( ::QKeyEvent*) SIP_OVERRIDE;
    void keyPressEvent( ::QKeyEvent*) SIP_OVERRIDE;
     ::QVariant itemChange( ::QGraphicsItem::GraphicsItemChange,const  ::QVariant&) SIP_OVERRIDE;
     ::QVariant inputMethodQuery( ::Qt::InputMethodQuery) const SIP_OVERRIDE;
    void inputMethodEvent( ::QInputMethodEvent*) SIP_OVERRIDE;
    void hoverMoveEvent( ::QGraphicsSceneHoverEvent*) SIP_OVERRIDE;
    void hoverLeaveEvent( ::QGraphicsSceneHoverEvent*) SIP_OVERRIDE;
    void hoverEnterEvent( ::QGraphicsSceneHoverEvent*) SIP_OVERRIDE;
    void focusOutEvent( ::QFocusEvent*) SIP_OVERRIDE;
    void focusInEvent( ::QFocusEvent*) SIP_OVERRIDE;
    void dropEvent( ::QGraphicsSceneDragDropEvent*) SIP_OVERRIDE;
    void dragMoveEvent( ::QGraphicsSceneDragDropEvent*) SIP_OVERRIDE;
    void dragLeaveEvent( ::QGraphicsSceneDragDropEvent*) SIP_OVERRIDE;
    void dragEnterEvent( ::QGraphicsSceneDragDropEvent*) SIP_OVERRIDE;
    void contextMenuEvent( ::QGraphicsSceneContextMenuEvent*) SIP_OVERRIDE;
    int type() const SIP_OVERRIDE;
    void paint( ::QPainter*,const  ::QStyleOptionGraphicsItem*, ::QWidget*) SIP_OVERRIDE;
     ::QPainterPath opaqueArea() const SIP_OVERRIDE;
    bool isObscuredBy(const  ::QGraphicsItem*) const SIP_OVERRIDE;
    bool collidesWithPath(const  ::QPainterPath&, ::Qt::ItemSelectionMode) const SIP_OVERRIDE;
    bool collidesWithItem(const  ::QGraphicsItem*, ::Qt::ItemSelectionMode) const SIP_OVERRIDE;
    bool contains(const  ::QPointF&) const SIP_OVERRIDE;
     ::QPainterPath shape() const SIP_OVERRIDE;
     ::QRectF boundingRect() const SIP_OVERRIDE;
    void advance(int) SIP_OVERRIDE;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsItem(const sipQGraphicsItem &);
    sipQGraphicsItem &operator = (const sipQGraphicsItem &);

    char sipPyMethods[32];
};

sipQGraphicsItem::sipQGraphicsItem( ::QGraphicsItem*a0):  ::QGraphicsItem(a0), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsItem::~sipQGraphicsItem()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

void sipQGraphicsItem::wheelEvent( ::QGraphicsSceneWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[0], &sipPySelf, SIP_NULLPTR, sipName_wheelEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[0], sipPySelf, SIP_NULLPTR, sipName_wheelEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsItem::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_157(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneWheelEvent*);

    sipVH_QtWidgets_157(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsItem::sceneEventFilter( ::QGraphicsItem*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[1], &sipPySelf, SIP_NULLPTR, sipName_sceneEventFilter);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[1], sipPySelf, SIP_NULLPTR, sipName_sceneEventFilter);
#endif

    if (!sipMeth)
        return  ::QGraphicsItem::sceneEventFilter(a0,a1);

    extern bool sipVH_QtWidgets_156(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsItem*, ::QEvent*);

    return sipVH_QtWidgets_156(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsItem::sceneEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[2], &sipPySelf, SIP_NULLPTR, sipName_sceneEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[2], sipPySelf, SIP_NULLPTR, sipName_sceneEvent);
#endif

    if (!sipMeth)
        return  ::QGraphicsItem::sceneEvent(a0);

    extern bool sipVH_QtWidgets_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtWidgets_5(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::mouseReleaseEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[3], &sipPySelf, SIP_NULLPTR, sipName_mouseReleaseEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[3], sipPySelf, SIP_NULLPTR, sipName_mouseReleaseEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsItem::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::mousePressEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[4], &sipPySelf, SIP_NULLPTR, sipName_mousePressEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[4], sipPySelf, SIP_NULLPTR, sipName_mousePressEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsItem::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::mouseMoveEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[5], &sipPySelf, SIP_NULLPTR, sipName_mouseMoveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[5], sipPySelf, SIP_NULLPTR, sipName_mouseMoveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsItem::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::mouseDoubleClickEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[6], &sipPySelf, SIP_NULLPTR, sipName_mouseDoubleClickEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[6], sipPySelf, SIP_NULLPTR, sipName_mouseDoubleClickEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsItem::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::keyReleaseEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[7], &sipPySelf, SIP_NULLPTR, sipName_keyReleaseEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[7], sipPySelf, SIP_NULLPTR, sipName_keyReleaseEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsItem::keyReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtWidgets_14(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::keyPressEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[8], &sipPySelf, SIP_NULLPTR, sipName_keyPressEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[8], sipPySelf, SIP_NULLPTR, sipName_keyPressEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsItem::keyPressEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtWidgets_14(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QVariant sipQGraphicsItem::itemChange( ::QGraphicsItem::GraphicsItemChange a0,const  ::QVariant& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[9], &sipPySelf, SIP_NULLPTR, sipName_itemChange);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[9], sipPySelf, SIP_NULLPTR, sipName_itemChange);
#endif

    if (!sipMeth)
        return  ::QGraphicsItem::itemChange(a0,a1);

    extern  ::QVariant sipVH_QtWidgets_154(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsItem::GraphicsItemChange,const  ::QVariant&);

    return sipVH_QtWidgets_154(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

 ::QVariant sipQGraphicsItem::inputMethodQuery( ::Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[10]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_inputMethodQuery);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[10]), sipPySelf, SIP_NULLPTR, sipName_inputMethodQuery);
#endif

    if (!sipMeth)
        return  ::QGraphicsItem::inputMethodQuery(a0);

    extern  ::QVariant sipVH_QtWidgets_30(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::Qt::InputMethodQuery);

    return sipVH_QtWidgets_30(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::inputMethodEvent( ::QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[11], &sipPySelf, SIP_NULLPTR, sipName_inputMethodEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[11], sipPySelf, SIP_NULLPTR, sipName_inputMethodEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsItem::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_29(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QInputMethodEvent*);

    sipVH_QtWidgets_29(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::hoverMoveEvent( ::QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[12], &sipPySelf, SIP_NULLPTR, sipName_hoverMoveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[12], sipPySelf, SIP_NULLPTR, sipName_hoverMoveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsItem::hoverMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_153(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_153(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::hoverLeaveEvent( ::QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[13], &sipPySelf, SIP_NULLPTR, sipName_hoverLeaveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[13], sipPySelf, SIP_NULLPTR, sipName_hoverLeaveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsItem::hoverLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_153(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_153(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::hoverEnterEvent( ::QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[14], &sipPySelf, SIP_NULLPTR, sipName_hoverEnterEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[14], sipPySelf, SIP_NULLPTR, sipName_hoverEnterEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsItem::hoverEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_153(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_153(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::focusOutEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[15], &sipPySelf, SIP_NULLPTR, sipName_focusOutEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[15], sipPySelf, SIP_NULLPTR, sipName_focusOutEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsItem::focusOutEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtWidgets_15(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::focusInEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[16], &sipPySelf, SIP_NULLPTR, sipName_focusInEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[16], sipPySelf, SIP_NULLPTR, sipName_focusInEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsItem::focusInEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtWidgets_15(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::dropEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[17], &sipPySelf, SIP_NULLPTR, sipName_dropEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[17], sipPySelf, SIP_NULLPTR, sipName_dropEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsItem::dropEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::dragMoveEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[18], &sipPySelf, SIP_NULLPTR, sipName_dragMoveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[18], sipPySelf, SIP_NULLPTR, sipName_dragMoveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsItem::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::dragLeaveEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[19], &sipPySelf, SIP_NULLPTR, sipName_dragLeaveEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[19], sipPySelf, SIP_NULLPTR, sipName_dragLeaveEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsItem::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::dragEnterEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[20], &sipPySelf, SIP_NULLPTR, sipName_dragEnterEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[20], sipPySelf, SIP_NULLPTR, sipName_dragEnterEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsItem::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::contextMenuEvent( ::QGraphicsSceneContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[21], &sipPySelf, SIP_NULLPTR, sipName_contextMenuEvent);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[21], sipPySelf, SIP_NULLPTR, sipName_contextMenuEvent);
#endif

    if (!sipMeth)
    {
         ::QGraphicsItem::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_151(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneContextMenuEvent*);

    sipVH_QtWidgets_151(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

int sipQGraphicsItem::type() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[22]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_type);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[22]), sipPySelf, SIP_NULLPTR, sipName_type);
#endif

    if (!sipMeth)
        return  ::QGraphicsItem::type();

    extern int sipVH_QtWidgets_8(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_8(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQGraphicsItem::paint( ::QPainter*a0,const  ::QStyleOptionGraphicsItem*a1, ::QWidget*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[23], &sipPySelf, sipName_QGraphicsItem, sipName_paint);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[23], sipPySelf, sipName_QGraphicsItem, sipName_paint);
#endif

    if (!sipMeth)
        return;

    extern void sipVH_QtWidgets_150(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPainter*,const  ::QStyleOptionGraphicsItem*, ::QWidget*);

    sipVH_QtWidgets_150(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

 ::QPainterPath sipQGraphicsItem::opaqueArea() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[24]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_opaqueArea);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[24]), sipPySelf, SIP_NULLPTR, sipName_opaqueArea);
#endif

    if (!sipMeth)
        return  ::QGraphicsItem::opaqueArea();

    extern  ::QPainterPath sipVH_QtWidgets_145(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_145(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

bool sipQGraphicsItem::isObscuredBy(const  ::QGraphicsItem*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[25]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_isObscuredBy);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[25]), sipPySelf, SIP_NULLPTR, sipName_isObscuredBy);
#endif

    if (!sipMeth)
        return  ::QGraphicsItem::isObscuredBy(a0);

    extern bool sipVH_QtWidgets_149(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QGraphicsItem*);

    return sipVH_QtWidgets_149(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsItem::collidesWithPath(const  ::QPainterPath& a0, ::Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[26]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_collidesWithPath);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[26]), sipPySelf, SIP_NULLPTR, sipName_collidesWithPath);
#endif

    if (!sipMeth)
        return  ::QGraphicsItem::collidesWithPath(a0,a1);

    extern bool sipVH_QtWidgets_148(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QPainterPath&, ::Qt::ItemSelectionMode);

    return sipVH_QtWidgets_148(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsItem::collidesWithItem(const  ::QGraphicsItem*a0, ::Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[27]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_collidesWithItem);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[27]), sipPySelf, SIP_NULLPTR, sipName_collidesWithItem);
#endif

    if (!sipMeth)
        return  ::QGraphicsItem::collidesWithItem(a0,a1);

    extern bool sipVH_QtWidgets_147(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QGraphicsItem*, ::Qt::ItemSelectionMode);

    return sipVH_QtWidgets_147(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsItem::contains(const  ::QPointF& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[28]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_contains);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[28]), sipPySelf, SIP_NULLPTR, sipName_contains);
#endif

    if (!sipMeth)
        return  ::QGraphicsItem::contains(a0);

    extern bool sipVH_QtWidgets_146(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QPointF&);

    return sipVH_QtWidgets_146(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QPainterPath sipQGraphicsItem::shape() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[29]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_shape);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[29]), sipPySelf, SIP_NULLPTR, sipName_shape);
#endif

    if (!sipMeth)
        return  ::QGraphicsItem::shape();

    extern  ::QPainterPath sipVH_QtWidgets_145(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_145(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

 ::QRectF sipQGraphicsItem::boundingRect() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, const_cast<char *>(&sipPyMethods[30]), const_cast<sipSimpleWrapper **>(&sipPySelf), sipName_QGraphicsItem, sipName_boundingRect);

#else
    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[30]), sipPySelf, sipName_QGraphicsItem, sipName_boundingRect);
#endif

    if (!sipMeth)
        return  ::QRectF();

    extern  ::QRectF sipVH_QtWidgets_144(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_144(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQGraphicsItem::advance(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

#if SIP_ABI_MAJOR_VERSION >= 12 && SIP_ABI_MINOR_VERSION >= 8
    sipMeth = sipIsPyMethod_12_8(&sipGILState, &sipPyMethods[31], &sipPySelf, SIP_NULLPTR, sipName_advance);

#else
    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[31], sipPySelf, SIP_NULLPTR, sipName_advance);
#endif

    if (!sipMeth)
    {
         ::QGraphicsItem::advance(a0);
        return;
    }

    extern void sipVH_QtWidgets_59(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    sipVH_QtWidgets_59(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QGraphicsItem_scene, "scene(self) -> QGraphicsScene");

extern "C" {static PyObject *meth_QGraphicsItem_scene(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_scene(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QGraphicsScene*sipRes;

            sipRes = sipCpp->scene();

            return sipConvertFromType(sipRes,sipType_QGraphicsScene,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_scene, doc_QGraphicsItem_scene);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_parentItem, "parentItem(self) -> QGraphicsItem");

extern "C" {static PyObject *meth_QGraphicsItem_parentItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_parentItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QGraphicsItem*sipRes;

            sipRes = sipCpp->parentItem();

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_parentItem, doc_QGraphicsItem_parentItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_topLevelItem, "topLevelItem(self) -> QGraphicsItem");

extern "C" {static PyObject *meth_QGraphicsItem_topLevelItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_topLevelItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QGraphicsItem*sipRes;

            sipRes = sipCpp->topLevelItem();

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_topLevelItem, doc_QGraphicsItem_topLevelItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setParentItem, "setParentItem(self, QGraphicsItem)");

extern "C" {static PyObject *meth_QGraphicsItem_setParentItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setParentItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem* a0;
        sipWrapper *sipOwner = SIP_NULLPTR;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJH", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, &sipOwner))
        {
            sipCpp->setParentItem(a0);

            if (sipOwner)
                sipTransferTo(sipSelf, (PyObject *)sipOwner);
            else
                sipTransferBack(sipSelf);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setParentItem, doc_QGraphicsItem_setParentItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_group, "group(self) -> QGraphicsItemGroup");

extern "C" {static PyObject *meth_QGraphicsItem_group(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_group(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QGraphicsItemGroup*sipRes;

            sipRes = sipCpp->group();

            return sipConvertFromType(sipRes,sipType_QGraphicsItemGroup,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_group, doc_QGraphicsItem_group);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setGroup, "setGroup(self, QGraphicsItemGroup)");

extern "C" {static PyObject *meth_QGraphicsItem_setGroup(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setGroup(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItemGroup* a0;
        PyObject *a0Keep;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0Keep, sipType_QGraphicsItemGroup, &a0))
        {
            sipCpp->setGroup(a0);

            sipKeepReference(sipSelf, -22, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setGroup, doc_QGraphicsItem_setGroup);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_flags, "flags(self) -> QGraphicsItem.GraphicsItemFlags");

extern "C" {static PyObject *meth_QGraphicsItem_flags(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_flags(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QGraphicsItem::GraphicsItemFlags*sipRes;

            sipRes = new  ::QGraphicsItem::GraphicsItemFlags(sipCpp->flags());

            return sipConvertFromNewType(sipRes,sipType_QGraphicsItem_GraphicsItemFlags,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_flags, doc_QGraphicsItem_flags);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setFlag, "setFlag(self, QGraphicsItem.GraphicsItemFlag, enabled: bool = True)");

extern "C" {static PyObject *meth_QGraphicsItem_setFlag(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setFlag(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem::GraphicsItemFlag a0;
        bool a1 = 1;
         ::QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_enabled,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BE|b", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem_GraphicsItemFlag, &a0, &a1))
        {
            sipCpp->setFlag(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setFlag, doc_QGraphicsItem_setFlag);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setFlags, "setFlags(self, Union[QGraphicsItem.GraphicsItemFlags, QGraphicsItem.GraphicsItemFlag])");

extern "C" {static PyObject *meth_QGraphicsItem_setFlags(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setFlags(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem::GraphicsItemFlags* a0;
        int a0State = 0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem_GraphicsItemFlags, &a0, &a0State))
        {
            sipCpp->setFlags(*a0);
            sipReleaseType(a0,sipType_QGraphicsItem_GraphicsItemFlags,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setFlags, doc_QGraphicsItem_setFlags);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_toolTip, "toolTip(self) -> str");

extern "C" {static PyObject *meth_QGraphicsItem_toolTip(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_toolTip(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->toolTip());

            return sipConvertFromNewType(sipRes,sipType_QString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_toolTip, doc_QGraphicsItem_toolTip);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setToolTip, "setToolTip(self, str)");

extern "C" {static PyObject *meth_QGraphicsItem_setToolTip(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setToolTip(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QString,&a0, &a0State))
        {
            sipCpp->setToolTip(*a0);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setToolTip, doc_QGraphicsItem_setToolTip);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_cursor, "cursor(self) -> QCursor");

extern "C" {static PyObject *meth_QGraphicsItem_cursor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_cursor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QCursor*sipRes;

            sipRes = new  ::QCursor(sipCpp->cursor());

            return sipConvertFromNewType(sipRes,sipType_QCursor,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_cursor, doc_QGraphicsItem_cursor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setCursor, "setCursor(self, Union[QCursor, Qt.CursorShape])");

extern "C" {static PyObject *meth_QGraphicsItem_setCursor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setCursor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QCursor* a0;
        int a0State = 0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QCursor, &a0, &a0State))
        {
            sipCpp->setCursor(*a0);
            sipReleaseType(const_cast< ::QCursor *>(a0),sipType_QCursor,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setCursor, doc_QGraphicsItem_setCursor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_hasCursor, "hasCursor(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_hasCursor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_hasCursor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->hasCursor();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_hasCursor, doc_QGraphicsItem_hasCursor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_unsetCursor, "unsetCursor(self)");

extern "C" {static PyObject *meth_QGraphicsItem_unsetCursor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_unsetCursor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            sipCpp->unsetCursor();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_unsetCursor, doc_QGraphicsItem_unsetCursor);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_isVisible, "isVisible(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isVisible(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isVisible(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isVisible();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isVisible, doc_QGraphicsItem_isVisible);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setVisible, "setVisible(self, bool)");

extern "C" {static PyObject *meth_QGraphicsItem_setVisible(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setVisible(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            sipCpp->setVisible(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setVisible, doc_QGraphicsItem_setVisible);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_hide, "hide(self)");

extern "C" {static PyObject *meth_QGraphicsItem_hide(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_hide(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            sipCpp->hide();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_hide, doc_QGraphicsItem_hide);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_show, "show(self)");

extern "C" {static PyObject *meth_QGraphicsItem_show(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_show(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            sipCpp->show();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_show, doc_QGraphicsItem_show);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_isEnabled, "isEnabled(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isEnabled(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isEnabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isEnabled();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isEnabled, doc_QGraphicsItem_isEnabled);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setEnabled, "setEnabled(self, bool)");

extern "C" {static PyObject *meth_QGraphicsItem_setEnabled(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setEnabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            sipCpp->setEnabled(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setEnabled, doc_QGraphicsItem_setEnabled);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_isSelected, "isSelected(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isSelected(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isSelected(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isSelected();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isSelected, doc_QGraphicsItem_isSelected);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setSelected, "setSelected(self, bool)");

extern "C" {static PyObject *meth_QGraphicsItem_setSelected(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setSelected(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            sipCpp->setSelected(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setSelected, doc_QGraphicsItem_setSelected);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_acceptDrops, "acceptDrops(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_acceptDrops(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_acceptDrops(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->acceptDrops();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_acceptDrops, doc_QGraphicsItem_acceptDrops);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setAcceptDrops, "setAcceptDrops(self, bool)");

extern "C" {static PyObject *meth_QGraphicsItem_setAcceptDrops(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setAcceptDrops(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            sipCpp->setAcceptDrops(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setAcceptDrops, doc_QGraphicsItem_setAcceptDrops);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_acceptedMouseButtons, "acceptedMouseButtons(self) -> Qt.MouseButtons");

extern "C" {static PyObject *meth_QGraphicsItem_acceptedMouseButtons(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_acceptedMouseButtons(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::Qt::MouseButtons*sipRes;

            sipRes = new  ::Qt::MouseButtons(sipCpp->acceptedMouseButtons());

            return sipConvertFromNewType(sipRes,sipType_Qt_MouseButtons,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_acceptedMouseButtons, doc_QGraphicsItem_acceptedMouseButtons);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setAcceptedMouseButtons, "setAcceptedMouseButtons(self, Union[Qt.MouseButtons, Qt.MouseButton])");

extern "C" {static PyObject *meth_QGraphicsItem_setAcceptedMouseButtons(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setAcceptedMouseButtons(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::Qt::MouseButtons* a0;
        int a0State = 0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_Qt_MouseButtons, &a0, &a0State))
        {
            sipCpp->setAcceptedMouseButtons(*a0);
            sipReleaseType(a0,sipType_Qt_MouseButtons,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setAcceptedMouseButtons, doc_QGraphicsItem_setAcceptedMouseButtons);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_hasFocus, "hasFocus(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_hasFocus(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_hasFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->hasFocus();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_hasFocus, doc_QGraphicsItem_hasFocus);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setFocus, "setFocus(self, focusReason: Qt.FocusReason = Qt.OtherFocusReason)");

extern "C" {static PyObject *meth_QGraphicsItem_setFocus(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setFocus(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::Qt::FocusReason a0 = Qt::OtherFocusReason;
         ::QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            sipName_focusReason,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|E", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_Qt_FocusReason, &a0))
        {
            sipCpp->setFocus(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setFocus, doc_QGraphicsItem_setFocus);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_clearFocus, "clearFocus(self)");

extern "C" {static PyObject *meth_QGraphicsItem_clearFocus(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_clearFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            sipCpp->clearFocus();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_clearFocus, doc_QGraphicsItem_clearFocus);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_pos, "pos(self) -> QPointF");

extern "C" {static PyObject *meth_QGraphicsItem_pos(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_pos(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QPointF*sipRes;

            sipRes = new  ::QPointF(sipCpp->pos());

            return sipConvertFromNewType(sipRes,sipType_QPointF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_pos, doc_QGraphicsItem_pos);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_x, "x(self) -> float");

extern "C" {static PyObject *meth_QGraphicsItem_x(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_x(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->x();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_x, doc_QGraphicsItem_x);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_y, "y(self) -> float");

extern "C" {static PyObject *meth_QGraphicsItem_y(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_y(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->y();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_y, doc_QGraphicsItem_y);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_scenePos, "scenePos(self) -> QPointF");

extern "C" {static PyObject *meth_QGraphicsItem_scenePos(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_scenePos(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QPointF*sipRes;

            sipRes = new  ::QPointF(sipCpp->scenePos());

            return sipConvertFromNewType(sipRes,sipType_QPointF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_scenePos, doc_QGraphicsItem_scenePos);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setPos, "setPos(self, Union[QPointF, QPoint])\n"
"setPos(self, float, float)");

extern "C" {static PyObject *meth_QGraphicsItem_setPos(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setPos(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QPointF* a0;
        int a0State = 0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
            sipCpp->setPos(*a0);
            sipReleaseType(const_cast< ::QPointF *>(a0),sipType_QPointF,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1))
        {
            sipCpp->setPos(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setPos, doc_QGraphicsItem_setPos);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_moveBy, "moveBy(self, float, float)");

extern "C" {static PyObject *meth_QGraphicsItem_moveBy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_moveBy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::qreal a1;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1))
        {
            sipCpp->moveBy(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_moveBy, doc_QGraphicsItem_moveBy);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_ensureVisible, "ensureVisible(self, rect: QRectF = QRectF(), xMargin: int = 50, yMargin: int = 50)\n"
"ensureVisible(self, float, float, float, float, xMargin: int = 50, yMargin: int = 50)");

extern "C" {static PyObject *meth_QGraphicsItem_ensureVisible(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_ensureVisible(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QRectF& a0def = QRectF();
        const  ::QRectF* a0 = &a0def;
        int a1 = 50;
        int a2 = 50;
         ::QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            sipName_rect,
            sipName_xMargin,
            sipName_yMargin,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|J9ii", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0, &a1, &a2))
        {
            sipCpp->ensureVisible(*a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
        int a4 = 50;
        int a5 = 50;
         ::QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_xMargin,
            sipName_yMargin,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bdddd|ii", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipCpp->ensureVisible(a0,a1,a2,a3,a4,a5);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_ensureVisible, doc_QGraphicsItem_ensureVisible);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_advance, "advance(self, int)");

extern "C" {static PyObject *meth_QGraphicsItem_advance(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_advance(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::advance(a0) : sipCpp->advance(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_advance, doc_QGraphicsItem_advance);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_zValue, "zValue(self) -> float");

extern "C" {static PyObject *meth_QGraphicsItem_zValue(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_zValue(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->zValue();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_zValue, doc_QGraphicsItem_zValue);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setZValue, "setZValue(self, float)");

extern "C" {static PyObject *meth_QGraphicsItem_setZValue(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setZValue(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            sipCpp->setZValue(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setZValue, doc_QGraphicsItem_setZValue);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_boundingRect, "boundingRect(self) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsItem_boundingRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_boundingRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    PyObject *sipOrigSelf = sipSelf;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QRectF*sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QGraphicsItem, sipName_boundingRect);
                return SIP_NULLPTR;
            }

            sipRes = new  ::QRectF(sipCpp->boundingRect());

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_boundingRect, doc_QGraphicsItem_boundingRect);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_childrenBoundingRect, "childrenBoundingRect(self) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsItem_childrenBoundingRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_childrenBoundingRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->childrenBoundingRect());

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_childrenBoundingRect, doc_QGraphicsItem_childrenBoundingRect);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_sceneBoundingRect, "sceneBoundingRect(self) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsItem_sceneBoundingRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_sceneBoundingRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->sceneBoundingRect());

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_sceneBoundingRect, doc_QGraphicsItem_sceneBoundingRect);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_shape, "shape(self) -> QPainterPath");

extern "C" {static PyObject *meth_QGraphicsItem_shape(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_shape(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QPainterPath*sipRes;

            sipRes = new  ::QPainterPath((sipSelfWasArg ? sipCpp-> ::QGraphicsItem::shape() : sipCpp->shape()));

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_shape, doc_QGraphicsItem_shape);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_contains, "contains(self, Union[QPointF, QPoint]) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_contains(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_contains(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QPointF* a0;
        int a0State = 0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::contains(*a0) : sipCpp->contains(*a0));
            sipReleaseType(const_cast< ::QPointF *>(a0),sipType_QPointF,a0State);

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_contains, doc_QGraphicsItem_contains);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_collidesWithItem, "collidesWithItem(self, QGraphicsItem, mode: Qt.ItemSelectionMode = Qt.IntersectsItemShape) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_collidesWithItem(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_collidesWithItem(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsItem* a0;
         ::Qt::ItemSelectionMode a1 = Qt::IntersectsItemShape;
        const  ::QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ8|E", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_Qt_ItemSelectionMode, &a1))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::collidesWithItem(a0,a1) : sipCpp->collidesWithItem(a0,a1));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_collidesWithItem, doc_QGraphicsItem_collidesWithItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_collidesWithPath, "collidesWithPath(self, QPainterPath, mode: Qt.ItemSelectionMode = Qt.IntersectsItemShape) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_collidesWithPath(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_collidesWithPath(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QPainterPath* a0;
         ::Qt::ItemSelectionMode a1 = Qt::IntersectsItemShape;
        const  ::QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9|E", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPainterPath, &a0, sipType_Qt_ItemSelectionMode, &a1))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::collidesWithPath(*a0,a1) : sipCpp->collidesWithPath(*a0,a1));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_collidesWithPath, doc_QGraphicsItem_collidesWithPath);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_collidingItems, "collidingItems(self, mode: Qt.ItemSelectionMode = Qt.IntersectsItemShape) -> List[QGraphicsItem]");

extern "C" {static PyObject *meth_QGraphicsItem_collidingItems(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_collidingItems(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::Qt::ItemSelectionMode a0 = Qt::IntersectsItemShape;
        const  ::QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|E", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_Qt_ItemSelectionMode, &a0))
        {
            QList< ::QGraphicsItem*>*sipRes;

            sipRes = new QList< ::QGraphicsItem*>(sipCpp->collidingItems(a0));

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_collidingItems, doc_QGraphicsItem_collidingItems);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_isObscuredBy, "isObscuredBy(self, QGraphicsItem) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isObscuredBy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isObscuredBy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsItem* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::isObscuredBy(a0) : sipCpp->isObscuredBy(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isObscuredBy, doc_QGraphicsItem_isObscuredBy);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_opaqueArea, "opaqueArea(self) -> QPainterPath");

extern "C" {static PyObject *meth_QGraphicsItem_opaqueArea(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_opaqueArea(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QPainterPath*sipRes;

            sipRes = new  ::QPainterPath((sipSelfWasArg ? sipCpp-> ::QGraphicsItem::opaqueArea() : sipCpp->opaqueArea()));

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_opaqueArea, doc_QGraphicsItem_opaqueArea);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_paint, "paint(self, QPainter, QStyleOptionGraphicsItem, widget: QWidget = None)");

extern "C" {static PyObject *meth_QGraphicsItem_paint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_paint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    PyObject *sipOrigSelf = sipSelf;

    {
         ::QPainter* a0;
        const  ::QStyleOptionGraphicsItem* a1;
         ::QWidget* a2 = 0;
         ::QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ8J8|J8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPainter, &a0, sipType_QStyleOptionGraphicsItem, &a1, sipType_QWidget, &a2))
        {
            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QGraphicsItem, sipName_paint);
                return SIP_NULLPTR;
            }

            sipCpp->paint(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_paint, doc_QGraphicsItem_paint);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_update, "update(self, rect: QRectF = QRectF())\n"
"update(self, float, float, float, float)");

extern "C" {static PyObject *meth_QGraphicsItem_update(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_update(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QRectF& a0def = QRectF();
        const  ::QRectF* a0 = &a0def;
         ::QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            sipName_rect,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0))
        {
            sipCpp->update(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
         ::QGraphicsItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, "Bdddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->update(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_update, doc_QGraphicsItem_update);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapToItem, "mapToItem(self, QGraphicsItem, Union[QPointF, QPoint]) -> QPointF\n"
"mapToItem(self, QGraphicsItem, QRectF) -> QPolygonF\n"
"mapToItem(self, QGraphicsItem, QPolygonF) -> QPolygonF\n"
"mapToItem(self, QGraphicsItem, QPainterPath) -> QPainterPath\n"
"mapToItem(self, QGraphicsItem, float, float) -> QPointF\n"
"mapToItem(self, QGraphicsItem, float, float, float, float) -> QPolygonF");

extern "C" {static PyObject *meth_QGraphicsItem_mapToItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapToItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem* a0;
        const  ::QPointF* a1;
        int a1State = 0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QPointF, &a1, &a1State))
        {
             ::QPointF*sipRes;

            sipRes = new  ::QPointF(sipCpp->mapToItem(a0,*a1));
            sipReleaseType(const_cast< ::QPointF *>(a1),sipType_QPointF,a1State);

            return sipConvertFromNewType(sipRes,sipType_QPointF,SIP_NULLPTR);
        }
    }

    {
        const  ::QGraphicsItem* a0;
        const  ::QRectF* a1;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QRectF, &a1))
        {
             ::QPolygonF*sipRes;

            sipRes = new  ::QPolygonF(sipCpp->mapToItem(a0,*a1));

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,SIP_NULLPTR);
        }
    }

    {
        const  ::QGraphicsItem* a0;
        const  ::QPolygonF* a1;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QPolygonF, &a1))
        {
             ::QPolygonF*sipRes;

            sipRes = new  ::QPolygonF(sipCpp->mapToItem(a0,*a1));

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,SIP_NULLPTR);
        }
    }

    {
        const  ::QGraphicsItem* a0;
        const  ::QPainterPath* a1;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QPainterPath, &a1))
        {
             ::QPainterPath*sipRes;

            sipRes = new  ::QPainterPath(sipCpp->mapToItem(a0,*a1));

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,SIP_NULLPTR);
        }
    }

    {
        const  ::QGraphicsItem* a0;
         ::qreal a1;
         ::qreal a2;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8dd", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, &a1, &a2))
        {
             ::QPointF*sipRes;

            sipRes = new  ::QPointF(sipCpp->mapToItem(a0,a1,a2));

            return sipConvertFromNewType(sipRes,sipType_QPointF,SIP_NULLPTR);
        }
    }

    {
        const  ::QGraphicsItem* a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
         ::qreal a4;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8dddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, &a1, &a2, &a3, &a4))
        {
             ::QPolygonF*sipRes;

            sipRes = new  ::QPolygonF(sipCpp->mapToItem(a0,a1,a2,a3,a4));

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapToItem, doc_QGraphicsItem_mapToItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapToParent, "mapToParent(self, Union[QPointF, QPoint]) -> QPointF\n"
"mapToParent(self, QRectF) -> QPolygonF\n"
"mapToParent(self, QPolygonF) -> QPolygonF\n"
"mapToParent(self, QPainterPath) -> QPainterPath\n"
"mapToParent(self, float, float) -> QPointF\n"
"mapToParent(self, float, float, float, float) -> QPolygonF");

extern "C" {static PyObject *meth_QGraphicsItem_mapToParent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapToParent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QPointF* a0;
        int a0State = 0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
             ::QPointF*sipRes;

            sipRes = new  ::QPointF(sipCpp->mapToParent(*a0));
            sipReleaseType(const_cast< ::QPointF *>(a0),sipType_QPointF,a0State);

            return sipConvertFromNewType(sipRes,sipType_QPointF,SIP_NULLPTR);
        }
    }

    {
        const  ::QRectF* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0))
        {
             ::QPolygonF*sipRes;

            sipRes = new  ::QPolygonF(sipCpp->mapToParent(*a0));

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,SIP_NULLPTR);
        }
    }

    {
        const  ::QPolygonF* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPolygonF, &a0))
        {
             ::QPolygonF*sipRes;

            sipRes = new  ::QPolygonF(sipCpp->mapToParent(*a0));

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,SIP_NULLPTR);
        }
    }

    {
        const  ::QPainterPath* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPainterPath, &a0))
        {
             ::QPainterPath*sipRes;

            sipRes = new  ::QPainterPath(sipCpp->mapToParent(*a0));

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,SIP_NULLPTR);
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1))
        {
             ::QPointF*sipRes;

            sipRes = new  ::QPointF(sipCpp->mapToParent(a0,a1));

            return sipConvertFromNewType(sipRes,sipType_QPointF,SIP_NULLPTR);
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3))
        {
             ::QPolygonF*sipRes;

            sipRes = new  ::QPolygonF(sipCpp->mapToParent(a0,a1,a2,a3));

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapToParent, doc_QGraphicsItem_mapToParent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapToScene, "mapToScene(self, Union[QPointF, QPoint]) -> QPointF\n"
"mapToScene(self, QRectF) -> QPolygonF\n"
"mapToScene(self, QPolygonF) -> QPolygonF\n"
"mapToScene(self, QPainterPath) -> QPainterPath\n"
"mapToScene(self, float, float) -> QPointF\n"
"mapToScene(self, float, float, float, float) -> QPolygonF");

extern "C" {static PyObject *meth_QGraphicsItem_mapToScene(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapToScene(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QPointF* a0;
        int a0State = 0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
             ::QPointF*sipRes;

            sipRes = new  ::QPointF(sipCpp->mapToScene(*a0));
            sipReleaseType(const_cast< ::QPointF *>(a0),sipType_QPointF,a0State);

            return sipConvertFromNewType(sipRes,sipType_QPointF,SIP_NULLPTR);
        }
    }

    {
        const  ::QRectF* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0))
        {
             ::QPolygonF*sipRes;

            sipRes = new  ::QPolygonF(sipCpp->mapToScene(*a0));

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,SIP_NULLPTR);
        }
    }

    {
        const  ::QPolygonF* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPolygonF, &a0))
        {
             ::QPolygonF*sipRes;

            sipRes = new  ::QPolygonF(sipCpp->mapToScene(*a0));

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,SIP_NULLPTR);
        }
    }

    {
        const  ::QPainterPath* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPainterPath, &a0))
        {
             ::QPainterPath*sipRes;

            sipRes = new  ::QPainterPath(sipCpp->mapToScene(*a0));

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,SIP_NULLPTR);
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1))
        {
             ::QPointF*sipRes;

            sipRes = new  ::QPointF(sipCpp->mapToScene(a0,a1));

            return sipConvertFromNewType(sipRes,sipType_QPointF,SIP_NULLPTR);
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3))
        {
             ::QPolygonF*sipRes;

            sipRes = new  ::QPolygonF(sipCpp->mapToScene(a0,a1,a2,a3));

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapToScene, doc_QGraphicsItem_mapToScene);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapFromItem, "mapFromItem(self, QGraphicsItem, Union[QPointF, QPoint]) -> QPointF\n"
"mapFromItem(self, QGraphicsItem, QRectF) -> QPolygonF\n"
"mapFromItem(self, QGraphicsItem, QPolygonF) -> QPolygonF\n"
"mapFromItem(self, QGraphicsItem, QPainterPath) -> QPainterPath\n"
"mapFromItem(self, QGraphicsItem, float, float) -> QPointF\n"
"mapFromItem(self, QGraphicsItem, float, float, float, float) -> QPolygonF");

extern "C" {static PyObject *meth_QGraphicsItem_mapFromItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapFromItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem* a0;
        const  ::QPointF* a1;
        int a1State = 0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QPointF, &a1, &a1State))
        {
             ::QPointF*sipRes;

            sipRes = new  ::QPointF(sipCpp->mapFromItem(a0,*a1));
            sipReleaseType(const_cast< ::QPointF *>(a1),sipType_QPointF,a1State);

            return sipConvertFromNewType(sipRes,sipType_QPointF,SIP_NULLPTR);
        }
    }

    {
        const  ::QGraphicsItem* a0;
        const  ::QRectF* a1;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QRectF, &a1))
        {
             ::QPolygonF*sipRes;

            sipRes = new  ::QPolygonF(sipCpp->mapFromItem(a0,*a1));

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,SIP_NULLPTR);
        }
    }

    {
        const  ::QGraphicsItem* a0;
        const  ::QPolygonF* a1;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QPolygonF, &a1))
        {
             ::QPolygonF*sipRes;

            sipRes = new  ::QPolygonF(sipCpp->mapFromItem(a0,*a1));

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,SIP_NULLPTR);
        }
    }

    {
        const  ::QGraphicsItem* a0;
        const  ::QPainterPath* a1;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QPainterPath, &a1))
        {
             ::QPainterPath*sipRes;

            sipRes = new  ::QPainterPath(sipCpp->mapFromItem(a0,*a1));

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,SIP_NULLPTR);
        }
    }

    {
        const  ::QGraphicsItem* a0;
         ::qreal a1;
         ::qreal a2;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8dd", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, &a1, &a2))
        {
             ::QPointF*sipRes;

            sipRes = new  ::QPointF(sipCpp->mapFromItem(a0,a1,a2));

            return sipConvertFromNewType(sipRes,sipType_QPointF,SIP_NULLPTR);
        }
    }

    {
        const  ::QGraphicsItem* a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
         ::qreal a4;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8dddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, &a1, &a2, &a3, &a4))
        {
             ::QPolygonF*sipRes;

            sipRes = new  ::QPolygonF(sipCpp->mapFromItem(a0,a1,a2,a3,a4));

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapFromItem, doc_QGraphicsItem_mapFromItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapFromParent, "mapFromParent(self, Union[QPointF, QPoint]) -> QPointF\n"
"mapFromParent(self, QRectF) -> QPolygonF\n"
"mapFromParent(self, QPolygonF) -> QPolygonF\n"
"mapFromParent(self, QPainterPath) -> QPainterPath\n"
"mapFromParent(self, float, float) -> QPointF\n"
"mapFromParent(self, float, float, float, float) -> QPolygonF");

extern "C" {static PyObject *meth_QGraphicsItem_mapFromParent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapFromParent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QPointF* a0;
        int a0State = 0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
             ::QPointF*sipRes;

            sipRes = new  ::QPointF(sipCpp->mapFromParent(*a0));
            sipReleaseType(const_cast< ::QPointF *>(a0),sipType_QPointF,a0State);

            return sipConvertFromNewType(sipRes,sipType_QPointF,SIP_NULLPTR);
        }
    }

    {
        const  ::QRectF* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0))
        {
             ::QPolygonF*sipRes;

            sipRes = new  ::QPolygonF(sipCpp->mapFromParent(*a0));

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,SIP_NULLPTR);
        }
    }

    {
        const  ::QPolygonF* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPolygonF, &a0))
        {
             ::QPolygonF*sipRes;

            sipRes = new  ::QPolygonF(sipCpp->mapFromParent(*a0));

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,SIP_NULLPTR);
        }
    }

    {
        const  ::QPainterPath* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPainterPath, &a0))
        {
             ::QPainterPath*sipRes;

            sipRes = new  ::QPainterPath(sipCpp->mapFromParent(*a0));

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,SIP_NULLPTR);
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1))
        {
             ::QPointF*sipRes;

            sipRes = new  ::QPointF(sipCpp->mapFromParent(a0,a1));

            return sipConvertFromNewType(sipRes,sipType_QPointF,SIP_NULLPTR);
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3))
        {
             ::QPolygonF*sipRes;

            sipRes = new  ::QPolygonF(sipCpp->mapFromParent(a0,a1,a2,a3));

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapFromParent, doc_QGraphicsItem_mapFromParent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapFromScene, "mapFromScene(self, Union[QPointF, QPoint]) -> QPointF\n"
"mapFromScene(self, QRectF) -> QPolygonF\n"
"mapFromScene(self, QPolygonF) -> QPolygonF\n"
"mapFromScene(self, QPainterPath) -> QPainterPath\n"
"mapFromScene(self, float, float) -> QPointF\n"
"mapFromScene(self, float, float, float, float) -> QPolygonF");

extern "C" {static PyObject *meth_QGraphicsItem_mapFromScene(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapFromScene(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QPointF* a0;
        int a0State = 0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
             ::QPointF*sipRes;

            sipRes = new  ::QPointF(sipCpp->mapFromScene(*a0));
            sipReleaseType(const_cast< ::QPointF *>(a0),sipType_QPointF,a0State);

            return sipConvertFromNewType(sipRes,sipType_QPointF,SIP_NULLPTR);
        }
    }

    {
        const  ::QRectF* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0))
        {
             ::QPolygonF*sipRes;

            sipRes = new  ::QPolygonF(sipCpp->mapFromScene(*a0));

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,SIP_NULLPTR);
        }
    }

    {
        const  ::QPolygonF* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPolygonF, &a0))
        {
             ::QPolygonF*sipRes;

            sipRes = new  ::QPolygonF(sipCpp->mapFromScene(*a0));

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,SIP_NULLPTR);
        }
    }

    {
        const  ::QPainterPath* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPainterPath, &a0))
        {
             ::QPainterPath*sipRes;

            sipRes = new  ::QPainterPath(sipCpp->mapFromScene(*a0));

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,SIP_NULLPTR);
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1))
        {
             ::QPointF*sipRes;

            sipRes = new  ::QPointF(sipCpp->mapFromScene(a0,a1));

            return sipConvertFromNewType(sipRes,sipType_QPointF,SIP_NULLPTR);
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3))
        {
             ::QPolygonF*sipRes;

            sipRes = new  ::QPolygonF(sipCpp->mapFromScene(a0,a1,a2,a3));

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapFromScene, doc_QGraphicsItem_mapFromScene);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_isAncestorOf, "isAncestorOf(self, QGraphicsItem) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isAncestorOf(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isAncestorOf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->isAncestorOf(a0);

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isAncestorOf, doc_QGraphicsItem_isAncestorOf);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_data, "data(self, int) -> Any");

extern "C" {static PyObject *meth_QGraphicsItem_data(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_data(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
             ::QVariant*sipRes;

            sipRes = new  ::QVariant(sipCpp->data(a0));

            return sipConvertFromNewType(sipRes,sipType_QVariant,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_data, doc_QGraphicsItem_data);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setData, "setData(self, int, Any)");

extern "C" {static PyObject *meth_QGraphicsItem_setData(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setData(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        const  ::QVariant* a1;
        int a1State = 0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, sipType_QVariant, &a1, &a1State))
        {
            sipCpp->setData(a0,*a1);
            sipReleaseType(const_cast< ::QVariant *>(a1),sipType_QVariant,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setData, doc_QGraphicsItem_setData);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_type, "type(self) -> int");

extern "C" {static PyObject *meth_QGraphicsItem_type(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_type(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            int sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::type() : sipCpp->type());

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_type, doc_QGraphicsItem_type);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_installSceneEventFilter, "installSceneEventFilter(self, QGraphicsItem)");

extern "C" {static PyObject *meth_QGraphicsItem_installSceneEventFilter(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_installSceneEventFilter(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            sipCpp->installSceneEventFilter(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_installSceneEventFilter, doc_QGraphicsItem_installSceneEventFilter);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_removeSceneEventFilter, "removeSceneEventFilter(self, QGraphicsItem)");

extern "C" {static PyObject *meth_QGraphicsItem_removeSceneEventFilter(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_removeSceneEventFilter(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            sipCpp->removeSceneEventFilter(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_removeSceneEventFilter, doc_QGraphicsItem_removeSceneEventFilter);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_contextMenuEvent, "contextMenuEvent(self, QGraphicsSceneContextMenuEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_contextMenuEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_contextMenuEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneContextMenuEvent* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneContextMenuEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::contextMenuEvent(a0) : sipCpp->contextMenuEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_contextMenuEvent, doc_QGraphicsItem_contextMenuEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_dragEnterEvent, "dragEnterEvent(self, QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_dragEnterEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_dragEnterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneDragDropEvent* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::dragEnterEvent(a0) : sipCpp->dragEnterEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_dragEnterEvent, doc_QGraphicsItem_dragEnterEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_dragLeaveEvent, "dragLeaveEvent(self, QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_dragLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_dragLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneDragDropEvent* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::dragLeaveEvent(a0) : sipCpp->dragLeaveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_dragLeaveEvent, doc_QGraphicsItem_dragLeaveEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_dragMoveEvent, "dragMoveEvent(self, QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_dragMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_dragMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneDragDropEvent* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::dragMoveEvent(a0) : sipCpp->dragMoveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_dragMoveEvent, doc_QGraphicsItem_dragMoveEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_dropEvent, "dropEvent(self, QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_dropEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_dropEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneDragDropEvent* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::dropEvent(a0) : sipCpp->dropEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_dropEvent, doc_QGraphicsItem_dropEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_focusInEvent, "focusInEvent(self, QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_focusInEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_focusInEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QFocusEvent* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QFocusEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::focusInEvent(a0) : sipCpp->focusInEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_focusInEvent, doc_QGraphicsItem_focusInEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_focusOutEvent, "focusOutEvent(self, QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_focusOutEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_focusOutEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QFocusEvent* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QFocusEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::focusOutEvent(a0) : sipCpp->focusOutEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_focusOutEvent, doc_QGraphicsItem_focusOutEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_hoverEnterEvent, "hoverEnterEvent(self, QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_hoverEnterEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_hoverEnterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneHoverEvent* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::hoverEnterEvent(a0) : sipCpp->hoverEnterEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_hoverEnterEvent, doc_QGraphicsItem_hoverEnterEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_hoverLeaveEvent, "hoverLeaveEvent(self, QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_hoverLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_hoverLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneHoverEvent* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::hoverLeaveEvent(a0) : sipCpp->hoverLeaveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_hoverLeaveEvent, doc_QGraphicsItem_hoverLeaveEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_hoverMoveEvent, "hoverMoveEvent(self, QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_hoverMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_hoverMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneHoverEvent* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::hoverMoveEvent(a0) : sipCpp->hoverMoveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_hoverMoveEvent, doc_QGraphicsItem_hoverMoveEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_inputMethodEvent, "inputMethodEvent(self, QInputMethodEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_inputMethodEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_inputMethodEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QInputMethodEvent* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QInputMethodEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::inputMethodEvent(a0) : sipCpp->inputMethodEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_inputMethodEvent, doc_QGraphicsItem_inputMethodEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_inputMethodQuery, "inputMethodQuery(self, Qt.InputMethodQuery) -> Any");

extern "C" {static PyObject *meth_QGraphicsItem_inputMethodQuery(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_inputMethodQuery(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::Qt::InputMethodQuery a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pE", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_Qt_InputMethodQuery, &a0))
        {
             ::QVariant*sipRes;

            sipRes = new  ::QVariant((sipSelfWasArg ? sipCpp-> ::QGraphicsItem::inputMethodQuery(a0) : sipCpp->inputMethodQuery(a0)));

            return sipConvertFromNewType(sipRes,sipType_QVariant,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_inputMethodQuery, doc_QGraphicsItem_inputMethodQuery);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_itemChange, "itemChange(self, QGraphicsItem.GraphicsItemChange, Any) -> Any");

extern "C" {static PyObject *meth_QGraphicsItem_itemChange(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_itemChange(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsItem::GraphicsItemChange a0;
        const  ::QVariant* a1;
        int a1State = 0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pEJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem_GraphicsItemChange, &a0, sipType_QVariant, &a1, &a1State))
        {
             ::QVariant*sipRes;

            sipRes = new  ::QVariant((sipSelfWasArg ? sipCpp-> ::QGraphicsItem::itemChange(a0,*a1) : sipCpp->itemChange(a0,*a1)));
            sipReleaseType(const_cast< ::QVariant *>(a1),sipType_QVariant,a1State);

            return sipConvertFromNewType(sipRes,sipType_QVariant,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_itemChange, doc_QGraphicsItem_itemChange);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_keyPressEvent, "keyPressEvent(self, QKeyEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_keyPressEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_keyPressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QKeyEvent* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QKeyEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::keyPressEvent(a0) : sipCpp->keyPressEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_keyPressEvent, doc_QGraphicsItem_keyPressEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_keyReleaseEvent, "keyReleaseEvent(self, QKeyEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_keyReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_keyReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QKeyEvent* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QKeyEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::keyReleaseEvent(a0) : sipCpp->keyReleaseEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_keyReleaseEvent, doc_QGraphicsItem_keyReleaseEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_mouseDoubleClickEvent, "mouseDoubleClickEvent(self, QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_mouseDoubleClickEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mouseDoubleClickEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneMouseEvent* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::mouseDoubleClickEvent(a0) : sipCpp->mouseDoubleClickEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mouseDoubleClickEvent, doc_QGraphicsItem_mouseDoubleClickEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_mouseMoveEvent, "mouseMoveEvent(self, QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_mouseMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneMouseEvent* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::mouseMoveEvent(a0) : sipCpp->mouseMoveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mouseMoveEvent, doc_QGraphicsItem_mouseMoveEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_mousePressEvent, "mousePressEvent(self, QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_mousePressEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneMouseEvent* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::mousePressEvent(a0) : sipCpp->mousePressEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mousePressEvent, doc_QGraphicsItem_mousePressEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_mouseReleaseEvent, "mouseReleaseEvent(self, QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_mouseReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneMouseEvent* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::mouseReleaseEvent(a0) : sipCpp->mouseReleaseEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mouseReleaseEvent, doc_QGraphicsItem_mouseReleaseEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_prepareGeometryChange, "prepareGeometryChange(self)");

extern "C" {static PyObject *meth_QGraphicsItem_prepareGeometryChange(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_prepareGeometryChange(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            sipCpp->prepareGeometryChange();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_prepareGeometryChange, doc_QGraphicsItem_prepareGeometryChange);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_sceneEvent, "sceneEvent(self, QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_sceneEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_sceneEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::sceneEvent(a0) : sipCpp->sceneEvent(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_sceneEvent, doc_QGraphicsItem_sceneEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_sceneEventFilter, "sceneEventFilter(self, QGraphicsItem, QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_sceneEventFilter(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_sceneEventFilter(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsItem* a0;
         ::QEvent* a1;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8J8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QEvent, &a1))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::sceneEventFilter(a0,a1) : sipCpp->sceneEventFilter(a0,a1));

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_sceneEventFilter, doc_QGraphicsItem_sceneEventFilter);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_wheelEvent, "wheelEvent(self, QGraphicsSceneWheelEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_wheelEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_wheelEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QGraphicsSceneWheelEvent* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneWheelEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QGraphicsItem::wheelEvent(a0) : sipCpp->wheelEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_wheelEvent, doc_QGraphicsItem_wheelEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_transform, "transform(self) -> QTransform");

extern "C" {static PyObject *meth_QGraphicsItem_transform(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_transform(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QTransform*sipRes;

            sipRes = new  ::QTransform(sipCpp->transform());

            return sipConvertFromNewType(sipRes,sipType_QTransform,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_transform, doc_QGraphicsItem_transform);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_sceneTransform, "sceneTransform(self) -> QTransform");

extern "C" {static PyObject *meth_QGraphicsItem_sceneTransform(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_sceneTransform(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QTransform*sipRes;

            sipRes = new  ::QTransform(sipCpp->sceneTransform());

            return sipConvertFromNewType(sipRes,sipType_QTransform,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_sceneTransform, doc_QGraphicsItem_sceneTransform);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_deviceTransform, "deviceTransform(self, QTransform) -> QTransform");

extern "C" {static PyObject *meth_QGraphicsItem_deviceTransform(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_deviceTransform(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QTransform* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QTransform, &a0))
        {
             ::QTransform*sipRes;

            sipRes = new  ::QTransform(sipCpp->deviceTransform(*a0));

            return sipConvertFromNewType(sipRes,sipType_QTransform,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_deviceTransform, doc_QGraphicsItem_deviceTransform);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setTransform, "setTransform(self, QTransform, combine: bool = False)");

extern "C" {static PyObject *meth_QGraphicsItem_setTransform(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setTransform(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QTransform* a0;
        bool a1 = 0;
         ::QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_combine,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9|b", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QTransform, &a0, &a1))
        {
            sipCpp->setTransform(*a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setTransform, doc_QGraphicsItem_setTransform);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_resetTransform, "resetTransform(self)");

extern "C" {static PyObject *meth_QGraphicsItem_resetTransform(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_resetTransform(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            sipCpp->resetTransform();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_resetTransform, doc_QGraphicsItem_resetTransform);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_isObscured, "isObscured(self, rect: QRectF = QRectF()) -> bool\n"
"isObscured(self, float, float, float, float) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isObscured(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isObscured(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QRectF& a0def = QRectF();
        const  ::QRectF* a0 = &a0def;
        const  ::QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            sipName_rect,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->isObscured(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, "Bdddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3))
        {
            bool sipRes;

            sipRes = sipCpp->isObscured(a0,a1,a2,a3);

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isObscured, doc_QGraphicsItem_isObscured);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_parentWidget, "parentWidget(self) -> QGraphicsWidget");

extern "C" {static PyObject *meth_QGraphicsItem_parentWidget(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_parentWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QGraphicsWidget*sipRes;

            sipRes = sipCpp->parentWidget();

            return sipConvertFromType(sipRes,sipType_QGraphicsWidget,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_parentWidget, doc_QGraphicsItem_parentWidget);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_topLevelWidget, "topLevelWidget(self) -> QGraphicsWidget");

extern "C" {static PyObject *meth_QGraphicsItem_topLevelWidget(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_topLevelWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QGraphicsWidget*sipRes;

            sipRes = sipCpp->topLevelWidget();

            return sipConvertFromType(sipRes,sipType_QGraphicsWidget,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_topLevelWidget, doc_QGraphicsItem_topLevelWidget);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_window, "window(self) -> QGraphicsWidget");

extern "C" {static PyObject *meth_QGraphicsItem_window(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_window(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QGraphicsWidget*sipRes;

            sipRes = sipCpp->window();

            return sipConvertFromType(sipRes,sipType_QGraphicsWidget,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_window, doc_QGraphicsItem_window);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_childItems, "childItems(self) -> List[QGraphicsItem]");

extern "C" {static PyObject *meth_QGraphicsItem_childItems(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_childItems(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QList< ::QGraphicsItem*>*sipRes;

            sipRes = new QList< ::QGraphicsItem*>(sipCpp->childItems());

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_childItems, doc_QGraphicsItem_childItems);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_isWidget, "isWidget(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isWidget(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isWidget();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isWidget, doc_QGraphicsItem_isWidget);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_isWindow, "isWindow(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isWindow(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isWindow(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isWindow();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isWindow, doc_QGraphicsItem_isWindow);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_cacheMode, "cacheMode(self) -> QGraphicsItem.CacheMode");

extern "C" {static PyObject *meth_QGraphicsItem_cacheMode(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_cacheMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QGraphicsItem::CacheMode sipRes;

            sipRes = sipCpp->cacheMode();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QGraphicsItem_CacheMode);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_cacheMode, doc_QGraphicsItem_cacheMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setCacheMode, "setCacheMode(self, QGraphicsItem.CacheMode, logicalCacheSize: QSize = QSize())");

extern "C" {static PyObject *meth_QGraphicsItem_setCacheMode(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setCacheMode(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem::CacheMode a0;
        const  ::QSize& a1def = QSize();
        const  ::QSize* a1 = &a1def;
         ::QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            sipName_logicalCacheSize,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BE|J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem_CacheMode, &a0, sipType_QSize, &a1))
        {
            sipCpp->setCacheMode(a0,*a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setCacheMode, doc_QGraphicsItem_setCacheMode);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_isVisibleTo, "isVisibleTo(self, QGraphicsItem) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isVisibleTo(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isVisibleTo(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->isVisibleTo(a0);

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isVisibleTo, doc_QGraphicsItem_isVisibleTo);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_acceptHoverEvents, "acceptHoverEvents(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_acceptHoverEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_acceptHoverEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->acceptHoverEvents();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_acceptHoverEvents, doc_QGraphicsItem_acceptHoverEvents);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setAcceptHoverEvents, "setAcceptHoverEvents(self, bool)");

extern "C" {static PyObject *meth_QGraphicsItem_setAcceptHoverEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setAcceptHoverEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            sipCpp->setAcceptHoverEvents(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setAcceptHoverEvents, doc_QGraphicsItem_setAcceptHoverEvents);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_grabMouse, "grabMouse(self)");

extern "C" {static PyObject *meth_QGraphicsItem_grabMouse(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_grabMouse(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            sipCpp->grabMouse();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_grabMouse, doc_QGraphicsItem_grabMouse);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_ungrabMouse, "ungrabMouse(self)");

extern "C" {static PyObject *meth_QGraphicsItem_ungrabMouse(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_ungrabMouse(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            sipCpp->ungrabMouse();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_ungrabMouse, doc_QGraphicsItem_ungrabMouse);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_grabKeyboard, "grabKeyboard(self)");

extern "C" {static PyObject *meth_QGraphicsItem_grabKeyboard(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_grabKeyboard(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            sipCpp->grabKeyboard();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_grabKeyboard, doc_QGraphicsItem_grabKeyboard);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_ungrabKeyboard, "ungrabKeyboard(self)");

extern "C" {static PyObject *meth_QGraphicsItem_ungrabKeyboard(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_ungrabKeyboard(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            sipCpp->ungrabKeyboard();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_ungrabKeyboard, doc_QGraphicsItem_ungrabKeyboard);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_boundingRegion, "boundingRegion(self, QTransform) -> QRegion");

extern "C" {static PyObject *meth_QGraphicsItem_boundingRegion(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_boundingRegion(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QTransform* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QTransform, &a0))
        {
             ::QRegion*sipRes;

            sipRes = new  ::QRegion(sipCpp->boundingRegion(*a0));

            return sipConvertFromNewType(sipRes,sipType_QRegion,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_boundingRegion, doc_QGraphicsItem_boundingRegion);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_boundingRegionGranularity, "boundingRegionGranularity(self) -> float");

extern "C" {static PyObject *meth_QGraphicsItem_boundingRegionGranularity(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_boundingRegionGranularity(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->boundingRegionGranularity();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_boundingRegionGranularity, doc_QGraphicsItem_boundingRegionGranularity);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setBoundingRegionGranularity, "setBoundingRegionGranularity(self, float)");

extern "C" {static PyObject *meth_QGraphicsItem_setBoundingRegionGranularity(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setBoundingRegionGranularity(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            sipCpp->setBoundingRegionGranularity(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setBoundingRegionGranularity, doc_QGraphicsItem_setBoundingRegionGranularity);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_scroll, "scroll(self, float, float, rect: QRectF = QRectF())");

extern "C" {static PyObject *meth_QGraphicsItem_scroll(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_scroll(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::qreal a1;
        const  ::QRectF& a2def = QRectF();
        const  ::QRectF* a2 = &a2def;
         ::QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
            SIP_NULLPTR,
            sipName_rect,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bdd|J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, sipType_QRectF, &a2))
        {
            sipCpp->scroll(a0,a1,*a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_scroll, doc_QGraphicsItem_scroll);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_commonAncestorItem, "commonAncestorItem(self, QGraphicsItem) -> QGraphicsItem");

extern "C" {static PyObject *meth_QGraphicsItem_commonAncestorItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_commonAncestorItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
             ::QGraphicsItem*sipRes;

            sipRes = sipCpp->commonAncestorItem(a0);

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_commonAncestorItem, doc_QGraphicsItem_commonAncestorItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_isUnderMouse, "isUnderMouse(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isUnderMouse(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isUnderMouse(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isUnderMouse();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isUnderMouse, doc_QGraphicsItem_isUnderMouse);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_opacity, "opacity(self) -> float");

extern "C" {static PyObject *meth_QGraphicsItem_opacity(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_opacity(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->opacity();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_opacity, doc_QGraphicsItem_opacity);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_effectiveOpacity, "effectiveOpacity(self) -> float");

extern "C" {static PyObject *meth_QGraphicsItem_effectiveOpacity(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_effectiveOpacity(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->effectiveOpacity();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_effectiveOpacity, doc_QGraphicsItem_effectiveOpacity);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setOpacity, "setOpacity(self, float)");

extern "C" {static PyObject *meth_QGraphicsItem_setOpacity(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setOpacity(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            sipCpp->setOpacity(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setOpacity, doc_QGraphicsItem_setOpacity);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_itemTransform, "itemTransform(self, QGraphicsItem) -> Tuple[QTransform, bool]");

extern "C" {static PyObject *meth_QGraphicsItem_itemTransform(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_itemTransform(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem* a0;
        bool a1;
        const  ::QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            SIP_NULLPTR,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
             ::QTransform*sipRes;

            sipRes = new  ::QTransform(sipCpp->itemTransform(a0,&a1));

            PyObject *sipResObj = sipConvertFromNewType(sipRes,sipType_QTransform,SIP_NULLPTR);
            return sipBuildResult(0,"(Rb)",sipResObj,a1);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_itemTransform, doc_QGraphicsItem_itemTransform);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_isClipped, "isClipped(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isClipped(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isClipped(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isClipped();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isClipped, doc_QGraphicsItem_isClipped);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_clipPath, "clipPath(self) -> QPainterPath");

extern "C" {static PyObject *meth_QGraphicsItem_clipPath(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_clipPath(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QPainterPath*sipRes;

            sipRes = new  ::QPainterPath(sipCpp->clipPath());

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_clipPath, doc_QGraphicsItem_clipPath);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapRectToItem, "mapRectToItem(self, QGraphicsItem, QRectF) -> QRectF\n"
"mapRectToItem(self, QGraphicsItem, float, float, float, float) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsItem_mapRectToItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapRectToItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem* a0;
        const  ::QRectF* a1;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QRectF, &a1))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->mapRectToItem(a0,*a1));

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    {
        const  ::QGraphicsItem* a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
         ::qreal a4;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8dddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, &a1, &a2, &a3, &a4))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->mapRectToItem(a0,a1,a2,a3,a4));

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapRectToItem, doc_QGraphicsItem_mapRectToItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapRectToParent, "mapRectToParent(self, QRectF) -> QRectF\n"
"mapRectToParent(self, float, float, float, float) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsItem_mapRectToParent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapRectToParent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QRectF* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->mapRectToParent(*a0));

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->mapRectToParent(a0,a1,a2,a3));

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapRectToParent, doc_QGraphicsItem_mapRectToParent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapRectToScene, "mapRectToScene(self, QRectF) -> QRectF\n"
"mapRectToScene(self, float, float, float, float) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsItem_mapRectToScene(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapRectToScene(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QRectF* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->mapRectToScene(*a0));

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->mapRectToScene(a0,a1,a2,a3));

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapRectToScene, doc_QGraphicsItem_mapRectToScene);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapRectFromItem, "mapRectFromItem(self, QGraphicsItem, QRectF) -> QRectF\n"
"mapRectFromItem(self, QGraphicsItem, float, float, float, float) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsItem_mapRectFromItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapRectFromItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem* a0;
        const  ::QRectF* a1;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QRectF, &a1))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->mapRectFromItem(a0,*a1));

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    {
        const  ::QGraphicsItem* a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
         ::qreal a4;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8dddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, &a1, &a2, &a3, &a4))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->mapRectFromItem(a0,a1,a2,a3,a4));

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapRectFromItem, doc_QGraphicsItem_mapRectFromItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapRectFromParent, "mapRectFromParent(self, QRectF) -> QRectF\n"
"mapRectFromParent(self, float, float, float, float) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsItem_mapRectFromParent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapRectFromParent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QRectF* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->mapRectFromParent(*a0));

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->mapRectFromParent(a0,a1,a2,a3));

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapRectFromParent, doc_QGraphicsItem_mapRectFromParent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapRectFromScene, "mapRectFromScene(self, QRectF) -> QRectF\n"
"mapRectFromScene(self, float, float, float, float) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsItem_mapRectFromScene(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapRectFromScene(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QRectF* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->mapRectFromScene(*a0));

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::qreal a3;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3))
        {
             ::QRectF*sipRes;

            sipRes = new  ::QRectF(sipCpp->mapRectFromScene(a0,a1,a2,a3));

            return sipConvertFromNewType(sipRes,sipType_QRectF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapRectFromScene, doc_QGraphicsItem_mapRectFromScene);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_parentObject, "parentObject(self) -> QGraphicsObject");

extern "C" {static PyObject *meth_QGraphicsItem_parentObject(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_parentObject(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QGraphicsObject*sipRes;

            sipRes = sipCpp->parentObject();

            return sipConvertFromType(sipRes,sipType_QGraphicsObject,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_parentObject, doc_QGraphicsItem_parentObject);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_panel, "panel(self) -> QGraphicsItem");

extern "C" {static PyObject *meth_QGraphicsItem_panel(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_panel(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QGraphicsItem*sipRes;

            sipRes = sipCpp->panel();

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_panel, doc_QGraphicsItem_panel);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_isPanel, "isPanel(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isPanel(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isPanel(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isPanel();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isPanel, doc_QGraphicsItem_isPanel);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_toGraphicsObject, "toGraphicsObject(self) -> QGraphicsObject");

extern "C" {static PyObject *meth_QGraphicsItem_toGraphicsObject(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_toGraphicsObject(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QGraphicsObject*sipRes;

            sipRes = sipCpp->toGraphicsObject();

            return sipConvertFromType(sipRes,sipType_QGraphicsObject,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_toGraphicsObject, doc_QGraphicsItem_toGraphicsObject);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_panelModality, "panelModality(self) -> QGraphicsItem.PanelModality");

extern "C" {static PyObject *meth_QGraphicsItem_panelModality(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_panelModality(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QGraphicsItem::PanelModality sipRes;

            sipRes = sipCpp->panelModality();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QGraphicsItem_PanelModality);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_panelModality, doc_QGraphicsItem_panelModality);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setPanelModality, "setPanelModality(self, QGraphicsItem.PanelModality)");

extern "C" {static PyObject *meth_QGraphicsItem_setPanelModality(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setPanelModality(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem::PanelModality a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem_PanelModality, &a0))
        {
            sipCpp->setPanelModality(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setPanelModality, doc_QGraphicsItem_setPanelModality);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_isBlockedByModalPanel, "isBlockedByModalPanel(self) -> Tuple[bool, QGraphicsItem]");

extern "C" {static PyObject *meth_QGraphicsItem_isBlockedByModalPanel(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isBlockedByModalPanel(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem* a0;
        const  ::QGraphicsItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isBlockedByModalPanel(&a0);

            return sipBuildResult(0,"(bD)",sipRes,a0,sipType_QGraphicsItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isBlockedByModalPanel, doc_QGraphicsItem_isBlockedByModalPanel);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_graphicsEffect, "graphicsEffect(self) -> QGraphicsEffect");

extern "C" {static PyObject *meth_QGraphicsItem_graphicsEffect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_graphicsEffect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QGraphicsEffect*sipRes;

            sipRes = sipCpp->graphicsEffect();

            return sipConvertFromType(sipRes,sipType_QGraphicsEffect,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_graphicsEffect, doc_QGraphicsItem_graphicsEffect);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setGraphicsEffect, "setGraphicsEffect(self, QGraphicsEffect)");

extern "C" {static PyObject *meth_QGraphicsItem_setGraphicsEffect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setGraphicsEffect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsEffect* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsEffect, &a0))
        {
            sipCpp->setGraphicsEffect(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setGraphicsEffect, doc_QGraphicsItem_setGraphicsEffect);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_acceptTouchEvents, "acceptTouchEvents(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_acceptTouchEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_acceptTouchEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->acceptTouchEvents();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_acceptTouchEvents, doc_QGraphicsItem_acceptTouchEvents);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setAcceptTouchEvents, "setAcceptTouchEvents(self, bool)");

extern "C" {static PyObject *meth_QGraphicsItem_setAcceptTouchEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setAcceptTouchEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            sipCpp->setAcceptTouchEvents(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setAcceptTouchEvents, doc_QGraphicsItem_setAcceptTouchEvents);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_filtersChildEvents, "filtersChildEvents(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_filtersChildEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_filtersChildEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->filtersChildEvents();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_filtersChildEvents, doc_QGraphicsItem_filtersChildEvents);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setFiltersChildEvents, "setFiltersChildEvents(self, bool)");

extern "C" {static PyObject *meth_QGraphicsItem_setFiltersChildEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setFiltersChildEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            sipCpp->setFiltersChildEvents(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setFiltersChildEvents, doc_QGraphicsItem_setFiltersChildEvents);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_isActive, "isActive(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isActive(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isActive(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isActive();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isActive, doc_QGraphicsItem_isActive);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setActive, "setActive(self, bool)");

extern "C" {static PyObject *meth_QGraphicsItem_setActive(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setActive(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            sipCpp->setActive(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setActive, doc_QGraphicsItem_setActive);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_focusProxy, "focusProxy(self) -> QGraphicsItem");

extern "C" {static PyObject *meth_QGraphicsItem_focusProxy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_focusProxy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QGraphicsItem*sipRes;

            sipRes = sipCpp->focusProxy();

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_focusProxy, doc_QGraphicsItem_focusProxy);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setFocusProxy, "setFocusProxy(self, QGraphicsItem)");

extern "C" {static PyObject *meth_QGraphicsItem_setFocusProxy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setFocusProxy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem* a0;
        PyObject *a0Keep;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0Keep, sipType_QGraphicsItem, &a0))
        {
            sipCpp->setFocusProxy(a0);

            sipKeepReference(sipSelf, -23, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setFocusProxy, doc_QGraphicsItem_setFocusProxy);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_focusItem, "focusItem(self) -> QGraphicsItem");

extern "C" {static PyObject *meth_QGraphicsItem_focusItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_focusItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QGraphicsItem*sipRes;

            sipRes = sipCpp->focusItem();

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_focusItem, doc_QGraphicsItem_focusItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setX, "setX(self, float)");

extern "C" {static PyObject *meth_QGraphicsItem_setX(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setX(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            sipCpp->setX(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setX, doc_QGraphicsItem_setX);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setY, "setY(self, float)");

extern "C" {static PyObject *meth_QGraphicsItem_setY(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setY(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            sipCpp->setY(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setY, doc_QGraphicsItem_setY);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setRotation, "setRotation(self, float)");

extern "C" {static PyObject *meth_QGraphicsItem_setRotation(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setRotation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            sipCpp->setRotation(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setRotation, doc_QGraphicsItem_setRotation);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_rotation, "rotation(self) -> float");

extern "C" {static PyObject *meth_QGraphicsItem_rotation(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_rotation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->rotation();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_rotation, doc_QGraphicsItem_rotation);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setScale, "setScale(self, float)");

extern "C" {static PyObject *meth_QGraphicsItem_setScale(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setScale(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::qreal a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            sipCpp->setScale(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setScale, doc_QGraphicsItem_setScale);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_scale, "scale(self) -> float");

extern "C" {static PyObject *meth_QGraphicsItem_scale(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_scale(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->scale();

            return PyFloat_FromDouble(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_scale, doc_QGraphicsItem_scale);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_transformations, "transformations(self) -> List[QGraphicsTransform]");

extern "C" {static PyObject *meth_QGraphicsItem_transformations(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_transformations(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QList< ::QGraphicsTransform*>*sipRes;

            sipRes = new QList< ::QGraphicsTransform*>(sipCpp->transformations());

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsTransform,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_transformations, doc_QGraphicsItem_transformations);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setTransformations, "setTransformations(self, Iterable[QGraphicsTransform])");

extern "C" {static PyObject *meth_QGraphicsItem_setTransformations(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setTransformations(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const QList< ::QGraphicsTransform*>* a0;
        PyObject *a0Keep;
        int a0State = 0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J1", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0Keep, sipType_QList_0101QGraphicsTransform,&a0, &a0State))
        {
            sipCpp->setTransformations(*a0);

            sipKeepReference(sipSelf, -24, a0Keep);
            sipReleaseType(const_cast<QList< ::QGraphicsTransform*> *>(a0),sipType_QList_0101QGraphicsTransform,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setTransformations, doc_QGraphicsItem_setTransformations);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_transformOriginPoint, "transformOriginPoint(self) -> QPointF");

extern "C" {static PyObject *meth_QGraphicsItem_transformOriginPoint(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_transformOriginPoint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::QPointF*sipRes;

            sipRes = new  ::QPointF(sipCpp->transformOriginPoint());

            return sipConvertFromNewType(sipRes,sipType_QPointF,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_transformOriginPoint, doc_QGraphicsItem_transformOriginPoint);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setTransformOriginPoint, "setTransformOriginPoint(self, Union[QPointF, QPoint])\n"
"setTransformOriginPoint(self, float, float)");

extern "C" {static PyObject *meth_QGraphicsItem_setTransformOriginPoint(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setTransformOriginPoint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QPointF* a0;
        int a0State = 0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
            sipCpp->setTransformOriginPoint(*a0);
            sipReleaseType(const_cast< ::QPointF *>(a0),sipType_QPointF,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
         ::qreal a0;
         ::qreal a1;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1))
        {
            sipCpp->setTransformOriginPoint(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setTransformOriginPoint, doc_QGraphicsItem_setTransformOriginPoint);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_stackBefore, "stackBefore(self, QGraphicsItem)");

extern "C" {static PyObject *meth_QGraphicsItem_stackBefore(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_stackBefore(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem* a0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            sipCpp->stackBefore(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_stackBefore, doc_QGraphicsItem_stackBefore);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_inputMethodHints, "inputMethodHints(self) -> Qt.InputMethodHints");

extern "C" {static PyObject *meth_QGraphicsItem_inputMethodHints(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_inputMethodHints(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
             ::Qt::InputMethodHints*sipRes;

            sipRes = new  ::Qt::InputMethodHints(sipCpp->inputMethodHints());

            return sipConvertFromNewType(sipRes,sipType_Qt_InputMethodHints,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_inputMethodHints, doc_QGraphicsItem_inputMethodHints);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_setInputMethodHints, "setInputMethodHints(self, Union[Qt.InputMethodHints, Qt.InputMethodHint])");

extern "C" {static PyObject *meth_QGraphicsItem_setInputMethodHints(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setInputMethodHints(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::Qt::InputMethodHints* a0;
        int a0State = 0;
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_Qt_InputMethodHints, &a0, &a0State))
        {
            sipCpp->setInputMethodHints(*a0);
            sipReleaseType(a0,sipType_Qt_InputMethodHints,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setInputMethodHints, doc_QGraphicsItem_setInputMethodHints);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QGraphicsItem_updateMicroFocus, "updateMicroFocus(self)");

extern "C" {static PyObject *meth_QGraphicsItem_updateMicroFocus(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_updateMicroFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            sipCpp->updateMicroFocus();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_updateMicroFocus, doc_QGraphicsItem_updateMicroFocus);

    return SIP_NULLPTR;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsItem(void *, int);}
static void release_QGraphicsItem(void *sipCppV, int sipState)
{
    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQGraphicsItem *>(sipCppV);
    else
        delete reinterpret_cast< ::QGraphicsItem *>(sipCppV);
}


extern "C" {static void dealloc_QGraphicsItem(sipSimpleWrapper *);}
static void dealloc_QGraphicsItem(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQGraphicsItem *>(sipGetAddress(sipSelf))->sipPySelf = SIP_NULLPTR;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QGraphicsItem(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QGraphicsItem(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QGraphicsItem(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsItem *sipCpp = SIP_NULLPTR;

    {
         ::QGraphicsItem* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QGraphicsItem, &a0, sipOwner))
        {
            sipCpp = new sipQGraphicsItem(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


static PyMethodDef methods_QGraphicsItem[] = {
    {sipName_acceptDrops, meth_QGraphicsItem_acceptDrops, METH_VARARGS, doc_QGraphicsItem_acceptDrops},
    {sipName_acceptHoverEvents, meth_QGraphicsItem_acceptHoverEvents, METH_VARARGS, doc_QGraphicsItem_acceptHoverEvents},
    {sipName_acceptTouchEvents, meth_QGraphicsItem_acceptTouchEvents, METH_VARARGS, doc_QGraphicsItem_acceptTouchEvents},
    {sipName_acceptedMouseButtons, meth_QGraphicsItem_acceptedMouseButtons, METH_VARARGS, doc_QGraphicsItem_acceptedMouseButtons},
    {sipName_advance, meth_QGraphicsItem_advance, METH_VARARGS, doc_QGraphicsItem_advance},
    {sipName_boundingRect, meth_QGraphicsItem_boundingRect, METH_VARARGS, doc_QGraphicsItem_boundingRect},
    {sipName_boundingRegion, meth_QGraphicsItem_boundingRegion, METH_VARARGS, doc_QGraphicsItem_boundingRegion},
    {sipName_boundingRegionGranularity, meth_QGraphicsItem_boundingRegionGranularity, METH_VARARGS, doc_QGraphicsItem_boundingRegionGranularity},
    {sipName_cacheMode, meth_QGraphicsItem_cacheMode, METH_VARARGS, doc_QGraphicsItem_cacheMode},
    {sipName_childItems, meth_QGraphicsItem_childItems, METH_VARARGS, doc_QGraphicsItem_childItems},
    {sipName_childrenBoundingRect, meth_QGraphicsItem_childrenBoundingRect, METH_VARARGS, doc_QGraphicsItem_childrenBoundingRect},
    {sipName_clearFocus, meth_QGraphicsItem_clearFocus, METH_VARARGS, doc_QGraphicsItem_clearFocus},
    {sipName_clipPath, meth_QGraphicsItem_clipPath, METH_VARARGS, doc_QGraphicsItem_clipPath},
    {sipName_collidesWithItem, SIP_MLMETH_CAST(meth_QGraphicsItem_collidesWithItem), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsItem_collidesWithItem},
    {sipName_collidesWithPath, SIP_MLMETH_CAST(meth_QGraphicsItem_collidesWithPath), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsItem_collidesWithPath},
    {sipName_collidingItems, SIP_MLMETH_CAST(meth_QGraphicsItem_collidingItems), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsItem_collidingItems},
    {sipName_commonAncestorItem, meth_QGraphicsItem_commonAncestorItem, METH_VARARGS, doc_QGraphicsItem_commonAncestorItem},
    {sipName_contains, meth_QGraphicsItem_contains, METH_VARARGS, doc_QGraphicsItem_contains},
    {sipName_contextMenuEvent, meth_QGraphicsItem_contextMenuEvent, METH_VARARGS, doc_QGraphicsItem_contextMenuEvent},
    {sipName_cursor, meth_QGraphicsItem_cursor, METH_VARARGS, doc_QGraphicsItem_cursor},
    {sipName_data, meth_QGraphicsItem_data, METH_VARARGS, doc_QGraphicsItem_data},
    {sipName_deviceTransform, meth_QGraphicsItem_deviceTransform, METH_VARARGS, doc_QGraphicsItem_deviceTransform},
    {sipName_dragEnterEvent, meth_QGraphicsItem_dragEnterEvent, METH_VARARGS, doc_QGraphicsItem_dragEnterEvent},
    {sipName_dragLeaveEvent, meth_QGraphicsItem_dragLeaveEvent, METH_VARARGS, doc_QGraphicsItem_dragLeaveEvent},
    {sipName_dragMoveEvent, meth_QGraphicsItem_dragMoveEvent, METH_VARARGS, doc_QGraphicsItem_dragMoveEvent},
    {sipName_dropEvent, meth_QGraphicsItem_dropEvent, METH_VARARGS, doc_QGraphicsItem_dropEvent},
    {sipName_effectiveOpacity, meth_QGraphicsItem_effectiveOpacity, METH_VARARGS, doc_QGraphicsItem_effectiveOpacity},
    {sipName_ensureVisible, SIP_MLMETH_CAST(meth_QGraphicsItem_ensureVisible), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsItem_ensureVisible},
    {sipName_filtersChildEvents, meth_QGraphicsItem_filtersChildEvents, METH_VARARGS, doc_QGraphicsItem_filtersChildEvents},
    {sipName_flags, meth_QGraphicsItem_flags, METH_VARARGS, doc_QGraphicsItem_flags},
    {sipName_focusInEvent, meth_QGraphicsItem_focusInEvent, METH_VARARGS, doc_QGraphicsItem_focusInEvent},
    {sipName_focusItem, meth_QGraphicsItem_focusItem, METH_VARARGS, doc_QGraphicsItem_focusItem},
    {sipName_focusOutEvent, meth_QGraphicsItem_focusOutEvent, METH_VARARGS, doc_QGraphicsItem_focusOutEvent},
    {sipName_focusProxy, meth_QGraphicsItem_focusProxy, METH_VARARGS, doc_QGraphicsItem_focusProxy},
    {sipName_grabKeyboard, meth_QGraphicsItem_grabKeyboard, METH_VARARGS, doc_QGraphicsItem_grabKeyboard},
    {sipName_grabMouse, meth_QGraphicsItem_grabMouse, METH_VARARGS, doc_QGraphicsItem_grabMouse},
    {sipName_graphicsEffect, meth_QGraphicsItem_graphicsEffect, METH_VARARGS, doc_QGraphicsItem_graphicsEffect},
    {sipName_group, meth_QGraphicsItem_group, METH_VARARGS, doc_QGraphicsItem_group},
    {sipName_hasCursor, meth_QGraphicsItem_hasCursor, METH_VARARGS, doc_QGraphicsItem_hasCursor},
    {sipName_hasFocus, meth_QGraphicsItem_hasFocus, METH_VARARGS, doc_QGraphicsItem_hasFocus},
    {sipName_hide, meth_QGraphicsItem_hide, METH_VARARGS, doc_QGraphicsItem_hide},
    {sipName_hoverEnterEvent, meth_QGraphicsItem_hoverEnterEvent, METH_VARARGS, doc_QGraphicsItem_hoverEnterEvent},
    {sipName_hoverLeaveEvent, meth_QGraphicsItem_hoverLeaveEvent, METH_VARARGS, doc_QGraphicsItem_hoverLeaveEvent},
    {sipName_hoverMoveEvent, meth_QGraphicsItem_hoverMoveEvent, METH_VARARGS, doc_QGraphicsItem_hoverMoveEvent},
    {sipName_inputMethodEvent, meth_QGraphicsItem_inputMethodEvent, METH_VARARGS, doc_QGraphicsItem_inputMethodEvent},
    {sipName_inputMethodHints, meth_QGraphicsItem_inputMethodHints, METH_VARARGS, doc_QGraphicsItem_inputMethodHints},
    {sipName_inputMethodQuery, meth_QGraphicsItem_inputMethodQuery, METH_VARARGS, doc_QGraphicsItem_inputMethodQuery},
    {sipName_installSceneEventFilter, meth_QGraphicsItem_installSceneEventFilter, METH_VARARGS, doc_QGraphicsItem_installSceneEventFilter},
    {sipName_isActive, meth_QGraphicsItem_isActive, METH_VARARGS, doc_QGraphicsItem_isActive},
    {sipName_isAncestorOf, meth_QGraphicsItem_isAncestorOf, METH_VARARGS, doc_QGraphicsItem_isAncestorOf},
    {sipName_isBlockedByModalPanel, SIP_MLMETH_CAST(meth_QGraphicsItem_isBlockedByModalPanel), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsItem_isBlockedByModalPanel},
    {sipName_isClipped, meth_QGraphicsItem_isClipped, METH_VARARGS, doc_QGraphicsItem_isClipped},
    {sipName_isEnabled, meth_QGraphicsItem_isEnabled, METH_VARARGS, doc_QGraphicsItem_isEnabled},
    {sipName_isObscured, SIP_MLMETH_CAST(meth_QGraphicsItem_isObscured), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsItem_isObscured},
    {sipName_isObscuredBy, meth_QGraphicsItem_isObscuredBy, METH_VARARGS, doc_QGraphicsItem_isObscuredBy},
    {sipName_isPanel, meth_QGraphicsItem_isPanel, METH_VARARGS, doc_QGraphicsItem_isPanel},
    {sipName_isSelected, meth_QGraphicsItem_isSelected, METH_VARARGS, doc_QGraphicsItem_isSelected},
    {sipName_isUnderMouse, meth_QGraphicsItem_isUnderMouse, METH_VARARGS, doc_QGraphicsItem_isUnderMouse},
    {sipName_isVisible, meth_QGraphicsItem_isVisible, METH_VARARGS, doc_QGraphicsItem_isVisible},
    {sipName_isVisibleTo, meth_QGraphicsItem_isVisibleTo, METH_VARARGS, doc_QGraphicsItem_isVisibleTo},
    {sipName_isWidget, meth_QGraphicsItem_isWidget, METH_VARARGS, doc_QGraphicsItem_isWidget},
    {sipName_isWindow, meth_QGraphicsItem_isWindow, METH_VARARGS, doc_QGraphicsItem_isWindow},
    {sipName_itemChange, meth_QGraphicsItem_itemChange, METH_VARARGS, doc_QGraphicsItem_itemChange},
    {sipName_itemTransform, SIP_MLMETH_CAST(meth_QGraphicsItem_itemTransform), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsItem_itemTransform},
    {sipName_keyPressEvent, meth_QGraphicsItem_keyPressEvent, METH_VARARGS, doc_QGraphicsItem_keyPressEvent},
    {sipName_keyReleaseEvent, meth_QGraphicsItem_keyReleaseEvent, METH_VARARGS, doc_QGraphicsItem_keyReleaseEvent},
    {sipName_mapFromItem, meth_QGraphicsItem_mapFromItem, METH_VARARGS, doc_QGraphicsItem_mapFromItem},
    {sipName_mapFromParent, meth_QGraphicsItem_mapFromParent, METH_VARARGS, doc_QGraphicsItem_mapFromParent},
    {sipName_mapFromScene, meth_QGraphicsItem_mapFromScene, METH_VARARGS, doc_QGraphicsItem_mapFromScene},
    {sipName_mapRectFromItem, meth_QGraphicsItem_mapRectFromItem, METH_VARARGS, doc_QGraphicsItem_mapRectFromItem},
    {sipName_mapRectFromParent, meth_QGraphicsItem_mapRectFromParent, METH_VARARGS, doc_QGraphicsItem_mapRectFromParent},
    {sipName_mapRectFromScene, meth_QGraphicsItem_mapRectFromScene, METH_VARARGS, doc_QGraphicsItem_mapRectFromScene},
    {sipName_mapRectToItem, meth_QGraphicsItem_mapRectToItem, METH_VARARGS, doc_QGraphicsItem_mapRectToItem},
    {sipName_mapRectToParent, meth_QGraphicsItem_mapRectToParent, METH_VARARGS, doc_QGraphicsItem_mapRectToParent},
    {sipName_mapRectToScene, meth_QGraphicsItem_mapRectToScene, METH_VARARGS, doc_QGraphicsItem_mapRectToScene},
    {sipName_mapToItem, meth_QGraphicsItem_mapToItem, METH_VARARGS, doc_QGraphicsItem_mapToItem},
    {sipName_mapToParent, meth_QGraphicsItem_mapToParent, METH_VARARGS, doc_QGraphicsItem_mapToParent},
    {sipName_mapToScene, meth_QGraphicsItem_mapToScene, METH_VARARGS, doc_QGraphicsItem_mapToScene},
    {sipName_mouseDoubleClickEvent, meth_QGraphicsItem_mouseDoubleClickEvent, METH_VARARGS, doc_QGraphicsItem_mouseDoubleClickEvent},
    {sipName_mouseMoveEvent, meth_QGraphicsItem_mouseMoveEvent, METH_VARARGS, doc_QGraphicsItem_mouseMoveEvent},
    {sipName_mousePressEvent, meth_QGraphicsItem_mousePressEvent, METH_VARARGS, doc_QGraphicsItem_mousePressEvent},
    {sipName_mouseReleaseEvent, meth_QGraphicsItem_mouseReleaseEvent, METH_VARARGS, doc_QGraphicsItem_mouseReleaseEvent},
    {sipName_moveBy, meth_QGraphicsItem_moveBy, METH_VARARGS, doc_QGraphicsItem_moveBy},
    {sipName_opacity, meth_QGraphicsItem_opacity, METH_VARARGS, doc_QGraphicsItem_opacity},
    {sipName_opaqueArea, meth_QGraphicsItem_opaqueArea, METH_VARARGS, doc_QGraphicsItem_opaqueArea},
    {sipName_paint, SIP_MLMETH_CAST(meth_QGraphicsItem_paint), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsItem_paint},
    {sipName_panel, meth_QGraphicsItem_panel, METH_VARARGS, doc_QGraphicsItem_panel},
    {sipName_panelModality, meth_QGraphicsItem_panelModality, METH_VARARGS, doc_QGraphicsItem_panelModality},
    {sipName_parentItem, meth_QGraphicsItem_parentItem, METH_VARARGS, doc_QGraphicsItem_parentItem},
    {sipName_parentObject, meth_QGraphicsItem_parentObject, METH_VARARGS, doc_QGraphicsItem_parentObject},
    {sipName_parentWidget, meth_QGraphicsItem_parentWidget, METH_VARARGS, doc_QGraphicsItem_parentWidget},
    {sipName_pos, meth_QGraphicsItem_pos, METH_VARARGS, doc_QGraphicsItem_pos},
    {sipName_prepareGeometryChange, meth_QGraphicsItem_prepareGeometryChange, METH_VARARGS, doc_QGraphicsItem_prepareGeometryChange},
    {sipName_removeSceneEventFilter, meth_QGraphicsItem_removeSceneEventFilter, METH_VARARGS, doc_QGraphicsItem_removeSceneEventFilter},
    {sipName_resetTransform, meth_QGraphicsItem_resetTransform, METH_VARARGS, doc_QGraphicsItem_resetTransform},
    {sipName_rotation, meth_QGraphicsItem_rotation, METH_VARARGS, doc_QGraphicsItem_rotation},
    {sipName_scale, meth_QGraphicsItem_scale, METH_VARARGS, doc_QGraphicsItem_scale},
    {sipName_scene, meth_QGraphicsItem_scene, METH_VARARGS, doc_QGraphicsItem_scene},
    {sipName_sceneBoundingRect, meth_QGraphicsItem_sceneBoundingRect, METH_VARARGS, doc_QGraphicsItem_sceneBoundingRect},
    {sipName_sceneEvent, meth_QGraphicsItem_sceneEvent, METH_VARARGS, doc_QGraphicsItem_sceneEvent},
    {sipName_sceneEventFilter, meth_QGraphicsItem_sceneEventFilter, METH_VARARGS, doc_QGraphicsItem_sceneEventFilter},
    {sipName_scenePos, meth_QGraphicsItem_scenePos, METH_VARARGS, doc_QGraphicsItem_scenePos},
    {sipName_sceneTransform, meth_QGraphicsItem_sceneTransform, METH_VARARGS, doc_QGraphicsItem_sceneTransform},
    {sipName_scroll, SIP_MLMETH_CAST(meth_QGraphicsItem_scroll), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsItem_scroll},
    {sipName_setAcceptDrops, meth_QGraphicsItem_setAcceptDrops, METH_VARARGS, doc_QGraphicsItem_setAcceptDrops},
    {sipName_setAcceptHoverEvents, meth_QGraphicsItem_setAcceptHoverEvents, METH_VARARGS, doc_QGraphicsItem_setAcceptHoverEvents},
    {sipName_setAcceptTouchEvents, meth_QGraphicsItem_setAcceptTouchEvents, METH_VARARGS, doc_QGraphicsItem_setAcceptTouchEvents},
    {sipName_setAcceptedMouseButtons, meth_QGraphicsItem_setAcceptedMouseButtons, METH_VARARGS, doc_QGraphicsItem_setAcceptedMouseButtons},
    {sipName_setActive, meth_QGraphicsItem_setActive, METH_VARARGS, doc_QGraphicsItem_setActive},
    {sipName_setBoundingRegionGranularity, meth_QGraphicsItem_setBoundingRegionGranularity, METH_VARARGS, doc_QGraphicsItem_setBoundingRegionGranularity},
    {sipName_setCacheMode, SIP_MLMETH_CAST(meth_QGraphicsItem_setCacheMode), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsItem_setCacheMode},
    {sipName_setCursor, meth_QGraphicsItem_setCursor, METH_VARARGS, doc_QGraphicsItem_setCursor},
    {sipName_setData, meth_QGraphicsItem_setData, METH_VARARGS, doc_QGraphicsItem_setData},
    {sipName_setEnabled, meth_QGraphicsItem_setEnabled, METH_VARARGS, doc_QGraphicsItem_setEnabled},
    {sipName_setFiltersChildEvents, meth_QGraphicsItem_setFiltersChildEvents, METH_VARARGS, doc_QGraphicsItem_setFiltersChildEvents},
    {sipName_setFlag, SIP_MLMETH_CAST(meth_QGraphicsItem_setFlag), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsItem_setFlag},
    {sipName_setFlags, meth_QGraphicsItem_setFlags, METH_VARARGS, doc_QGraphicsItem_setFlags},
    {sipName_setFocus, SIP_MLMETH_CAST(meth_QGraphicsItem_setFocus), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsItem_setFocus},
    {sipName_setFocusProxy, meth_QGraphicsItem_setFocusProxy, METH_VARARGS, doc_QGraphicsItem_setFocusProxy},
    {sipName_setGraphicsEffect, meth_QGraphicsItem_setGraphicsEffect, METH_VARARGS, doc_QGraphicsItem_setGraphicsEffect},
    {sipName_setGroup, meth_QGraphicsItem_setGroup, METH_VARARGS, doc_QGraphicsItem_setGroup},
    {sipName_setInputMethodHints, meth_QGraphicsItem_setInputMethodHints, METH_VARARGS, doc_QGraphicsItem_setInputMethodHints},
    {sipName_setOpacity, meth_QGraphicsItem_setOpacity, METH_VARARGS, doc_QGraphicsItem_setOpacity},
    {sipName_setPanelModality, meth_QGraphicsItem_setPanelModality, METH_VARARGS, doc_QGraphicsItem_setPanelModality},
    {sipName_setParentItem, meth_QGraphicsItem_setParentItem, METH_VARARGS, doc_QGraphicsItem_setParentItem},
    {sipName_setPos, meth_QGraphicsItem_setPos, METH_VARARGS, doc_QGraphicsItem_setPos},
    {sipName_setRotation, meth_QGraphicsItem_setRotation, METH_VARARGS, doc_QGraphicsItem_setRotation},
    {sipName_setScale, meth_QGraphicsItem_setScale, METH_VARARGS, doc_QGraphicsItem_setScale},
    {sipName_setSelected, meth_QGraphicsItem_setSelected, METH_VARARGS, doc_QGraphicsItem_setSelected},
    {sipName_setToolTip, meth_QGraphicsItem_setToolTip, METH_VARARGS, doc_QGraphicsItem_setToolTip},
    {sipName_setTransform, SIP_MLMETH_CAST(meth_QGraphicsItem_setTransform), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsItem_setTransform},
    {sipName_setTransformOriginPoint, meth_QGraphicsItem_setTransformOriginPoint, METH_VARARGS, doc_QGraphicsItem_setTransformOriginPoint},
    {sipName_setTransformations, meth_QGraphicsItem_setTransformations, METH_VARARGS, doc_QGraphicsItem_setTransformations},
    {sipName_setVisible, meth_QGraphicsItem_setVisible, METH_VARARGS, doc_QGraphicsItem_setVisible},
    {sipName_setX, meth_QGraphicsItem_setX, METH_VARARGS, doc_QGraphicsItem_setX},
    {sipName_setY, meth_QGraphicsItem_setY, METH_VARARGS, doc_QGraphicsItem_setY},
    {sipName_setZValue, meth_QGraphicsItem_setZValue, METH_VARARGS, doc_QGraphicsItem_setZValue},
    {sipName_shape, meth_QGraphicsItem_shape, METH_VARARGS, doc_QGraphicsItem_shape},
    {sipName_show, meth_QGraphicsItem_show, METH_VARARGS, doc_QGraphicsItem_show},
    {sipName_stackBefore, meth_QGraphicsItem_stackBefore, METH_VARARGS, doc_QGraphicsItem_stackBefore},
    {sipName_toGraphicsObject, meth_QGraphicsItem_toGraphicsObject, METH_VARARGS, doc_QGraphicsItem_toGraphicsObject},
    {sipName_toolTip, meth_QGraphicsItem_toolTip, METH_VARARGS, doc_QGraphicsItem_toolTip},
    {sipName_topLevelItem, meth_QGraphicsItem_topLevelItem, METH_VARARGS, doc_QGraphicsItem_topLevelItem},
    {sipName_topLevelWidget, meth_QGraphicsItem_topLevelWidget, METH_VARARGS, doc_QGraphicsItem_topLevelWidget},
    {sipName_transform, meth_QGraphicsItem_transform, METH_VARARGS, doc_QGraphicsItem_transform},
    {sipName_transformOriginPoint, meth_QGraphicsItem_transformOriginPoint, METH_VARARGS, doc_QGraphicsItem_transformOriginPoint},
    {sipName_transformations, meth_QGraphicsItem_transformations, METH_VARARGS, doc_QGraphicsItem_transformations},
    {sipName_type, meth_QGraphicsItem_type, METH_VARARGS, doc_QGraphicsItem_type},
    {sipName_ungrabKeyboard, meth_QGraphicsItem_ungrabKeyboard, METH_VARARGS, doc_QGraphicsItem_ungrabKeyboard},
    {sipName_ungrabMouse, meth_QGraphicsItem_ungrabMouse, METH_VARARGS, doc_QGraphicsItem_ungrabMouse},
    {sipName_unsetCursor, meth_QGraphicsItem_unsetCursor, METH_VARARGS, doc_QGraphicsItem_unsetCursor},
    {sipName_update, SIP_MLMETH_CAST(meth_QGraphicsItem_update), METH_VARARGS|METH_KEYWORDS, doc_QGraphicsItem_update},
    {sipName_updateMicroFocus, meth_QGraphicsItem_updateMicroFocus, METH_VARARGS, doc_QGraphicsItem_updateMicroFocus},
    {sipName_wheelEvent, meth_QGraphicsItem_wheelEvent, METH_VARARGS, doc_QGraphicsItem_wheelEvent},
    {sipName_window, meth_QGraphicsItem_window, METH_VARARGS, doc_QGraphicsItem_window},
    {sipName_x, meth_QGraphicsItem_x, METH_VARARGS, doc_QGraphicsItem_x},
    {sipName_y, meth_QGraphicsItem_y, METH_VARARGS, doc_QGraphicsItem_y},
    {sipName_zValue, meth_QGraphicsItem_zValue, METH_VARARGS, doc_QGraphicsItem_zValue}
};

static sipEnumMemberDef enummembers_QGraphicsItem[] = {
    {sipName_DeviceCoordinateCache, static_cast<int>( ::QGraphicsItem::DeviceCoordinateCache), 124},
    {sipName_ItemAcceptsInputMethod, static_cast<int>( ::QGraphicsItem::ItemAcceptsInputMethod), 126},
    {sipName_ItemChildAddedChange, static_cast<int>( ::QGraphicsItem::ItemChildAddedChange), 125},
    {sipName_ItemChildRemovedChange, static_cast<int>( ::QGraphicsItem::ItemChildRemovedChange), 125},
    {sipName_ItemClipsChildrenToShape, static_cast<int>( ::QGraphicsItem::ItemClipsChildrenToShape), 126},
    {sipName_ItemClipsToShape, static_cast<int>( ::QGraphicsItem::ItemClipsToShape), 126},
    {sipName_ItemContainsChildrenInShape, static_cast<int>( ::QGraphicsItem::ItemContainsChildrenInShape), 126},
    {sipName_ItemCoordinateCache, static_cast<int>( ::QGraphicsItem::ItemCoordinateCache), 124},
    {sipName_ItemCursorChange, static_cast<int>( ::QGraphicsItem::ItemCursorChange), 125},
    {sipName_ItemCursorHasChanged, static_cast<int>( ::QGraphicsItem::ItemCursorHasChanged), 125},
    {sipName_ItemDoesntPropagateOpacityToChildren, static_cast<int>( ::QGraphicsItem::ItemDoesntPropagateOpacityToChildren), 126},
    {sipName_ItemEnabledChange, static_cast<int>( ::QGraphicsItem::ItemEnabledChange), 125},
    {sipName_ItemEnabledHasChanged, static_cast<int>( ::QGraphicsItem::ItemEnabledHasChanged), 125},
    {sipName_ItemFlagsChange, static_cast<int>( ::QGraphicsItem::ItemFlagsChange), 125},
    {sipName_ItemFlagsHaveChanged, static_cast<int>( ::QGraphicsItem::ItemFlagsHaveChanged), 125},
    {sipName_ItemHasNoContents, static_cast<int>( ::QGraphicsItem::ItemHasNoContents), 126},
    {sipName_ItemIgnoresParentOpacity, static_cast<int>( ::QGraphicsItem::ItemIgnoresParentOpacity), 126},
    {sipName_ItemIgnoresTransformations, static_cast<int>( ::QGraphicsItem::ItemIgnoresTransformations), 126},
    {sipName_ItemIsFocusable, static_cast<int>( ::QGraphicsItem::ItemIsFocusable), 126},
    {sipName_ItemIsMovable, static_cast<int>( ::QGraphicsItem::ItemIsMovable), 126},
    {sipName_ItemIsPanel, static_cast<int>( ::QGraphicsItem::ItemIsPanel), 126},
    {sipName_ItemIsSelectable, static_cast<int>( ::QGraphicsItem::ItemIsSelectable), 126},
    {sipName_ItemMatrixChange, static_cast<int>( ::QGraphicsItem::ItemMatrixChange), 125},
    {sipName_ItemNegativeZStacksBehindParent, static_cast<int>( ::QGraphicsItem::ItemNegativeZStacksBehindParent), 126},
    {sipName_ItemOpacityChange, static_cast<int>( ::QGraphicsItem::ItemOpacityChange), 125},
    {sipName_ItemOpacityHasChanged, static_cast<int>( ::QGraphicsItem::ItemOpacityHasChanged), 125},
    {sipName_ItemParentChange, static_cast<int>( ::QGraphicsItem::ItemParentChange), 125},
    {sipName_ItemParentHasChanged, static_cast<int>( ::QGraphicsItem::ItemParentHasChanged), 125},
    {sipName_ItemPositionChange, static_cast<int>( ::QGraphicsItem::ItemPositionChange), 125},
    {sipName_ItemPositionHasChanged, static_cast<int>( ::QGraphicsItem::ItemPositionHasChanged), 125},
    {sipName_ItemRotationChange, static_cast<int>( ::QGraphicsItem::ItemRotationChange), 125},
    {sipName_ItemRotationHasChanged, static_cast<int>( ::QGraphicsItem::ItemRotationHasChanged), 125},
    {sipName_ItemScaleChange, static_cast<int>( ::QGraphicsItem::ItemScaleChange), 125},
    {sipName_ItemScaleHasChanged, static_cast<int>( ::QGraphicsItem::ItemScaleHasChanged), 125},
    {sipName_ItemSceneChange, static_cast<int>( ::QGraphicsItem::ItemSceneChange), 125},
    {sipName_ItemSceneHasChanged, static_cast<int>( ::QGraphicsItem::ItemSceneHasChanged), 125},
    {sipName_ItemScenePositionHasChanged, static_cast<int>( ::QGraphicsItem::ItemScenePositionHasChanged), 125},
    {sipName_ItemSelectedChange, static_cast<int>( ::QGraphicsItem::ItemSelectedChange), 125},
    {sipName_ItemSelectedHasChanged, static_cast<int>( ::QGraphicsItem::ItemSelectedHasChanged), 125},
    {sipName_ItemSendsGeometryChanges, static_cast<int>( ::QGraphicsItem::ItemSendsGeometryChanges), 126},
    {sipName_ItemSendsScenePositionChanges, static_cast<int>( ::QGraphicsItem::ItemSendsScenePositionChanges), 126},
    {sipName_ItemStacksBehindParent, static_cast<int>( ::QGraphicsItem::ItemStacksBehindParent), 126},
    {sipName_ItemToolTipChange, static_cast<int>( ::QGraphicsItem::ItemToolTipChange), 125},
    {sipName_ItemToolTipHasChanged, static_cast<int>( ::QGraphicsItem::ItemToolTipHasChanged), 125},
    {sipName_ItemTransformChange, static_cast<int>( ::QGraphicsItem::ItemTransformChange), 125},
    {sipName_ItemTransformHasChanged, static_cast<int>( ::QGraphicsItem::ItemTransformHasChanged), 125},
    {sipName_ItemTransformOriginPointChange, static_cast<int>( ::QGraphicsItem::ItemTransformOriginPointChange), 125},
    {sipName_ItemTransformOriginPointHasChanged, static_cast<int>( ::QGraphicsItem::ItemTransformOriginPointHasChanged), 125},
    {sipName_ItemUsesExtendedStyleOption, static_cast<int>( ::QGraphicsItem::ItemUsesExtendedStyleOption), 126},
    {sipName_ItemVisibleChange, static_cast<int>( ::QGraphicsItem::ItemVisibleChange), 125},
    {sipName_ItemVisibleHasChanged, static_cast<int>( ::QGraphicsItem::ItemVisibleHasChanged), 125},
    {sipName_ItemZValueChange, static_cast<int>( ::QGraphicsItem::ItemZValueChange), 125},
    {sipName_ItemZValueHasChanged, static_cast<int>( ::QGraphicsItem::ItemZValueHasChanged), 125},
    {sipName_NoCache, static_cast<int>( ::QGraphicsItem::NoCache), 124},
    {sipName_NonModal, static_cast<int>( ::QGraphicsItem::NonModal), 128},
    {sipName_PanelModal, static_cast<int>( ::QGraphicsItem::PanelModal), 128},
    {sipName_SceneModal, static_cast<int>( ::QGraphicsItem::SceneModal), 128},
};


extern "C" {static PyObject *varget_QGraphicsItem_Type(void *, PyObject *, PyObject *);}
static PyObject *varget_QGraphicsItem_Type(void *, PyObject *, PyObject *)
{
    int sipVal;

    sipVal =  ::QGraphicsItem::Type;

    return PyLong_FromLong(sipVal);
}


extern "C" {static PyObject *varget_QGraphicsItem_UserType(void *, PyObject *, PyObject *);}
static PyObject *varget_QGraphicsItem_UserType(void *, PyObject *, PyObject *)
{
    int sipVal;

    sipVal =  ::QGraphicsItem::UserType;

    return PyLong_FromLong(sipVal);
}

sipVariableDef variables_QGraphicsItem[] = {
    {ClassVariable, sipName_Type, (PyMethodDef *)varget_QGraphicsItem_Type, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_UserType, (PyMethodDef *)varget_QGraphicsItem_UserType, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
};

PyDoc_STRVAR(doc_QGraphicsItem, "\1QGraphicsItem(parent: QGraphicsItem = None)");


static pyqt5ClassPluginDef plugin_QGraphicsItem = {
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtWidgets_QGraphicsItem = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsItem,
        SIP_NULLPTR,
        &plugin_QGraphicsItem
    },
    {
        sipNameNr_QGraphicsItem,
        {0, 0, 1},
        158, methods_QGraphicsItem,
        57, enummembers_QGraphicsItem,
        2, variables_QGraphicsItem,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QGraphicsItem,
    -1,
    -1,
    SIP_NULLPTR,
    SIP_NULLPTR,
    init_type_QGraphicsItem,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_QGraphicsItem,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    release_QGraphicsItem,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
