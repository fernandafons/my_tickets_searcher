/*
 * Interface wrapper code.
 *
 * Generated by SIP 5.3.0
 *
 * Copyright (c) 2019 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtXml.h"

#line 234 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 29 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtXml/sipQtXmlQDomNamedNodeMap.cpp"

#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 33 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtXml/sipQtXmlQDomNamedNodeMap.cpp"
#line 54 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 36 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtXml/sipQtXmlQDomNamedNodeMap.cpp"


PyDoc_STRVAR(doc_QDomNamedNodeMap_namedItem, "namedItem(self, str) -> QDomNode");

extern "C" {static PyObject *meth_QDomNamedNodeMap_namedItem(PyObject *, PyObject *);}
static PyObject *meth_QDomNamedNodeMap_namedItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
        const  ::QDomNamedNodeMap *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QDomNamedNodeMap, &sipCpp, sipType_QString,&a0, &a0State))
        {
             ::QDomNode*sipRes;

            sipRes = new  ::QDomNode(sipCpp->namedItem(*a0));
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipConvertFromNewType(sipRes,sipType_QDomNode,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QDomNamedNodeMap, sipName_namedItem, doc_QDomNamedNodeMap_namedItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QDomNamedNodeMap_setNamedItem, "setNamedItem(self, QDomNode) -> QDomNode");

extern "C" {static PyObject *meth_QDomNamedNodeMap_setNamedItem(PyObject *, PyObject *);}
static PyObject *meth_QDomNamedNodeMap_setNamedItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QDomNode* a0;
         ::QDomNamedNodeMap *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QDomNamedNodeMap, &sipCpp, sipType_QDomNode, &a0))
        {
             ::QDomNode*sipRes;

            sipRes = new  ::QDomNode(sipCpp->setNamedItem(*a0));

            return sipConvertFromNewType(sipRes,sipType_QDomNode,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QDomNamedNodeMap, sipName_setNamedItem, doc_QDomNamedNodeMap_setNamedItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QDomNamedNodeMap_removeNamedItem, "removeNamedItem(self, str) -> QDomNode");

extern "C" {static PyObject *meth_QDomNamedNodeMap_removeNamedItem(PyObject *, PyObject *);}
static PyObject *meth_QDomNamedNodeMap_removeNamedItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QDomNamedNodeMap *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QDomNamedNodeMap, &sipCpp, sipType_QString,&a0, &a0State))
        {
             ::QDomNode*sipRes;

            sipRes = new  ::QDomNode(sipCpp->removeNamedItem(*a0));
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipConvertFromNewType(sipRes,sipType_QDomNode,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QDomNamedNodeMap, sipName_removeNamedItem, doc_QDomNamedNodeMap_removeNamedItem);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QDomNamedNodeMap_item, "item(self, int) -> QDomNode");

extern "C" {static PyObject *meth_QDomNamedNodeMap_item(PyObject *, PyObject *);}
static PyObject *meth_QDomNamedNodeMap_item(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int a0;
        const  ::QDomNamedNodeMap *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QDomNamedNodeMap, &sipCpp, &a0))
        {
             ::QDomNode*sipRes;

            sipRes = new  ::QDomNode(sipCpp->item(a0));

            return sipConvertFromNewType(sipRes,sipType_QDomNode,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QDomNamedNodeMap, sipName_item, doc_QDomNamedNodeMap_item);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QDomNamedNodeMap_namedItemNS, "namedItemNS(self, str, str) -> QDomNode");

extern "C" {static PyObject *meth_QDomNamedNodeMap_namedItemNS(PyObject *, PyObject *);}
static PyObject *meth_QDomNamedNodeMap_namedItemNS(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
        const  ::QString* a1;
        int a1State = 0;
        const  ::QDomNamedNodeMap *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1J1", &sipSelf, sipType_QDomNamedNodeMap, &sipCpp, sipType_QString,&a0, &a0State, sipType_QString,&a1, &a1State))
        {
             ::QDomNode*sipRes;

            sipRes = new  ::QDomNode(sipCpp->namedItemNS(*a0,*a1));
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);
            sipReleaseType(const_cast< ::QString *>(a1),sipType_QString,a1State);

            return sipConvertFromNewType(sipRes,sipType_QDomNode,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QDomNamedNodeMap, sipName_namedItemNS, doc_QDomNamedNodeMap_namedItemNS);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QDomNamedNodeMap_setNamedItemNS, "setNamedItemNS(self, QDomNode) -> QDomNode");

extern "C" {static PyObject *meth_QDomNamedNodeMap_setNamedItemNS(PyObject *, PyObject *);}
static PyObject *meth_QDomNamedNodeMap_setNamedItemNS(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QDomNode* a0;
         ::QDomNamedNodeMap *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QDomNamedNodeMap, &sipCpp, sipType_QDomNode, &a0))
        {
             ::QDomNode*sipRes;

            sipRes = new  ::QDomNode(sipCpp->setNamedItemNS(*a0));

            return sipConvertFromNewType(sipRes,sipType_QDomNode,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QDomNamedNodeMap, sipName_setNamedItemNS, doc_QDomNamedNodeMap_setNamedItemNS);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QDomNamedNodeMap_removeNamedItemNS, "removeNamedItemNS(self, str, str) -> QDomNode");

extern "C" {static PyObject *meth_QDomNamedNodeMap_removeNamedItemNS(PyObject *, PyObject *);}
static PyObject *meth_QDomNamedNodeMap_removeNamedItemNS(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
        const  ::QString* a1;
        int a1State = 0;
         ::QDomNamedNodeMap *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1J1", &sipSelf, sipType_QDomNamedNodeMap, &sipCpp, sipType_QString,&a0, &a0State, sipType_QString,&a1, &a1State))
        {
             ::QDomNode*sipRes;

            sipRes = new  ::QDomNode(sipCpp->removeNamedItemNS(*a0,*a1));
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);
            sipReleaseType(const_cast< ::QString *>(a1),sipType_QString,a1State);

            return sipConvertFromNewType(sipRes,sipType_QDomNode,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_QDomNamedNodeMap, sipName_removeNamedItemNS, doc_QDomNamedNodeMap_removeNamedItemNS);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QDomNamedNodeMap_length, "length(self) -> int");

extern "C" {static PyObject *meth_QDomNamedNodeMap_length(PyObject *, PyObject *);}
static PyObject *meth_QDomNamedNodeMap_length(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QDomNamedNodeMap *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDomNamedNodeMap, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->length();

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QDomNamedNodeMap, sipName_length, doc_QDomNamedNodeMap_length);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QDomNamedNodeMap_count, "count(self) -> int");

extern "C" {static PyObject *meth_QDomNamedNodeMap_count(PyObject *, PyObject *);}
static PyObject *meth_QDomNamedNodeMap_count(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QDomNamedNodeMap *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDomNamedNodeMap, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->count();

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QDomNamedNodeMap, sipName_count, doc_QDomNamedNodeMap_count);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QDomNamedNodeMap_size, "size(self) -> int");

extern "C" {static PyObject *meth_QDomNamedNodeMap_size(PyObject *, PyObject *);}
static PyObject *meth_QDomNamedNodeMap_size(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QDomNamedNodeMap *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDomNamedNodeMap, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->size();

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QDomNamedNodeMap, sipName_size, doc_QDomNamedNodeMap_size);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QDomNamedNodeMap_isEmpty, "isEmpty(self) -> bool");

extern "C" {static PyObject *meth_QDomNamedNodeMap_isEmpty(PyObject *, PyObject *);}
static PyObject *meth_QDomNamedNodeMap_isEmpty(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QDomNamedNodeMap *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDomNamedNodeMap, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isEmpty();

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QDomNamedNodeMap, sipName_isEmpty, doc_QDomNamedNodeMap_isEmpty);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QDomNamedNodeMap_contains, "contains(self, str) -> bool");

extern "C" {static PyObject *meth_QDomNamedNodeMap_contains(PyObject *, PyObject *);}
static PyObject *meth_QDomNamedNodeMap_contains(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
        const  ::QDomNamedNodeMap *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QDomNamedNodeMap, &sipCpp, sipType_QString,&a0, &a0State))
        {
            bool sipRes;

            sipRes = sipCpp->contains(*a0);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_QDomNamedNodeMap, sipName_contains, doc_QDomNamedNodeMap_contains);

    return SIP_NULLPTR;
}


extern "C" {static Py_ssize_t slot_QDomNamedNodeMap___len__(PyObject *);}
static Py_ssize_t slot_QDomNamedNodeMap___len__(PyObject *sipSelf)
{
     ::QDomNamedNodeMap *sipCpp = reinterpret_cast< ::QDomNamedNodeMap *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QDomNamedNodeMap));

    if (!sipCpp)
        return 0;


    {
        {
            Py_ssize_t sipRes = 0;

#line 1 "Auto-generated"
            sipRes = (Py_ssize_t)sipCpp->count();
#line 402 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtXml/sipQtXmlQDomNamedNodeMap.cpp"

            return sipRes;
        }
    }

    return 0;
}


extern "C" {static PyObject *slot_QDomNamedNodeMap___ne__(PyObject *,PyObject *);}
static PyObject *slot_QDomNamedNodeMap___ne__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QDomNamedNodeMap *sipCpp = reinterpret_cast< ::QDomNamedNodeMap *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QDomNamedNodeMap));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QDomNamedNodeMap* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QDomNamedNodeMap, &a0))
        {
            bool sipRes;

            sipRes = sipCpp-> ::QDomNamedNodeMap::operator!=(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtXml, ne_slot, sipType_QDomNamedNodeMap, sipSelf, sipArg);
}


extern "C" {static PyObject *slot_QDomNamedNodeMap___eq__(PyObject *,PyObject *);}
static PyObject *slot_QDomNamedNodeMap___eq__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QDomNamedNodeMap *sipCpp = reinterpret_cast< ::QDomNamedNodeMap *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QDomNamedNodeMap));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QDomNamedNodeMap* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QDomNamedNodeMap, &a0))
        {
            bool sipRes;

            sipRes = sipCpp-> ::QDomNamedNodeMap::operator==(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_QtXml, eq_slot, sipType_QDomNamedNodeMap, sipSelf, sipArg);
}


/* Call the instance's destructor. */
extern "C" {static void release_QDomNamedNodeMap(void *, int);}
static void release_QDomNamedNodeMap(void *sipCppV, int)
{
    delete reinterpret_cast< ::QDomNamedNodeMap *>(sipCppV);
}


extern "C" {static void *array_QDomNamedNodeMap(Py_ssize_t);}
static void *array_QDomNamedNodeMap(Py_ssize_t sipNrElem)
{
    return new  ::QDomNamedNodeMap[sipNrElem];
}


extern "C" {static void assign_QDomNamedNodeMap(void *, Py_ssize_t, void *);}
static void assign_QDomNamedNodeMap(void *sipDst, Py_ssize_t sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::QDomNamedNodeMap *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::QDomNamedNodeMap *>(sipSrc);
}


extern "C" {static void *copy_QDomNamedNodeMap(const void *, Py_ssize_t);}
static void *copy_QDomNamedNodeMap(const void *sipSrc, Py_ssize_t sipSrcIdx)
{
    return new  ::QDomNamedNodeMap(reinterpret_cast<const  ::QDomNamedNodeMap *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QDomNamedNodeMap(sipSimpleWrapper *);}
static void dealloc_QDomNamedNodeMap(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_QDomNamedNodeMap(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_QDomNamedNodeMap(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QDomNamedNodeMap(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::QDomNamedNodeMap *sipCpp = SIP_NULLPTR;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, ""))
        {
            sipCpp = new  ::QDomNamedNodeMap();

            return sipCpp;
        }
    }

    {
        const  ::QDomNamedNodeMap* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "J9", sipType_QDomNamedNodeMap, &a0))
        {
            sipCpp = new  ::QDomNamedNodeMap(*a0);

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's Python slots. */
static sipPySlotDef slots_QDomNamedNodeMap[] = {
    {(void *)slot_QDomNamedNodeMap___len__, len_slot},
    {(void *)slot_QDomNamedNodeMap___ne__, ne_slot},
    {(void *)slot_QDomNamedNodeMap___eq__, eq_slot},
    {0, (sipPySlotType)0}
};


static PyMethodDef methods_QDomNamedNodeMap[] = {
    {sipName_contains, meth_QDomNamedNodeMap_contains, METH_VARARGS, doc_QDomNamedNodeMap_contains},
    {sipName_count, meth_QDomNamedNodeMap_count, METH_VARARGS, doc_QDomNamedNodeMap_count},
    {sipName_isEmpty, meth_QDomNamedNodeMap_isEmpty, METH_VARARGS, doc_QDomNamedNodeMap_isEmpty},
    {sipName_item, meth_QDomNamedNodeMap_item, METH_VARARGS, doc_QDomNamedNodeMap_item},
    {sipName_length, meth_QDomNamedNodeMap_length, METH_VARARGS, doc_QDomNamedNodeMap_length},
    {sipName_namedItem, meth_QDomNamedNodeMap_namedItem, METH_VARARGS, doc_QDomNamedNodeMap_namedItem},
    {sipName_namedItemNS, meth_QDomNamedNodeMap_namedItemNS, METH_VARARGS, doc_QDomNamedNodeMap_namedItemNS},
    {sipName_removeNamedItem, meth_QDomNamedNodeMap_removeNamedItem, METH_VARARGS, doc_QDomNamedNodeMap_removeNamedItem},
    {sipName_removeNamedItemNS, meth_QDomNamedNodeMap_removeNamedItemNS, METH_VARARGS, doc_QDomNamedNodeMap_removeNamedItemNS},
    {sipName_setNamedItem, meth_QDomNamedNodeMap_setNamedItem, METH_VARARGS, doc_QDomNamedNodeMap_setNamedItem},
    {sipName_setNamedItemNS, meth_QDomNamedNodeMap_setNamedItemNS, METH_VARARGS, doc_QDomNamedNodeMap_setNamedItemNS},
    {sipName_size, meth_QDomNamedNodeMap_size, METH_VARARGS, doc_QDomNamedNodeMap_size}
};

PyDoc_STRVAR(doc_QDomNamedNodeMap, "\1QDomNamedNodeMap()\n"
"QDomNamedNodeMap(QDomNamedNodeMap)");


static pyqt5ClassPluginDef plugin_QDomNamedNodeMap = {
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_QtXml_QDomNamedNodeMap = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QDomNamedNodeMap,
        SIP_NULLPTR,
        &plugin_QDomNamedNodeMap
    },
    {
        sipNameNr_QDomNamedNodeMap,
        {0, 0, 1},
        12, methods_QDomNamedNodeMap,
        0, SIP_NULLPTR,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_QDomNamedNodeMap,
    -1,
    sipNameNr_sip_simplewrapper,
    SIP_NULLPTR,
    slots_QDomNamedNodeMap,
    init_type_QDomNamedNodeMap,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_QDomNamedNodeMap,
    assign_QDomNamedNodeMap,
    array_QDomNamedNodeMap,
    copy_QDomNamedNodeMap,
    release_QDomNamedNodeMap,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
