/*
 * Module code.
 *
 * Generated by SIP 5.3.0
 *
 * Copyright (c) 2019 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIpyrcc.h"

#line 52 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/pyrcc/pyrccmod.sip"
#include "rcc.h"
#line 29 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/pyrcc/sippyrcccmodule.cpp"

/* Define the strings used by this module. */
const char sipStrings_pyrcc[] = {
    'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', '_', 'C', 'O', 'M', 'P', 'R', 'E', 'S', 'S', 'T', 'H', 'R', 'E', 'S', 'H', 'O', 'L', 'D', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', '_', 'C', 'O', 'M', 'P', 'R', 'E', 'S', 'S', 'L', 'E', 'V', 'E', 'L', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    's', 'e', 't', 'C', 'o', 'm', 'p', 'r', 'e', 's', 's', 'T', 'h', 'r', 'e', 's', 'h', 'o', 'l', 'd', 0,
    'R', 'C', 'C', 'R', 'e', 's', 'o', 'u', 'r', 'c', 'e', 'L', 'i', 'b', 'r', 'a', 'r', 'y', 0,
    's', 'i', 'p', '.', 's', 'i', 'm', 'p', 'l', 'e', 'w', 'r', 'a', 'p', 'p', 'e', 'r', 0,
    's', 'e', 't', 'C', 'o', 'm', 'p', 'r', 'e', 's', 's', 'L', 'e', 'v', 'e', 'l', 0,
    's', 'e', 't', 'R', 'e', 's', 'o', 'u', 'r', 'c', 'e', 'R', 'o', 'o', 't', 0,
    's', 'e', 't', 'I', 'n', 'p', 'u', 't', 'F', 'i', 'l', 'e', 's', 0,
    'P', 'y', 'Q', 't', '5', '.', 'p', 'y', 'r', 'c', 'c', 0,
    's', 'e', 't', 'V', 'e', 'r', 'b', 'o', 's', 'e', 0,
    'd', 'a', 't', 'a', 'F', 'i', 'l', 'e', 's', 0,
    'r', 'e', 'a', 'd', 'F', 'i', 'l', 'e', 's', 0,
    'o', 'u', 't', 'p', 'u', 't', 0,
};


/*
 * This defines each type in this module.
 */
sipTypeDef *sipExportedTypes_pyrcc[] = {
    &sipTypeDef_pyrcc_RCCResourceLibrary.ctd_base,
};


/* This defines the types that this module needs to import from QtCore. */
sipImportedTypeDef sipImportedTypes_pyrcc_QtCore[] = {
    {"QString"},
    {"QStringList"},
    {SIP_NULLPTR}
};


/* This defines the modules that this module needs to import. */
static sipImportedModuleDef importsTable[] = {
    {"PyQt5.QtCore", sipImportedTypes_pyrcc_QtCore, SIP_NULLPTR, SIP_NULLPTR},
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
};


/* Define the ints to be added to this module dictionary. */
static sipIntInstanceDef intInstances[] = {
    {sipName_CONSTANT_COMPRESSLEVEL_DEFAULT, CONSTANT_COMPRESSLEVEL_DEFAULT},
    {sipName_CONSTANT_COMPRESSTHRESHOLD_DEFAULT, CONSTANT_COMPRESSTHRESHOLD_DEFAULT},
    {0, 0}
};


/* This defines this module. */
sipExportedModuleDef sipModuleAPI_pyrcc = {
    0,
    SIP_ABI_MINOR_VERSION,
    sipNameNr_PyQt5_pyrcc,
    0,
    sipStrings_pyrcc,
    importsTable,
    SIP_NULLPTR,
    1,
    sipExportedTypes_pyrcc,
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, intInstances, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};


/* The SIP API and the APIs of any imported modules. */
const sipAPIDef *sipAPI_pyrcc;

sip_qt_metaobject_func sip_pyrcc_qt_metaobject;
sip_qt_metacall_func sip_pyrcc_qt_metacall;
sip_qt_metacast_func sip_pyrcc_qt_metacast;


/* The Python module initialisation function. */
#if defined(SIP_STATIC_MODULE)
extern "C" PyObject *PyInit_pyrcc()
#else
PyMODINIT_FUNC PyInit_pyrcc()
#endif
{
    static PyMethodDef sip_methods[] = {
        {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
    };

    static PyModuleDef sip_module_def = {
        PyModuleDef_HEAD_INIT,
        "PyQt5.pyrcc",
        SIP_NULLPTR,
        -1,
        sip_methods,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_NULLPTR
    };

    PyObject *sipModule, *sipModuleDict;
    PyObject *sip_sipmod, *sip_capiobj;

    /* Initialise the module and get it's dictionary. */
    if ((sipModule = PyModule_Create(&sip_module_def)) == SIP_NULLPTR)
        return SIP_NULLPTR;

    sipModuleDict = PyModule_GetDict(sipModule);

    /* Get the SIP module's API. */
    if ((sip_sipmod = PyImport_ImportModule("PyQt5.sip")) == SIP_NULLPTR)
    {
        Py_DECREF(sipModule);
        return SIP_NULLPTR;
    }

    sip_capiobj = PyDict_GetItemString(PyModule_GetDict(sip_sipmod), "_C_API");
    Py_DECREF(sip_sipmod);

    if (sip_capiobj == SIP_NULLPTR || !PyCapsule_CheckExact(sip_capiobj))
    {
        PyErr_SetString(PyExc_AttributeError, "PyQt5.sip._C_API is missing or has the wrong type");
        Py_DECREF(sipModule);
        return SIP_NULLPTR;
    }

    sipAPI_pyrcc = reinterpret_cast<const sipAPIDef *>(PyCapsule_GetPointer(sip_capiobj, "PyQt5.sip._C_API"));

    if (sipAPI_pyrcc == SIP_NULLPTR)
    {
        Py_DECREF(sipModule);
        return SIP_NULLPTR;
    }

    /* Export the module and publish it's API. */
    if (sipExportModule(&sipModuleAPI_pyrcc, SIP_ABI_MAJOR_VERSION, SIP_ABI_MINOR_VERSION, 0) < 0)
    {
        Py_DECREF(sipModule);
        return SIP_NULLPTR;
    }

    sip_pyrcc_qt_metaobject = (sip_qt_metaobject_func)sipImportSymbol("qtcore_qt_metaobject");
    sip_pyrcc_qt_metacall = (sip_qt_metacall_func)sipImportSymbol("qtcore_qt_metacall");
    sip_pyrcc_qt_metacast = (sip_qt_metacast_func)sipImportSymbol("qtcore_qt_metacast");

    if (!sip_pyrcc_qt_metacast)
        Py_FatalError("Unable to import qtcore_qt_metacast");

    /* Initialise the module now all its dependencies have been set up. */
    if (sipInitModule(&sipModuleAPI_pyrcc,sipModuleDict) < 0)
    {
        Py_DECREF(sipModule);
        return SIP_NULLPTR;
    }

    return sipModule;
}
