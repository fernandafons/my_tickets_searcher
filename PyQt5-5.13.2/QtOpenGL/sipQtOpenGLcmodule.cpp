/*
 * Module code.
 *
 * Generated by SIP 5.3.0
 *
 * Copyright (c) 2019 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtOpenGL.h"

#line 28 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 29 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 28 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtOpenGL/qgl.sip"
#include <qgl.h>
#line 32 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 69 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtOpenGL/qgl.sip"
#include <qgl.h>
#line 35 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 179 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtOpenGL/qgl.sip"
#include <qgl.h>
#line 38 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 26 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 41 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 30 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 44 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 26 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 47 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 50 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 500 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 53 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 56 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 462 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 59 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 451 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 62 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 561 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 65 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 610 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 68 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 583 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 71 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 599 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 74 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 666 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 77 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 296 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 80 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 473 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 83 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 429 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 86 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 416 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 89 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 403 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 92 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 389 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 95 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 375 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 98 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 354 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 101 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 253 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 104 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 205 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 107 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 26 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 110 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 52 "sip/QtGui/qpaintengine.sip"
#include <qpaintengine.h>
#line 113 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 26 "sip/QtGui/qpaintdevice.sip"
#include <qpaintdevice.h>
#line 116 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 235 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 119 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 247 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 122 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 26 "sip/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 125 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 28 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtOpenGL/qgl.sip"
#include <qgl.h>
#line 128 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 69 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtOpenGL/qgl.sip"
#include <qgl.h>
#line 131 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 179 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtOpenGL/qgl.sip"
#include <qgl.h>
#line 134 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"
#line 244 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtOpenGL/qgl.sip"
#include <qgl.h>
#line 137 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"

/* Define the strings used by this module. */
const char sipStrings_QtOpenGL[] = {
    'O', 'p', 'e', 'n', 'G', 'L', '_', 'E', 'S', '_', 'C', 'o', 'm', 'm', 'o', 'n', 'L', 'i', 't', 'e', '_', 'V', 'e', 'r', 's', 'i', 'o', 'n', '_', '1', '_', '1', 0,
    'O', 'p', 'e', 'n', 'G', 'L', '_', 'E', 'S', '_', 'C', 'o', 'm', 'm', 'o', 'n', 'L', 'i', 't', 'e', '_', 'V', 'e', 'r', 's', 'i', 'o', 'n', '_', '1', '_', '0', 0,
    'Q', 'G', 'L', 'F', 'o', 'r', 'm', 'a', 't', ':', ':', 'O', 'p', 'e', 'n', 'G', 'L', 'C', 'o', 'n', 't', 'e', 'x', 't', 'P', 'r', 'o', 'f', 'i', 'l', 'e', 0,
    'Q', 'G', 'L', 'F', 'o', 'r', 'm', 'a', 't', ':', ':', 'O', 'p', 'e', 'n', 'G', 'L', 'V', 'e', 'r', 's', 'i', 'o', 'n', 'F', 'l', 'a', 'g', 's', 0,
    'P', 'r', 'e', 'm', 'u', 'l', 't', 'i', 'p', 'l', 'i', 'e', 'd', 'A', 'l', 'p', 'h', 'a', 'B', 'i', 'n', 'd', 'O', 'p', 't', 'i', 'o', 'n', 0,
    'O', 'p', 'e', 'n', 'G', 'L', '_', 'E', 'S', '_', 'C', 'o', 'm', 'm', 'o', 'n', '_', 'V', 'e', 'r', 's', 'i', 'o', 'n', '_', '1', '_', '1', 0,
    'O', 'p', 'e', 'n', 'G', 'L', '_', 'E', 'S', '_', 'C', 'o', 'm', 'm', 'o', 'n', '_', 'V', 'e', 'r', 's', 'i', 'o', 'n', '_', '1', '_', '0', 0,
    'Q', 'G', 'L', 'F', 'o', 'r', 'm', 'a', 't', ':', ':', 'O', 'p', 'e', 'n', 'G', 'L', 'V', 'e', 'r', 's', 'i', 'o', 'n', 'F', 'l', 'a', 'g', 0,
    'L', 'i', 'n', 'e', 'a', 'r', 'F', 'i', 'l', 't', 'e', 'r', 'i', 'n', 'g', 'B', 'i', 'n', 'd', 'O', 'p', 't', 'i', 'o', 'n', 0,
    'Q', 'G', 'L', 'C', 'o', 'n', 't', 'e', 'x', 't', ':', ':', 'B', 'i', 'n', 'd', 'O', 'p', 't', 'i', 'o', 'n', 's', 0,
    'o', 'v', 'e', 'r', 'l', 'a', 'y', 'T', 'r', 'a', 'n', 's', 'p', 'a', 'r', 'e', 'n', 't', 'C', 'o', 'l', 'o', 'r', 0,
    's', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'O', 'v', 'e', 'r', 'l', 'a', 'y', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'Q', 'G', 'L', 'C', 'o', 'n', 't', 'e', 'x', 't', ':', ':', 'B', 'i', 'n', 'd', 'O', 'p', 't', 'i', 'o', 'n', 0,
    'O', 'p', 'e', 'n', 'G', 'L', '_', 'E', 'S', '_', 'V', 'e', 'r', 's', 'i', 'o', 'n', '_', '2', '_', '0', 0,
    'N', 'o', 'D', 'e', 'p', 'r', 'e', 'c', 'a', 't', 'e', 'd', 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 's', 0,
    'm', 'o', 'u', 's', 'e', 'D', 'o', 'u', 'b', 'l', 'e', 'C', 'l', 'i', 'c', 'k', 'E', 'v', 'e', 'n', 't', 0,
    's', 'e', 't', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'C', 'a', 'c', 'h', 'e', 'L', 'i', 'm', 'i', 't', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', 'O', 'v', 'e', 'r', 'l', 'a', 'y', 'F', 'o', 'r', 'm', 'a', 't', 0,
    's', 'e', 't', 'S', 't', 'e', 'n', 'c', 'i', 'l', 'B', 'u', 'f', 'f', 'e', 'r', 'S', 'i', 'z', 'e', 0,
    'C', 'o', 'm', 'p', 'a', 't', 'i', 'b', 'i', 'l', 'i', 't', 'y', 'P', 'r', 'o', 'f', 'i', 'l', 'e', 0,
    'i', 'n', 'i', 't', 'i', 'a', 'l', 'i', 'z', 'e', 'O', 'v', 'e', 'r', 'l', 'a', 'y', 'G', 'L', 0,
    'I', 'n', 'v', 'e', 'r', 't', 'e', 'd', 'Y', 'B', 'i', 'n', 'd', 'O', 'p', 't', 'i', 'o', 'n', 0,
    'O', 'p', 'e', 'n', 'G', 'L', '_', 'V', 'e', 'r', 's', 'i', 'o', 'n', '_', 'N', 'o', 'n', 'e', 0,
    'm', 'a', 'k', 'e', 'O', 'v', 'e', 'r', 'l', 'a', 'y', 'C', 'u', 'r', 'r', 'e', 'n', 't', 0,
    'o', 'p', 'e', 'n', 'G', 'L', 'V', 'e', 'r', 's', 'i', 'o', 'n', 'F', 'l', 'a', 'g', 's', 0,
    's', 'e', 't', 'D', 'i', 'r', 'e', 'c', 't', 'R', 'e', 'n', 'd', 'e', 'r', 'i', 'n', 'g', 0,
    's', 'e', 't', 'A', 'c', 'c', 'u', 'm', 'B', 'u', 'f', 'f', 'e', 'r', 'S', 'i', 'z', 'e', 0,
    'O', 'p', 'e', 'n', 'G', 'L', '_', 'V', 'e', 'r', 's', 'i', 'o', 'n', '_', '4', '_', '3', 0,
    'O', 'p', 'e', 'n', 'G', 'L', '_', 'V', 'e', 'r', 's', 'i', 'o', 'n', '_', '4', '_', '2', 0,
    'O', 'p', 'e', 'n', 'G', 'L', '_', 'V', 'e', 'r', 's', 'i', 'o', 'n', '_', '4', '_', '1', 0,
    'O', 'p', 'e', 'n', 'G', 'L', '_', 'V', 'e', 'r', 's', 'i', 'o', 'n', '_', '4', '_', '0', 0,
    'O', 'p', 'e', 'n', 'G', 'L', '_', 'V', 'e', 'r', 's', 'i', 'o', 'n', '_', '3', '_', '3', 0,
    'O', 'p', 'e', 'n', 'G', 'L', '_', 'V', 'e', 'r', 's', 'i', 'o', 'n', '_', '3', '_', '2', 0,
    'O', 'p', 'e', 'n', 'G', 'L', '_', 'V', 'e', 'r', 's', 'i', 'o', 'n', '_', '3', '_', '1', 0,
    'O', 'p', 'e', 'n', 'G', 'L', '_', 'V', 'e', 'r', 's', 'i', 'o', 'n', '_', '3', '_', '0', 0,
    'O', 'p', 'e', 'n', 'G', 'L', '_', 'V', 'e', 'r', 's', 'i', 'o', 'n', '_', '2', '_', '1', 0,
    'O', 'p', 'e', 'n', 'G', 'L', '_', 'V', 'e', 'r', 's', 'i', 'o', 'n', '_', '2', '_', '0', 0,
    'O', 'p', 'e', 'n', 'G', 'L', '_', 'V', 'e', 'r', 's', 'i', 'o', 'n', '_', '1', '_', '5', 0,
    'O', 'p', 'e', 'n', 'G', 'L', '_', 'V', 'e', 'r', 's', 'i', 'o', 'n', '_', '1', '_', '4', 0,
    'O', 'p', 'e', 'n', 'G', 'L', '_', 'V', 'e', 'r', 's', 'i', 'o', 'n', '_', '1', '_', '3', 0,
    'O', 'p', 'e', 'n', 'G', 'L', '_', 'V', 'e', 'r', 's', 'i', 'o', 'n', '_', '1', '_', '2', 0,
    'O', 'p', 'e', 'n', 'G', 'L', '_', 'V', 'e', 'r', 's', 'i', 'o', 'n', '_', '1', '_', '1', 0,
    'Q', 'G', 'L', ':', ':', 'F', 'o', 'r', 'm', 'a', 't', 'O', 'p', 't', 'i', 'o', 'n', 's', 0,
    'f', 'o', 'c', 'u', 's', 'N', 'e', 'x', 't', 'P', 'r', 'e', 'v', 'C', 'h', 'i', 'l', 'd', 0,
    's', 'e', 't', 'A', 'l', 'p', 'h', 'a', 'B', 'u', 'f', 'f', 'e', 'r', 'S', 'i', 'z', 'e', 0,
    's', 'e', 't', 'G', 'r', 'e', 'e', 'n', 'B', 'u', 'f', 'f', 'e', 'r', 'S', 'i', 'z', 'e', 0,
    's', 'e', 't', 'D', 'e', 'p', 't', 'h', 'B', 'u', 'f', 'f', 'e', 'r', 'S', 'i', 'z', 'e', 0,
    's', 'e', 't', 'A', 'u', 't', 'o', 'B', 'u', 'f', 'f', 'e', 'r', 'S', 'w', 'a', 'p', 0,
    'c', 'o', 'n', 'v', 'e', 'r', 't', 'T', 'o', 'G', 'L', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'D', 'e', 'f', 'a', 'u', 'l', 't', 'B', 'i', 'n', 'd', 'O', 'p', 't', 'i', 'o', 'n', 0,
    't', 'e', 'x', 't', 'u', 'r', 'e', 'C', 'a', 'c', 'h', 'e', 'L', 'i', 'm', 'i', 't', 0,
    'h', 'a', 's', 'O', 'p', 'e', 'n', 'G', 'L', 'O', 'v', 'e', 'r', 'l', 'a', 'y', 's', 0,
    'I', 'n', 'd', 'i', 'r', 'e', 'c', 't', 'R', 'e', 'n', 'd', 'e', 'r', 'i', 'n', 'g', 0,
    'Q', 'G', 'L', ':', ':', 'F', 'o', 'r', 'm', 'a', 't', 'O', 'p', 't', 'i', 'o', 'n', 0,
    'h', 'a', 's', 'H', 'e', 'i', 'g', 'h', 't', 'F', 'o', 'r', 'W', 'i', 'd', 't', 'h', 0,
    'm', 'o', 'u', 's', 'e', 'R', 'e', 'l', 'e', 'a', 's', 'e', 'E', 'v', 'e', 'n', 't', 0,
    's', 'e', 't', 'B', 'l', 'u', 'e', 'B', 'u', 'f', 'f', 'e', 'r', 'S', 'i', 'z', 'e', 0,
    's', 't', 'e', 'n', 'c', 'i', 'l', 'B', 'u', 'f', 'f', 'e', 'r', 'S', 'i', 'z', 'e', 0,
    's', 'i', 'p', '.', 's', 'i', 'm', 'p', 'l', 'e', 'w', 'r', 'a', 'p', 'p', 'e', 'r', 0,
    'd', 'e', 'l', 'e', 't', 'e', 'O', 'l', 'd', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'M', 'i', 'p', 'm', 'a', 'p', 'B', 'i', 'n', 'd', 'O', 'p', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'C', 'r', 'e', 'a', 't', 'e', 'd', 0,
    's', 'e', 't', 'S', 'a', 'm', 'p', 'l', 'e', 'B', 'u', 'f', 'f', 'e', 'r', 's', 0,
    'c', 'o', 'n', 't', 'e', 'x', 't', 'M', 'e', 'n', 'u', 'E', 'v', 'e', 'n', 't', 0,
    'i', 'n', 'p', 'u', 't', 'M', 'e', 't', 'h', 'o', 'd', 'E', 'v', 'e', 'n', 't', 0,
    'i', 'n', 'p', 'u', 't', 'M', 'e', 't', 'h', 'o', 'd', 'Q', 'u', 'e', 'r', 'y', 0,
    's', 'e', 't', 'R', 'e', 'd', 'B', 'u', 'f', 'f', 'e', 'r', 'S', 'i', 'z', 'e', 0,
    's', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'd', 'i', 's', 'c', 'o', 'n', 'n', 'e', 'c', 't', 'N', 'o', 't', 'i', 'f', 'y', 0,
    'r', 'e', 's', 'i', 'z', 'e', 'O', 'v', 'e', 'r', 'l', 'a', 'y', 'G', 'L', 0,
    'u', 'p', 'd', 'a', 't', 'e', 'O', 'v', 'e', 'r', 'l', 'a', 'y', 'G', 'L', 0,
    'g', 'r', 'a', 'b', 'F', 'r', 'a', 'm', 'e', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    's', 'e', 't', 'D', 'o', 'u', 'b', 'l', 'e', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'a', 'c', 'c', 'u', 'm', 'B', 'u', 'f', 'f', 'e', 'r', 'S', 'i', 'z', 'e', 0,
    'N', 'o', 'S', 'a', 'm', 'p', 'l', 'e', 'B', 'u', 'f', 'f', 'e', 'r', 's', 0,
    'N', 'o', 'S', 't', 'e', 'r', 'e', 'o', 'B', 'u', 'f', 'f', 'e', 'r', 's', 0,
    'N', 'o', 'S', 't', 'e', 'n', 'c', 'i', 'l', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'm', 'i', 'n', 'i', 'm', 'u', 'm', 'S', 'i', 'z', 'e', 'H', 'i', 'n', 't', 0,
    'm', 'o', 'u', 's', 'e', 'P', 'r', 'e', 's', 's', 'E', 'v', 'e', 'n', 't', 0,
    'k', 'e', 'y', 'R', 'e', 'l', 'e', 'a', 's', 'e', 'E', 'v', 'e', 'n', 't', 0,
    's', 'e', 't', 'S', 'w', 'a', 'p', 'I', 'n', 't', 'e', 'r', 'v', 'a', 'l', 0,
    'a', 'l', 'p', 'h', 'a', 'B', 'u', 'f', 'f', 'e', 'r', 'S', 'i', 'z', 'e', 0,
    'g', 'r', 'e', 'e', 'n', 'B', 'u', 'f', 'f', 'e', 'r', 'S', 'i', 'z', 'e', 0,
    'd', 'e', 'p', 't', 'h', 'B', 'u', 'f', 'f', 'e', 'r', 'S', 'i', 'z', 'e', 0,
    'r', 'e', 'q', 'u', 'e', 's', 't', 'e', 'd', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'a', 'u', 't', 'o', 'B', 'u', 'f', 'f', 'e', 'r', 'S', 'w', 'a', 'p', 0,
    'p', 'a', 'i', 'n', 't', 'O', 'v', 'e', 'r', 'l', 'a', 'y', 'G', 'L', 0,
    'o', 'v', 'e', 'r', 'l', 'a', 'y', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    's', 'e', 't', 'I', 'n', 'i', 't', 'i', 'a', 'l', 'i', 'z', 'e', 'd', 0,
    'd', 'e', 'v', 'i', 'c', 'e', 'I', 's', 'P', 'i', 'x', 'm', 'a', 'p', 0,
    'N', 'o', 'A', 'l', 'p', 'h', 'a', 'C', 'h', 'a', 'n', 'n', 'e', 'l', 0,
    'h', 'e', 'i', 'g', 'h', 't', 'F', 'o', 'r', 'W', 'i', 'd', 't', 'h', 0,
    'd', 'r', 'a', 'g', 'L', 'e', 'a', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'd', 'r', 'a', 'g', 'E', 'n', 't', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'm', 'o', 'u', 's', 'e', 'M', 'o', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'b', 'l', 'u', 'e', 'B', 'u', 'f', 'f', 'e', 'r', 'S', 'i', 'z', 'e', 0,
    'c', 'u', 'r', 'r', 'e', 'n', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'g', 'e', 't', 'P', 'r', 'o', 'c', 'A', 'd', 'd', 'r', 'e', 's', 's', 0,
    'P', 'y', 'Q', 't', '5', '.', 'Q', 't', 'O', 'p', 'e', 'n', 'G', 'L', 0,
    'q', 'g', 'l', 'C', 'l', 'e', 'a', 'r', 'C', 'o', 'l', 'o', 'r', 0,
    'w', 'i', 'n', 'd', 'o', 'w', 'C', 'r', 'e', 'a', 't', 'e', 'd', 0,
    'c', 'h', 'o', 'o', 's', 'e', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'd', 'e', 'l', 'e', 't', 'e', 'T', 'e', 'x', 't', 'u', 'r', 'e', 0,
    's', 'a', 'm', 'p', 'l', 'e', 'B', 'u', 'f', 'f', 'e', 'r', 's', 0,
    'N', 'o', 'A', 'c', 'c', 'u', 'm', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'N', 'o', 'D', 'e', 'p', 't', 'h', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    's', 'h', 'a', 'r', 'e', 'd', 'P', 'a', 'i', 'n', 't', 'e', 'r', 0,
    'd', 'r', 'a', 'g', 'M', 'o', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'k', 'e', 'y', 'P', 'r', 'e', 's', 's', 'E', 'v', 'e', 'n', 't', 0,
    'f', 'o', 'c', 'u', 's', 'O', 'u', 't', 'E', 'v', 'e', 'n', 't', 0,
    'r', 'e', 'd', 'B', 'u', 'f', 'f', 'e', 'r', 'S', 'i', 'z', 'e', 0,
    't', 'e', 'x', 't', 'u', 'r', 'e', 'T', 'a', 'r', 'g', 'e', 't', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'r', 'e', 'n', 'd', 'e', 'r', 'P', 'i', 'x', 'm', 'a', 'p', 0,
    'N', 'o', 'B', 'i', 'n', 'd', 'O', 'p', 't', 'i', 'o', 'n', 0,
    'd', 'o', 'u', 'b', 'l', 'e', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'f', 'o', 'c', 'u', 's', 'I', 'n', 'E', 'v', 'e', 'n', 't', 0,
    's', 'w', 'a', 'p', 'I', 'n', 't', 'e', 'r', 'v', 'a', 'l', 0,
    'S', 'i', 'n', 'g', 'l', 'e', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'i', 'n', 'i', 't', 'i', 'a', 'l', 'i', 'z', 'e', 'G', 'L', 0,
    's', 'h', 'a', 'r', 'e', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'm', 'i', 'n', 'o', 'r', 'V', 'e', 'r', 's', 'i', 'o', 'n', 0,
    'm', 'a', 'j', 'o', 'r', 'V', 'e', 'r', 's', 'i', 'o', 'n', 0,
    'm', 'o', 'v', 'e', 'T', 'o', 'T', 'h', 'r', 'e', 'a', 'd', 0,
    's', 'h', 'a', 'r', 'e', 'W', 'i', 'd', 'g', 'e', 't', 0,
    'i', 'n', 'i', 't', 'i', 'a', 'l', 'i', 'z', 'e', 'd', 0,
    'd', 'r', 'a', 'w', 'T', 'e', 'x', 't', 'u', 'r', 'e', 0,
    'b', 'i', 'n', 'd', 'T', 'e', 'x', 't', 'u', 'r', 'e', 0,
    'i', 'n', 'i', 't', 'P', 'a', 'i', 'n', 't', 'e', 'r', 0,
    'n', 'a', 't', 'i', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'a', 'c', 't', 'i', 'o', 'n', 'E', 'v', 'e', 'n', 't', 0,
    'c', 'h', 'a', 'n', 'g', 'e', 'E', 'v', 'e', 'n', 't', 0,
    't', 'a', 'b', 'l', 'e', 't', 'E', 'v', 'e', 'n', 't', 0,
    'C', 'o', 'r', 'e', 'P', 'r', 'o', 'f', 'i', 'l', 'e', 0,
    'r', 'e', 's', 'i', 'z', 'e', 'E', 'v', 'e', 'n', 't', 0,
    's', 'w', 'a', 'p', 'B', 'u', 'f', 'f', 'e', 'r', 's', 0,
    'd', 'o', 'n', 'e', 'C', 'u', 'r', 'r', 'e', 'n', 't', 0,
    'm', 'a', 'k', 'e', 'C', 'u', 'r', 'r', 'e', 'n', 't', 0,
    'p', 'a', 'i', 'n', 't', 'E', 'n', 'g', 'i', 'n', 'e', 0,
    'c', 'u', 's', 't', 'o', 'm', 'E', 'v', 'e', 'n', 't', 0,
    'e', 'v', 'e', 'n', 't', 'F', 'i', 'l', 't', 'e', 'r', 0,
    'r', 'e', 'n', 'd', 'e', 'r', 'T', 'e', 'x', 't', 0,
    'u', 's', 'e', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'Q', 'G', 'L', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'h', 'a', 's', 'O', 'v', 'e', 'r', 'l', 'a', 'y', 0,
    's', 'e', 't', 'O', 'v', 'e', 'r', 'l', 'a', 'y', 0,
    's', 'e', 't', 'S', 't', 'e', 'n', 'c', 'i', 'l', 0,
    'C', 'o', 'l', 'o', 'r', 'I', 'n', 'd', 'e', 'x', 0,
    'H', 'a', 's', 'O', 'v', 'e', 'r', 'l', 'a', 'y', 0,
    's', 'e', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'e', 'n', 't', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'l', 'e', 'a', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'c', 'l', 'o', 's', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'h', 'e', 'e', 'l', 'E', 'v', 'e', 'n', 't', 0,
    't', 'e', 's', 't', 'O', 'p', 't', 'i', 'o', 'n', 0,
    'p', 'a', 'i', 'n', 't', 'E', 'v', 'e', 'n', 't', 0,
    's', 'e', 't', 'S', 'a', 'm', 'p', 'l', 'e', 's', 0,
    's', 'e', 't', 'P', 'r', 'o', 'f', 'i', 'l', 'e', 0,
    'a', 'r', 'e', 'S', 'h', 'a', 'r', 'i', 'n', 'g', 0,
    's', 'e', 't', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'c', 'h', 'i', 'l', 'd', 'E', 'v', 'e', 'n', 't', 0,
    't', 'i', 'm', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    's', 'e', 't', 'V', 'e', 'r', 's', 'i', 'o', 'n', 0,
    '_', '_', 'i', 'n', 'v', 'e', 'r', 't', '_', '_', 0,
    'w', 'i', 't', 'h', 'A', 'l', 'p', 'h', 'a', 0,
    'Q', 'G', 'L', 'W', 'i', 'd', 'g', 'e', 't', 0,
    'i', 's', 'S', 'h', 'a', 'r', 'i', 'n', 'g', 0,
    'h', 'a', 's', 'O', 'p', 'e', 'n', 'G', 'L', 0,
    'Q', 'G', 'L', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'N', 'o', 'O', 'v', 'e', 'r', 'l', 'a', 'y', 0,
    'd', 'r', 'o', 'p', 'E', 'v', 'e', 'n', 't', 0,
    'h', 'i', 'd', 'e', 'E', 'v', 'e', 'n', 't', 0,
    's', 'h', 'o', 'w', 'E', 'v', 'e', 'n', 't', 0,
    'm', 'o', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    's', 'e', 't', 'S', 't', 'e', 'r', 'e', 'o', 0,
    'N', 'o', 'P', 'r', 'o', 'f', 'i', 'l', 'e', 0,
    's', 'e', 't', 'O', 'p', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'u', 'p', 'd', 'a', 't', 'e', 'G', 'L', 0,
    'q', 'g', 'l', 'C', 'o', 'l', 'o', 'r', 0,
    's', 'e', 't', 'P', 'l', 'a', 'n', 'e', 0,
    's', 'e', 't', 'A', 'c', 'c', 'u', 'm', 0,
    's', 'e', 't', 'D', 'e', 'p', 't', 'h', 0,
    's', 'i', 'z', 'e', 'H', 'i', 'n', 't', 0,
    'r', 'e', 's', 'i', 'z', 'e', 'G', 'L', 0,
    's', 'e', 't', 'A', 'l', 'p', 'h', 'a', 0,
    '_', '_', 'h', 'a', 's', 'h', '_', '_', 0,
    '_', '_', 'b', 'o', 'o', 'l', '_', '_', 0,
    '_', '_', 'i', 'x', 'o', 'r', '_', '_', 0,
    '_', '_', 'i', 'a', 'n', 'd', '_', '_', 0,
    's', 't', 'e', 'n', 'c', 'i', 'l', 0,
    'p', 'a', 'i', 'n', 't', 'G', 'L', 0,
    's', 'a', 'm', 'p', 'l', 'e', 's', 0,
    'p', 'r', 'o', 'f', 'i', 'l', 'e', 0,
    'd', 'e', 'v', 'T', 'y', 'p', 'e', 0,
    's', 'e', 't', 'R', 'g', 'b', 'a', 0,
    'c', 'o', 'n', 't', 'e', 'x', 't', 0,
    'i', 's', 'V', 'a', 'l', 'i', 'd', 0,
    '_', '_', 'x', 'o', 'r', '_', '_', 0,
    '_', '_', 'i', 'o', 'r', '_', '_', 0,
    '_', '_', 'a', 'n', 'd', '_', '_', 0,
    '_', '_', 'i', 'n', 't', '_', '_', 0,
    'g', 'l', 'D', 'r', 'a', 'w', 0,
    'g', 'l', 'I', 'n', 'i', 't', 0,
    's', 't', 'e', 'r', 'e', 'o', 0,
    'm', 'e', 't', 'r', 'i', 'c', 0,
    'c', 'r', 'e', 'a', 't', 'e', 0,
    'h', 'e', 'i', 'g', 'h', 't', 0,
    'd', 'e', 'v', 'i', 'c', 'e', 0,
    'f', 'o', 'r', 'm', 'a', 't', 0,
    't', 'a', 'r', 'g', 'e', 't', 0,
    'p', 'a', 'r', 'e', 'n', 't', 0,
    '_', '_', 'n', 'e', '_', '_', 0,
    '_', '_', 'e', 'q', '_', '_', 0,
    '_', '_', 'o', 'r', '_', '_', 0,
    'a', 'c', 'c', 'u', 'm', 0,
    'p', 'l', 'a', 'n', 'e', 0,
    'd', 'e', 'p', 't', 'h', 0,
    'a', 'l', 'p', 'h', 'a', 0,
    'r', 'e', 's', 'e', 't', 0,
    'w', 'i', 'd', 't', 'h', 0,
    'f', 'l', 'a', 'g', 's', 0,
    'e', 'v', 'e', 'n', 't', 0,
    'f', 'o', 'n', 't', 0,
    'r', 'g', 'b', 'a', 0,
    'Q', 'G', 'L', 0,
};

void sipVH_QtOpenGL_38(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int a0,int a1)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "ii", a0, a1);
}

void sipVH_QtOpenGL_37(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::QMetaMethod& a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::QMetaMethod(a0), sipType_QMetaMethod, SIP_NULLPTR);
}

void sipVH_QtOpenGL_36(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QChildEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QChildEvent, SIP_NULLPTR);
}

void sipVH_QtOpenGL_35(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QTimerEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QTimerEvent, SIP_NULLPTR);
}

bool sipVH_QtOpenGL_34(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QObject*a0, ::QEvent*a1)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DD", a0, sipType_QObject, SIP_NULLPTR, a1, sipType_QEvent, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH_QtOpenGL_33(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QEvent*a0)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", a0, sipType_QEvent, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

int sipVH_QtOpenGL_32(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QPaintDevice::PaintDeviceMetric a0)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "F", a0, sipType_QPaintDevice_PaintDeviceMetric);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

 ::QPaintEngine* sipVH_QtOpenGL_31(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::QPaintEngine* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_QPaintEngine, &sipRes);

    return sipRes;
}

int sipVH_QtOpenGL_30(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

void sipVH_QtOpenGL_29(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, bool a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "b", a0);
}

 ::QSize sipVH_QtOpenGL_28(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::QSize sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QSize, &sipRes);

    return sipRes;
}

int sipVH_QtOpenGL_27(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int a0)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "i", a0);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

void sipVH_QtOpenGL_26(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QMouseEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QMouseEvent, SIP_NULLPTR);
}

void sipVH_QtOpenGL_25(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QWheelEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QWheelEvent, SIP_NULLPTR);
}

void sipVH_QtOpenGL_24(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QKeyEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QKeyEvent, SIP_NULLPTR);
}

void sipVH_QtOpenGL_23(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QFocusEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QFocusEvent, SIP_NULLPTR);
}

void sipVH_QtOpenGL_22(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QPaintEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QPaintEvent, SIP_NULLPTR);
}

void sipVH_QtOpenGL_21(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QMoveEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QMoveEvent, SIP_NULLPTR);
}

void sipVH_QtOpenGL_20(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QResizeEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QResizeEvent, SIP_NULLPTR);
}

void sipVH_QtOpenGL_19(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QCloseEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QCloseEvent, SIP_NULLPTR);
}

void sipVH_QtOpenGL_18(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QContextMenuEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QContextMenuEvent, SIP_NULLPTR);
}

void sipVH_QtOpenGL_17(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QTabletEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QTabletEvent, SIP_NULLPTR);
}

void sipVH_QtOpenGL_16(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QActionEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QActionEvent, SIP_NULLPTR);
}

void sipVH_QtOpenGL_15(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QDragEnterEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QDragEnterEvent, SIP_NULLPTR);
}

void sipVH_QtOpenGL_14(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QDragMoveEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QDragMoveEvent, SIP_NULLPTR);
}

void sipVH_QtOpenGL_13(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QDragLeaveEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QDragLeaveEvent, SIP_NULLPTR);
}

void sipVH_QtOpenGL_12(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QDropEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QDropEvent, SIP_NULLPTR);
}

void sipVH_QtOpenGL_11(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QShowEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QShowEvent, SIP_NULLPTR);
}

void sipVH_QtOpenGL_10(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QHideEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QHideEvent, SIP_NULLPTR);
}

void sipVH_QtOpenGL_9(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QEvent, SIP_NULLPTR);
}

void sipVH_QtOpenGL_8(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QInputMethodEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QInputMethodEvent, SIP_NULLPTR);
}

 ::QVariant sipVH_QtOpenGL_7(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::Qt::InputMethodQuery a0)
{
     ::QVariant sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "F", a0, sipType_Qt_InputMethodQuery);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QVariant, &sipRes);

    return sipRes;
}

bool sipVH_QtOpenGL_6(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, bool a0)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "b", a0);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH_QtOpenGL_5(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH_QtOpenGL_4(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::QByteArray& a0,void*a1,long*a2)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NV", new  ::QByteArray(a0), sipType_QByteArray, SIP_NULLPTR, a1);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(bl)", &sipRes, a2);

    return sipRes;
}

 ::QPainter* sipVH_QtOpenGL_3(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::QPainter* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_QPainter, &sipRes);

    return sipRes;
}

void sipVH_QtOpenGL_2(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QPainter*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QPainter, SIP_NULLPTR);
}

void sipVH_QtOpenGL_1(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "");
}

bool sipVH_QtOpenGL_0(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::QGLContext*a0)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", const_cast< ::QGLContext *>(a0), sipType_QGLContext, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}


/* Convert to a sub-class if possible. */
extern "C" {static const sipTypeDef *sipSubClass_QGLWidget(void **);}
static const sipTypeDef *sipSubClass_QGLWidget(void **sipCppRet)
{
     ::QObject *sipCpp = reinterpret_cast< ::QObject *>(*sipCppRet);
    const sipTypeDef *sipType;

#line 248 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/sip/QtOpenGL/qgl.sip"
    static struct class_graph {
        const char *name;
        sipTypeDef **type;
        int yes, no;
    } graph[] = {
        {sipName_QGLWidget, &sipType_QGLWidget, -1, -1},
    };
    
    int i = 0;
    
    sipType = NULL;
    
    do
    {
        struct class_graph *cg = &graph[i];
    
        if (cg->name != NULL && sipCpp->inherits(cg->name))
        {
            sipType = *cg->type;
            i = cg->yes;
        }
        else
            i = cg->no;
    }
    while (i >= 0);
#line 663 "/home/fernandaabreu/projetos/MyTicketsSearcher/PyQt5-5.13.2/QtOpenGL/sipQtOpenGLcmodule.cpp"

    return sipType;
}


extern "C" {static PyObject *slot_QGLContext_BindOption___or__(PyObject *,PyObject *);}
static PyObject *slot_QGLContext_BindOption___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGLContext::BindOption a0;
         ::QGLContext::BindOptions* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QGLContext_BindOption, &a0, sipType_QGLContext_BindOptions, &a1, &a1State))
        {
             ::QGLContext::BindOptions*sipRes;

            sipRes = new  ::QGLContext::BindOptions((a0 | *a1));
            sipReleaseType(a1,sipType_QGLContext_BindOptions,a1State);

            return sipConvertFromNewType(sipRes,sipType_QGLContext_BindOptions,SIP_NULLPTR);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QGLContext_BindOption[] = {
    {(void *)slot_QGLContext_BindOption___or__, or_slot},
    {0, (sipPySlotType)0}
};



extern "C" {static PyObject *slot_QGLFormat_OpenGLVersionFlag___or__(PyObject *,PyObject *);}
static PyObject *slot_QGLFormat_OpenGLVersionFlag___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGLFormat::OpenGLVersionFlag a0;
         ::QGLFormat::OpenGLVersionFlags* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QGLFormat_OpenGLVersionFlag, &a0, sipType_QGLFormat_OpenGLVersionFlags, &a1, &a1State))
        {
             ::QGLFormat::OpenGLVersionFlags*sipRes;

            sipRes = new  ::QGLFormat::OpenGLVersionFlags((a0 | *a1));
            sipReleaseType(a1,sipType_QGLFormat_OpenGLVersionFlags,a1State);

            return sipConvertFromNewType(sipRes,sipType_QGLFormat_OpenGLVersionFlags,SIP_NULLPTR);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QGLFormat_OpenGLVersionFlag[] = {
    {(void *)slot_QGLFormat_OpenGLVersionFlag___or__, or_slot},
    {0, (sipPySlotType)0}
};



extern "C" {static PyObject *slot_QGL_FormatOption___or__(PyObject *,PyObject *);}
static PyObject *slot_QGL_FormatOption___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QGL::FormatOption a0;
         ::QGL::FormatOptions* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QGL_FormatOption, &a0, sipType_QGL_FormatOptions, &a1, &a1State))
        {
             ::QGL::FormatOptions*sipRes;

            sipRes = new  ::QGL::FormatOptions((a0 | *a1));
            sipReleaseType(a1,sipType_QGL_FormatOptions,a1State);

            return sipConvertFromNewType(sipRes,sipType_QGL_FormatOptions,SIP_NULLPTR);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QGL_FormatOption[] = {
    {(void *)slot_QGL_FormatOption___or__, or_slot},
    {0, (sipPySlotType)0}
};

static sipEnumTypeDef enumTypes[] = {
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QGLContext__BindOption, SIP_NULLPTR, 0}, sipNameNr_BindOption, 3, slots_QGLContext_BindOption},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QGLFormat__OpenGLContextProfile, SIP_NULLPTR, 0}, sipNameNr_OpenGLContextProfile, 6, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QGLFormat__OpenGLVersionFlag, SIP_NULLPTR, 0}, sipNameNr_OpenGLVersionFlag, 6, slots_QGLFormat_OpenGLVersionFlag},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QGL__FormatOption, SIP_NULLPTR, 0}, sipNameNr_FormatOption, 0, slots_QGL_FormatOption},
};


/*
 * This defines each type in this module.
 */
sipTypeDef *sipExportedTypes_QtOpenGL[] = {
    &sipTypeDef_QtOpenGL_QGL.ctd_base,
    &enumTypes[3].etd_base,
    &sipTypeDef_QtOpenGL_QGL_FormatOptions.ctd_base,
    &sipTypeDef_QtOpenGL_QGLContext.ctd_base,
    &enumTypes[0].etd_base,
    &sipTypeDef_QtOpenGL_QGLContext_BindOptions.ctd_base,
    &sipTypeDef_QtOpenGL_QGLFormat.ctd_base,
    &enumTypes[1].etd_base,
    &enumTypes[2].etd_base,
    &sipTypeDef_QtOpenGL_QGLFormat_OpenGLVersionFlags.ctd_base,
    &sipTypeDef_QtOpenGL_QGLWidget.ctd_base,
};


/* This defines the types that this module needs to import from QtCore. */
sipImportedTypeDef sipImportedTypes_QtOpenGL_QtCore[] = {
    {"QByteArray"},
    {"QChildEvent"},
    {"QEvent"},
    {"QMetaMethod"},
    {"QObject"},
    {"QPointF"},
    {"QRectF"},
    {"QSize"},
    {"QString"},
    {"QThread"},
    {"QTimerEvent"},
    {"QVariant"},
    {"Qt::InputMethodQuery"},
    {"Qt::WindowFlags"},
    {SIP_NULLPTR}
};


/*
 * This defines the virtual error handlers that this module needs to import
 * from QtCore.
 */
sipImportedVirtErrorHandlerDef sipImportedVirtErrorHandlers_QtOpenGL_QtCore[] = {
    {"PyQt5"},
    {SIP_NULLPTR}
};


/* This defines the types that this module needs to import from QtGui. */
sipImportedTypeDef sipImportedTypes_QtOpenGL_QtGui[] = {
    {"QActionEvent"},
    {"QCloseEvent"},
    {"QColor"},
    {"QContextMenuEvent"},
    {"QDragEnterEvent"},
    {"QDragLeaveEvent"},
    {"QDragMoveEvent"},
    {"QDropEvent"},
    {"QFocusEvent"},
    {"QFont"},
    {"QHideEvent"},
    {"QImage"},
    {"QInputMethodEvent"},
    {"QKeyEvent"},
    {"QMouseEvent"},
    {"QMoveEvent"},
    {"QPaintDevice"},
    {"QPaintDevice::PaintDeviceMetric"},
    {"QPaintEngine"},
    {"QPaintEvent"},
    {"QPainter"},
    {"QPixmap"},
    {"QResizeEvent"},
    {"QShowEvent"},
    {"QTabletEvent"},
    {"QWheelEvent"},
    {SIP_NULLPTR}
};


/* This defines the types that this module needs to import from QtWidgets. */
sipImportedTypeDef sipImportedTypes_QtOpenGL_QtWidgets[] = {
    {"QWidget"},
    {SIP_NULLPTR}
};


/* This defines the modules that this module needs to import. */
static sipImportedModuleDef importsTable[] = {
    {"PyQt5.QtCore", sipImportedTypes_QtOpenGL_QtCore, sipImportedVirtErrorHandlers_QtOpenGL_QtCore, SIP_NULLPTR},
    {"PyQt5.QtGui", sipImportedTypes_QtOpenGL_QtGui, SIP_NULLPTR, SIP_NULLPTR},
    {"PyQt5.QtWidgets", sipImportedTypes_QtOpenGL_QtWidgets, SIP_NULLPTR, SIP_NULLPTR},
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
};


/* This defines the class sub-convertors that this module defines. */
static sipSubClassConvertorDef convertorsTable[] = {
    {sipSubClass_QGLWidget, {4, 0, 0}, SIP_NULLPTR},
    {SIP_NULLPTR, {0, 0, 0}, SIP_NULLPTR}
};


/* This defines this module. */
sipExportedModuleDef sipModuleAPI_QtOpenGL = {
    0,
    SIP_ABI_MINOR_VERSION,
    sipNameNr_PyQt5_QtOpenGL,
    0,
    sipStrings_QtOpenGL,
    importsTable,
    SIP_NULLPTR,
    11,
    sipExportedTypes_QtOpenGL,
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    SIP_NULLPTR,
    convertorsTable,
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};


/* The SIP API and the APIs of any imported modules. */
const sipAPIDef *sipAPI_QtOpenGL;

sip_qt_metaobject_func sip_QtOpenGL_qt_metaobject;
sip_qt_metacall_func sip_QtOpenGL_qt_metacall;
sip_qt_metacast_func sip_QtOpenGL_qt_metacast;


/* The Python module initialisation function. */
#if defined(SIP_STATIC_MODULE)
extern "C" PyObject *PyInit_QtOpenGL()
#else
PyMODINIT_FUNC PyInit_QtOpenGL()
#endif
{
    static PyMethodDef sip_methods[] = {
        {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
    };

    static PyModuleDef sip_module_def = {
        PyModuleDef_HEAD_INIT,
        "PyQt5.QtOpenGL",
        SIP_NULLPTR,
        -1,
        sip_methods,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_NULLPTR
    };

    PyObject *sipModule, *sipModuleDict;
    PyObject *sip_sipmod, *sip_capiobj;

    /* Initialise the module and get it's dictionary. */
    if ((sipModule = PyModule_Create(&sip_module_def)) == SIP_NULLPTR)
        return SIP_NULLPTR;

    sipModuleDict = PyModule_GetDict(sipModule);

    /* Get the SIP module's API. */
    if ((sip_sipmod = PyImport_ImportModule("PyQt5.sip")) == SIP_NULLPTR)
    {
        Py_DECREF(sipModule);
        return SIP_NULLPTR;
    }

    sip_capiobj = PyDict_GetItemString(PyModule_GetDict(sip_sipmod), "_C_API");
    Py_DECREF(sip_sipmod);

    if (sip_capiobj == SIP_NULLPTR || !PyCapsule_CheckExact(sip_capiobj))
    {
        PyErr_SetString(PyExc_AttributeError, "PyQt5.sip._C_API is missing or has the wrong type");
        Py_DECREF(sipModule);
        return SIP_NULLPTR;
    }

    sipAPI_QtOpenGL = reinterpret_cast<const sipAPIDef *>(PyCapsule_GetPointer(sip_capiobj, "PyQt5.sip._C_API"));

    if (sipAPI_QtOpenGL == SIP_NULLPTR)
    {
        Py_DECREF(sipModule);
        return SIP_NULLPTR;
    }

    /* Export the module and publish it's API. */
    if (sipExportModule(&sipModuleAPI_QtOpenGL, SIP_ABI_MAJOR_VERSION, SIP_ABI_MINOR_VERSION, 0) < 0)
    {
        Py_DECREF(sipModule);
        return SIP_NULLPTR;
    }

    sip_QtOpenGL_qt_metaobject = (sip_qt_metaobject_func)sipImportSymbol("qtcore_qt_metaobject");
    sip_QtOpenGL_qt_metacall = (sip_qt_metacall_func)sipImportSymbol("qtcore_qt_metacall");
    sip_QtOpenGL_qt_metacast = (sip_qt_metacast_func)sipImportSymbol("qtcore_qt_metacast");

    if (!sip_QtOpenGL_qt_metacast)
        Py_FatalError("Unable to import qtcore_qt_metacast");

    /* Initialise the module now all its dependencies have been set up. */
    if (sipInitModule(&sipModuleAPI_QtOpenGL,sipModuleDict) < 0)
    {
        Py_DECREF(sipModule);
        return SIP_NULLPTR;
    }

    return sipModule;
}
